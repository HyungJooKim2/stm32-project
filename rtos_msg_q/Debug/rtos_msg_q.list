
rtos_msg_q.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000a908  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000004c4  0800aab8  0800aab8  0001aab8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800af7c  0800af7c  0002006c  2**0
                  CONTENTS
  4 .ARM          00000008  0800af7c  0800af7c  0001af7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800af84  0800af84  0002006c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800af84  0800af84  0001af84  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800af88  0800af88  0001af88  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000006c  20000000  0800af8c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0002006c  2**0
                  CONTENTS
 10 .bss          00005d38  2000006c  2000006c  0002006c  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20005da4  20005da4  0002006c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0002006c  2**0
                  CONTENTS, READONLY
 13 .comment      00000086  00000000  00000000  0002009c  2**0
                  CONTENTS, READONLY
 14 .debug_info   00021915  00000000  00000000  00020122  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00004931  00000000  00000000  00041a37  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00001b70  00000000  00000000  00046368  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 00001548  00000000  00000000  00047ed8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  000296f7  00000000  00000000  00049420  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00020734  00000000  00000000  00072b17  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    000efe74  00000000  00000000  0009324b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  0000803c  00000000  00000000  001830c0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000047  00000000  00000000  0018b0fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000006c 	.word	0x2000006c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0800aaa0 	.word	0x0800aaa0

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000070 	.word	0x20000070
 80001ec:	0800aaa0 	.word	0x0800aaa0

080001f0 <strcmp>:
 80001f0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80001f4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80001f8:	2a01      	cmp	r2, #1
 80001fa:	bf28      	it	cs
 80001fc:	429a      	cmpcs	r2, r3
 80001fe:	d0f7      	beq.n	80001f0 <strcmp>
 8000200:	1ad0      	subs	r0, r2, r3
 8000202:	4770      	bx	lr

08000204 <strlen>:
 8000204:	4603      	mov	r3, r0
 8000206:	f813 2b01 	ldrb.w	r2, [r3], #1
 800020a:	2a00      	cmp	r2, #0
 800020c:	d1fb      	bne.n	8000206 <strlen+0x2>
 800020e:	1a18      	subs	r0, r3, r0
 8000210:	3801      	subs	r0, #1
 8000212:	4770      	bx	lr
	...

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_uldivmod>:
 80002c0:	b953      	cbnz	r3, 80002d8 <__aeabi_uldivmod+0x18>
 80002c2:	b94a      	cbnz	r2, 80002d8 <__aeabi_uldivmod+0x18>
 80002c4:	2900      	cmp	r1, #0
 80002c6:	bf08      	it	eq
 80002c8:	2800      	cmpeq	r0, #0
 80002ca:	bf1c      	itt	ne
 80002cc:	f04f 31ff 	movne.w	r1, #4294967295
 80002d0:	f04f 30ff 	movne.w	r0, #4294967295
 80002d4:	f000 b970 	b.w	80005b8 <__aeabi_idiv0>
 80002d8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002dc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002e0:	f000 f806 	bl	80002f0 <__udivmoddi4>
 80002e4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002e8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ec:	b004      	add	sp, #16
 80002ee:	4770      	bx	lr

080002f0 <__udivmoddi4>:
 80002f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002f4:	9e08      	ldr	r6, [sp, #32]
 80002f6:	460d      	mov	r5, r1
 80002f8:	4604      	mov	r4, r0
 80002fa:	460f      	mov	r7, r1
 80002fc:	2b00      	cmp	r3, #0
 80002fe:	d14a      	bne.n	8000396 <__udivmoddi4+0xa6>
 8000300:	428a      	cmp	r2, r1
 8000302:	4694      	mov	ip, r2
 8000304:	d965      	bls.n	80003d2 <__udivmoddi4+0xe2>
 8000306:	fab2 f382 	clz	r3, r2
 800030a:	b143      	cbz	r3, 800031e <__udivmoddi4+0x2e>
 800030c:	fa02 fc03 	lsl.w	ip, r2, r3
 8000310:	f1c3 0220 	rsb	r2, r3, #32
 8000314:	409f      	lsls	r7, r3
 8000316:	fa20 f202 	lsr.w	r2, r0, r2
 800031a:	4317      	orrs	r7, r2
 800031c:	409c      	lsls	r4, r3
 800031e:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000322:	fa1f f58c 	uxth.w	r5, ip
 8000326:	fbb7 f1fe 	udiv	r1, r7, lr
 800032a:	0c22      	lsrs	r2, r4, #16
 800032c:	fb0e 7711 	mls	r7, lr, r1, r7
 8000330:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000334:	fb01 f005 	mul.w	r0, r1, r5
 8000338:	4290      	cmp	r0, r2
 800033a:	d90a      	bls.n	8000352 <__udivmoddi4+0x62>
 800033c:	eb1c 0202 	adds.w	r2, ip, r2
 8000340:	f101 37ff 	add.w	r7, r1, #4294967295
 8000344:	f080 811c 	bcs.w	8000580 <__udivmoddi4+0x290>
 8000348:	4290      	cmp	r0, r2
 800034a:	f240 8119 	bls.w	8000580 <__udivmoddi4+0x290>
 800034e:	3902      	subs	r1, #2
 8000350:	4462      	add	r2, ip
 8000352:	1a12      	subs	r2, r2, r0
 8000354:	b2a4      	uxth	r4, r4
 8000356:	fbb2 f0fe 	udiv	r0, r2, lr
 800035a:	fb0e 2210 	mls	r2, lr, r0, r2
 800035e:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000362:	fb00 f505 	mul.w	r5, r0, r5
 8000366:	42a5      	cmp	r5, r4
 8000368:	d90a      	bls.n	8000380 <__udivmoddi4+0x90>
 800036a:	eb1c 0404 	adds.w	r4, ip, r4
 800036e:	f100 32ff 	add.w	r2, r0, #4294967295
 8000372:	f080 8107 	bcs.w	8000584 <__udivmoddi4+0x294>
 8000376:	42a5      	cmp	r5, r4
 8000378:	f240 8104 	bls.w	8000584 <__udivmoddi4+0x294>
 800037c:	4464      	add	r4, ip
 800037e:	3802      	subs	r0, #2
 8000380:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000384:	1b64      	subs	r4, r4, r5
 8000386:	2100      	movs	r1, #0
 8000388:	b11e      	cbz	r6, 8000392 <__udivmoddi4+0xa2>
 800038a:	40dc      	lsrs	r4, r3
 800038c:	2300      	movs	r3, #0
 800038e:	e9c6 4300 	strd	r4, r3, [r6]
 8000392:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000396:	428b      	cmp	r3, r1
 8000398:	d908      	bls.n	80003ac <__udivmoddi4+0xbc>
 800039a:	2e00      	cmp	r6, #0
 800039c:	f000 80ed 	beq.w	800057a <__udivmoddi4+0x28a>
 80003a0:	2100      	movs	r1, #0
 80003a2:	e9c6 0500 	strd	r0, r5, [r6]
 80003a6:	4608      	mov	r0, r1
 80003a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003ac:	fab3 f183 	clz	r1, r3
 80003b0:	2900      	cmp	r1, #0
 80003b2:	d149      	bne.n	8000448 <__udivmoddi4+0x158>
 80003b4:	42ab      	cmp	r3, r5
 80003b6:	d302      	bcc.n	80003be <__udivmoddi4+0xce>
 80003b8:	4282      	cmp	r2, r0
 80003ba:	f200 80f8 	bhi.w	80005ae <__udivmoddi4+0x2be>
 80003be:	1a84      	subs	r4, r0, r2
 80003c0:	eb65 0203 	sbc.w	r2, r5, r3
 80003c4:	2001      	movs	r0, #1
 80003c6:	4617      	mov	r7, r2
 80003c8:	2e00      	cmp	r6, #0
 80003ca:	d0e2      	beq.n	8000392 <__udivmoddi4+0xa2>
 80003cc:	e9c6 4700 	strd	r4, r7, [r6]
 80003d0:	e7df      	b.n	8000392 <__udivmoddi4+0xa2>
 80003d2:	b902      	cbnz	r2, 80003d6 <__udivmoddi4+0xe6>
 80003d4:	deff      	udf	#255	; 0xff
 80003d6:	fab2 f382 	clz	r3, r2
 80003da:	2b00      	cmp	r3, #0
 80003dc:	f040 8090 	bne.w	8000500 <__udivmoddi4+0x210>
 80003e0:	1a8a      	subs	r2, r1, r2
 80003e2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003e6:	fa1f fe8c 	uxth.w	lr, ip
 80003ea:	2101      	movs	r1, #1
 80003ec:	fbb2 f5f7 	udiv	r5, r2, r7
 80003f0:	fb07 2015 	mls	r0, r7, r5, r2
 80003f4:	0c22      	lsrs	r2, r4, #16
 80003f6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80003fa:	fb0e f005 	mul.w	r0, lr, r5
 80003fe:	4290      	cmp	r0, r2
 8000400:	d908      	bls.n	8000414 <__udivmoddi4+0x124>
 8000402:	eb1c 0202 	adds.w	r2, ip, r2
 8000406:	f105 38ff 	add.w	r8, r5, #4294967295
 800040a:	d202      	bcs.n	8000412 <__udivmoddi4+0x122>
 800040c:	4290      	cmp	r0, r2
 800040e:	f200 80cb 	bhi.w	80005a8 <__udivmoddi4+0x2b8>
 8000412:	4645      	mov	r5, r8
 8000414:	1a12      	subs	r2, r2, r0
 8000416:	b2a4      	uxth	r4, r4
 8000418:	fbb2 f0f7 	udiv	r0, r2, r7
 800041c:	fb07 2210 	mls	r2, r7, r0, r2
 8000420:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000424:	fb0e fe00 	mul.w	lr, lr, r0
 8000428:	45a6      	cmp	lr, r4
 800042a:	d908      	bls.n	800043e <__udivmoddi4+0x14e>
 800042c:	eb1c 0404 	adds.w	r4, ip, r4
 8000430:	f100 32ff 	add.w	r2, r0, #4294967295
 8000434:	d202      	bcs.n	800043c <__udivmoddi4+0x14c>
 8000436:	45a6      	cmp	lr, r4
 8000438:	f200 80bb 	bhi.w	80005b2 <__udivmoddi4+0x2c2>
 800043c:	4610      	mov	r0, r2
 800043e:	eba4 040e 	sub.w	r4, r4, lr
 8000442:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000446:	e79f      	b.n	8000388 <__udivmoddi4+0x98>
 8000448:	f1c1 0720 	rsb	r7, r1, #32
 800044c:	408b      	lsls	r3, r1
 800044e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000452:	ea4c 0c03 	orr.w	ip, ip, r3
 8000456:	fa05 f401 	lsl.w	r4, r5, r1
 800045a:	fa20 f307 	lsr.w	r3, r0, r7
 800045e:	40fd      	lsrs	r5, r7
 8000460:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000464:	4323      	orrs	r3, r4
 8000466:	fbb5 f8f9 	udiv	r8, r5, r9
 800046a:	fa1f fe8c 	uxth.w	lr, ip
 800046e:	fb09 5518 	mls	r5, r9, r8, r5
 8000472:	0c1c      	lsrs	r4, r3, #16
 8000474:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000478:	fb08 f50e 	mul.w	r5, r8, lr
 800047c:	42a5      	cmp	r5, r4
 800047e:	fa02 f201 	lsl.w	r2, r2, r1
 8000482:	fa00 f001 	lsl.w	r0, r0, r1
 8000486:	d90b      	bls.n	80004a0 <__udivmoddi4+0x1b0>
 8000488:	eb1c 0404 	adds.w	r4, ip, r4
 800048c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000490:	f080 8088 	bcs.w	80005a4 <__udivmoddi4+0x2b4>
 8000494:	42a5      	cmp	r5, r4
 8000496:	f240 8085 	bls.w	80005a4 <__udivmoddi4+0x2b4>
 800049a:	f1a8 0802 	sub.w	r8, r8, #2
 800049e:	4464      	add	r4, ip
 80004a0:	1b64      	subs	r4, r4, r5
 80004a2:	b29d      	uxth	r5, r3
 80004a4:	fbb4 f3f9 	udiv	r3, r4, r9
 80004a8:	fb09 4413 	mls	r4, r9, r3, r4
 80004ac:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 80004b0:	fb03 fe0e 	mul.w	lr, r3, lr
 80004b4:	45a6      	cmp	lr, r4
 80004b6:	d908      	bls.n	80004ca <__udivmoddi4+0x1da>
 80004b8:	eb1c 0404 	adds.w	r4, ip, r4
 80004bc:	f103 35ff 	add.w	r5, r3, #4294967295
 80004c0:	d26c      	bcs.n	800059c <__udivmoddi4+0x2ac>
 80004c2:	45a6      	cmp	lr, r4
 80004c4:	d96a      	bls.n	800059c <__udivmoddi4+0x2ac>
 80004c6:	3b02      	subs	r3, #2
 80004c8:	4464      	add	r4, ip
 80004ca:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80004ce:	fba3 9502 	umull	r9, r5, r3, r2
 80004d2:	eba4 040e 	sub.w	r4, r4, lr
 80004d6:	42ac      	cmp	r4, r5
 80004d8:	46c8      	mov	r8, r9
 80004da:	46ae      	mov	lr, r5
 80004dc:	d356      	bcc.n	800058c <__udivmoddi4+0x29c>
 80004de:	d053      	beq.n	8000588 <__udivmoddi4+0x298>
 80004e0:	b156      	cbz	r6, 80004f8 <__udivmoddi4+0x208>
 80004e2:	ebb0 0208 	subs.w	r2, r0, r8
 80004e6:	eb64 040e 	sbc.w	r4, r4, lr
 80004ea:	fa04 f707 	lsl.w	r7, r4, r7
 80004ee:	40ca      	lsrs	r2, r1
 80004f0:	40cc      	lsrs	r4, r1
 80004f2:	4317      	orrs	r7, r2
 80004f4:	e9c6 7400 	strd	r7, r4, [r6]
 80004f8:	4618      	mov	r0, r3
 80004fa:	2100      	movs	r1, #0
 80004fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000500:	f1c3 0120 	rsb	r1, r3, #32
 8000504:	fa02 fc03 	lsl.w	ip, r2, r3
 8000508:	fa20 f201 	lsr.w	r2, r0, r1
 800050c:	fa25 f101 	lsr.w	r1, r5, r1
 8000510:	409d      	lsls	r5, r3
 8000512:	432a      	orrs	r2, r5
 8000514:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000518:	fa1f fe8c 	uxth.w	lr, ip
 800051c:	fbb1 f0f7 	udiv	r0, r1, r7
 8000520:	fb07 1510 	mls	r5, r7, r0, r1
 8000524:	0c11      	lsrs	r1, r2, #16
 8000526:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 800052a:	fb00 f50e 	mul.w	r5, r0, lr
 800052e:	428d      	cmp	r5, r1
 8000530:	fa04 f403 	lsl.w	r4, r4, r3
 8000534:	d908      	bls.n	8000548 <__udivmoddi4+0x258>
 8000536:	eb1c 0101 	adds.w	r1, ip, r1
 800053a:	f100 38ff 	add.w	r8, r0, #4294967295
 800053e:	d22f      	bcs.n	80005a0 <__udivmoddi4+0x2b0>
 8000540:	428d      	cmp	r5, r1
 8000542:	d92d      	bls.n	80005a0 <__udivmoddi4+0x2b0>
 8000544:	3802      	subs	r0, #2
 8000546:	4461      	add	r1, ip
 8000548:	1b49      	subs	r1, r1, r5
 800054a:	b292      	uxth	r2, r2
 800054c:	fbb1 f5f7 	udiv	r5, r1, r7
 8000550:	fb07 1115 	mls	r1, r7, r5, r1
 8000554:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000558:	fb05 f10e 	mul.w	r1, r5, lr
 800055c:	4291      	cmp	r1, r2
 800055e:	d908      	bls.n	8000572 <__udivmoddi4+0x282>
 8000560:	eb1c 0202 	adds.w	r2, ip, r2
 8000564:	f105 38ff 	add.w	r8, r5, #4294967295
 8000568:	d216      	bcs.n	8000598 <__udivmoddi4+0x2a8>
 800056a:	4291      	cmp	r1, r2
 800056c:	d914      	bls.n	8000598 <__udivmoddi4+0x2a8>
 800056e:	3d02      	subs	r5, #2
 8000570:	4462      	add	r2, ip
 8000572:	1a52      	subs	r2, r2, r1
 8000574:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000578:	e738      	b.n	80003ec <__udivmoddi4+0xfc>
 800057a:	4631      	mov	r1, r6
 800057c:	4630      	mov	r0, r6
 800057e:	e708      	b.n	8000392 <__udivmoddi4+0xa2>
 8000580:	4639      	mov	r1, r7
 8000582:	e6e6      	b.n	8000352 <__udivmoddi4+0x62>
 8000584:	4610      	mov	r0, r2
 8000586:	e6fb      	b.n	8000380 <__udivmoddi4+0x90>
 8000588:	4548      	cmp	r0, r9
 800058a:	d2a9      	bcs.n	80004e0 <__udivmoddi4+0x1f0>
 800058c:	ebb9 0802 	subs.w	r8, r9, r2
 8000590:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000594:	3b01      	subs	r3, #1
 8000596:	e7a3      	b.n	80004e0 <__udivmoddi4+0x1f0>
 8000598:	4645      	mov	r5, r8
 800059a:	e7ea      	b.n	8000572 <__udivmoddi4+0x282>
 800059c:	462b      	mov	r3, r5
 800059e:	e794      	b.n	80004ca <__udivmoddi4+0x1da>
 80005a0:	4640      	mov	r0, r8
 80005a2:	e7d1      	b.n	8000548 <__udivmoddi4+0x258>
 80005a4:	46d0      	mov	r8, sl
 80005a6:	e77b      	b.n	80004a0 <__udivmoddi4+0x1b0>
 80005a8:	3d02      	subs	r5, #2
 80005aa:	4462      	add	r2, ip
 80005ac:	e732      	b.n	8000414 <__udivmoddi4+0x124>
 80005ae:	4608      	mov	r0, r1
 80005b0:	e70a      	b.n	80003c8 <__udivmoddi4+0xd8>
 80005b2:	4464      	add	r4, ip
 80005b4:	3802      	subs	r0, #2
 80005b6:	e742      	b.n	800043e <__udivmoddi4+0x14e>

080005b8 <__aeabi_idiv0>:
 80005b8:	4770      	bx	lr
 80005ba:	bf00      	nop

080005bc <app_init>:

static void thread1_Task(void *arg);


void app_init(void)
{
 80005bc:	b580      	push	{r7, lr}
 80005be:	af00      	add	r7, sp, #0
  printf("System start....\r\n");
 80005c0:	4802      	ldr	r0, [pc, #8]	; (80005cc <app_init+0x10>)
 80005c2:	f009 f8e7 	bl	8009794 <puts>
}
 80005c6:	bf00      	nop
 80005c8:	bd80      	pop	{r7, pc}
 80005ca:	bf00      	nop
 80005cc:	0800aac0 	.word	0x0800aac0

080005d0 <app>:

void app(void)
{
 80005d0:	b580      	push	{r7, lr}
 80005d2:	af00      	add	r7, sp, #0
  osKernelInitialize();
 80005d4:	f005 fe4a 	bl	800626c <osKernelInitialize>

  app_init();
 80005d8:	f7ff fff0 	bl	80005bc <app_init>
  led_init();
 80005dc:	f000 fa54 	bl	8000a88 <led_init>
  pwm_init();
 80005e0:	f000 fd6c 	bl	80010bc <pwm_init>
  uart_init();
 80005e4:	f001 f932 	bl	800184c <uart_init>
  cli_init();
 80005e8:	f000 fa44 	bl	8000a74 <cli_init>
  bt_init();
 80005ec:	f000 f81a 	bl	8000624 <bt_init>

  thread1_handle = osThreadNew(thread1_Task, NULL, &thread1_attributes);
 80005f0:	4a05      	ldr	r2, [pc, #20]	; (8000608 <app+0x38>)
 80005f2:	2100      	movs	r1, #0
 80005f4:	4805      	ldr	r0, [pc, #20]	; (800060c <app+0x3c>)
 80005f6:	f005 fe83 	bl	8006300 <osThreadNew>
 80005fa:	4603      	mov	r3, r0
 80005fc:	4a04      	ldr	r2, [pc, #16]	; (8000610 <app+0x40>)
 80005fe:	6013      	str	r3, [r2, #0]


  osKernelStart();
 8000600:	f005 fe58 	bl	80062b4 <osKernelStart>

  while (1);
 8000604:	e7fe      	b.n	8000604 <app+0x34>
 8000606:	bf00      	nop
 8000608:	0800ac74 	.word	0x0800ac74
 800060c:	08000615 	.word	0x08000615
 8000610:	20000088 	.word	0x20000088

08000614 <thread1_Task>:
}

static void thread1_Task(void *arg)
{
 8000614:	b580      	push	{r7, lr}
 8000616:	b082      	sub	sp, #8
 8000618:	af00      	add	r7, sp, #0
 800061a:	6078      	str	r0, [r7, #4]
  for(;;) {
    osDelay(200);
 800061c:	20c8      	movs	r0, #200	; 0xc8
 800061e:	f005 ff02 	bl	8006426 <osDelay>
 8000622:	e7fb      	b.n	800061c <thread1_Task+0x8>

08000624 <bt_init>:
};

static void btProc_Task(void *arg);

void bt_init(void)
{
 8000624:	b580      	push	{r7, lr}
 8000626:	af00      	add	r7, sp, #0
  btTask_handle = osThreadNew(btProc_Task, NULL, &btTask_attributes);
 8000628:	4a14      	ldr	r2, [pc, #80]	; (800067c <bt_init+0x58>)
 800062a:	2100      	movs	r1, #0
 800062c:	4814      	ldr	r0, [pc, #80]	; (8000680 <bt_init+0x5c>)
 800062e:	f005 fe67 	bl	8006300 <osThreadNew>
 8000632:	4603      	mov	r3, r0
 8000634:	4a13      	ldr	r2, [pc, #76]	; (8000684 <bt_init+0x60>)
 8000636:	6013      	str	r3, [r2, #0]
  if (btTask_handle == NULL) {
 8000638:	4b12      	ldr	r3, [pc, #72]	; (8000684 <bt_init+0x60>)
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	2b00      	cmp	r3, #0
 800063e:	d105      	bne.n	800064c <bt_init+0x28>
  	printf("%s : %d\r\n", __func__, __LINE__);
 8000640:	2228      	movs	r2, #40	; 0x28
 8000642:	4911      	ldr	r1, [pc, #68]	; (8000688 <bt_init+0x64>)
 8000644:	4811      	ldr	r0, [pc, #68]	; (800068c <bt_init+0x68>)
 8000646:	f009 f83f 	bl	80096c8 <iprintf>
  	while (1);
 800064a:	e7fe      	b.n	800064a <bt_init+0x26>
  }

  msgBufQ_handle = osMessageQueueNew(5, sizeof(MSG_T), NULL);
 800064c:	2200      	movs	r2, #0
 800064e:	210a      	movs	r1, #10
 8000650:	2005      	movs	r0, #5
 8000652:	f005 ffc3 	bl	80065dc <osMessageQueueNew>
 8000656:	4603      	mov	r3, r0
 8000658:	4a0d      	ldr	r2, [pc, #52]	; (8000690 <bt_init+0x6c>)
 800065a:	6013      	str	r3, [r2, #0]
  if (msgBufQ_handle == NULL) {
 800065c:	4b0c      	ldr	r3, [pc, #48]	; (8000690 <bt_init+0x6c>)
 800065e:	681b      	ldr	r3, [r3, #0]
 8000660:	2b00      	cmp	r3, #0
 8000662:	d105      	bne.n	8000670 <bt_init+0x4c>
  	printf("%s : %d\r\n", __func__, __LINE__);
 8000664:	222e      	movs	r2, #46	; 0x2e
 8000666:	4908      	ldr	r1, [pc, #32]	; (8000688 <bt_init+0x64>)
 8000668:	4808      	ldr	r0, [pc, #32]	; (800068c <bt_init+0x68>)
 800066a:	f009 f82d 	bl	80096c8 <iprintf>
  	while (1);
 800066e:	e7fe      	b.n	800066e <bt_init+0x4a>
  }

  printf("Bluetooth Initialized...\r\n");
 8000670:	4808      	ldr	r0, [pc, #32]	; (8000694 <bt_init+0x70>)
 8000672:	f009 f88f 	bl	8009794 <puts>
}
 8000676:	bf00      	nop
 8000678:	bd80      	pop	{r7, pc}
 800067a:	bf00      	nop
 800067c:	0800ac98 	.word	0x0800ac98
 8000680:	08000829 	.word	0x08000829
 8000684:	20000090 	.word	0x20000090
 8000688:	0800acbc 	.word	0x0800acbc
 800068c:	0800aad4 	.word	0x0800aad4
 8000690:	2000008c 	.word	0x2000008c
 8000694:	0800aae0 	.word	0x0800aae0

08000698 <bt_QPut>:

void bt_QPut(const void *msg_ptr, uint8_t msg_prio, uint32_t timeout)
{
 8000698:	b580      	push	{r7, lr}
 800069a:	b084      	sub	sp, #16
 800069c:	af00      	add	r7, sp, #0
 800069e:	60f8      	str	r0, [r7, #12]
 80006a0:	460b      	mov	r3, r1
 80006a2:	607a      	str	r2, [r7, #4]
 80006a4:	72fb      	strb	r3, [r7, #11]
	osMessageQueuePut(msgBufQ_handle, msg_ptr, msg_prio, timeout);
 80006a6:	4b05      	ldr	r3, [pc, #20]	; (80006bc <bt_QPut+0x24>)
 80006a8:	6818      	ldr	r0, [r3, #0]
 80006aa:	7afa      	ldrb	r2, [r7, #11]
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	68f9      	ldr	r1, [r7, #12]
 80006b0:	f006 f808 	bl	80066c4 <osMessageQueuePut>
}
 80006b4:	bf00      	nop
 80006b6:	3710      	adds	r7, #16
 80006b8:	46bd      	mov	sp, r7
 80006ba:	bd80      	pop	{r7, pc}
 80006bc:	2000008c 	.word	0x2000008c

080006c0 <func_s0>:
//void func_s3(void);
//void func_s4(void);


void func_s0(void)
{
 80006c0:	b580      	push	{r7, lr}
 80006c2:	b088      	sub	sp, #32
 80006c4:	af00      	add	r7, sp, #0
	//char buf[50];
	MSG_T qTx, qRx;

	if (s_state == 0) {
 80006c6:	4b2e      	ldr	r3, [pc, #184]	; (8000780 <func_s0+0xc0>)
 80006c8:	781b      	ldrb	r3, [r3, #0]
 80006ca:	2b00      	cmp	r3, #0
 80006cc:	d126      	bne.n	800071c <func_s0+0x5c>
		printf("BT status : S0\r\n");
 80006ce:	482d      	ldr	r0, [pc, #180]	; (8000784 <func_s0+0xc4>)
 80006d0:	f009 f860 	bl	8009794 <puts>

		qTx.id = E_MSG_UART2_TX_N_CHECK;
 80006d4:	2311      	movs	r3, #17
 80006d6:	743b      	strb	r3, [r7, #16]
		sprintf(msg_buf, "AT");
 80006d8:	492b      	ldr	r1, [pc, #172]	; (8000788 <func_s0+0xc8>)
 80006da:	482c      	ldr	r0, [pc, #176]	; (800078c <func_s0+0xcc>)
 80006dc:	f009 f862 	bl	80097a4 <siprintf>
		qTx.len = strlen(msg_buf);
 80006e0:	482a      	ldr	r0, [pc, #168]	; (800078c <func_s0+0xcc>)
 80006e2:	f7ff fd8f 	bl	8000204 <strlen>
 80006e6:	4603      	mov	r3, r0
 80006e8:	b2db      	uxtb	r3, r3
 80006ea:	747b      	strb	r3, [r7, #17]
		qTx.timeout = 1000;
 80006ec:	2300      	movs	r3, #0
 80006ee:	f443 737a 	orr.w	r3, r3, #1000	; 0x3e8
 80006f2:	82fb      	strh	r3, [r7, #22]
 80006f4:	2300      	movs	r3, #0
 80006f6:	833b      	strh	r3, [r7, #24]
		qTx.pData = (uint8_t *)msg_buf;
 80006f8:	4b24      	ldr	r3, [pc, #144]	; (800078c <func_s0+0xcc>)
 80006fa:	f8c7 3012 	str.w	r3, [r7, #18]
		uart_QPut(&qTx, 0, osWaitForever);
 80006fe:	f107 0310 	add.w	r3, r7, #16
 8000702:	f04f 32ff 	mov.w	r2, #4294967295
 8000706:	2100      	movs	r1, #0
 8000708:	4618      	mov	r0, r3
 800070a:	f001 f915 	bl	8001938 <uart_QPut>

		s_state++;
 800070e:	4b1c      	ldr	r3, [pc, #112]	; (8000780 <func_s0+0xc0>)
 8000710:	781b      	ldrb	r3, [r3, #0]
 8000712:	3301      	adds	r3, #1
 8000714:	b2da      	uxtb	r2, r3
 8000716:	4b1a      	ldr	r3, [pc, #104]	; (8000780 <func_s0+0xc0>)
 8000718:	701a      	strb	r2, [r3, #0]
 800071a:	e02e      	b.n	800077a <func_s0+0xba>
	} else {
		osStatus_t sts = osMessageQueueGet(msgBufQ_handle, &qRx, NULL, osWaitForever);
 800071c:	4b1c      	ldr	r3, [pc, #112]	; (8000790 <func_s0+0xd0>)
 800071e:	6818      	ldr	r0, [r3, #0]
 8000720:	1d39      	adds	r1, r7, #4
 8000722:	f04f 33ff 	mov.w	r3, #4294967295
 8000726:	2200      	movs	r2, #0
 8000728:	f006 f82c 	bl	8006784 <osMessageQueueGet>
 800072c:	61f8      	str	r0, [r7, #28]
		if (sts == osErrorTimeout) {
 800072e:	69fb      	ldr	r3, [r7, #28]
 8000730:	f113 0f02 	cmn.w	r3, #2
 8000734:	d103      	bne.n	800073e <func_s0+0x7e>
			s_state = 0;
 8000736:	4b12      	ldr	r3, [pc, #72]	; (8000780 <func_s0+0xc0>)
 8000738:	2200      	movs	r2, #0
 800073a:	701a      	strb	r2, [r3, #0]
 800073c:	e01d      	b.n	800077a <func_s0+0xba>
		} else if (sts == osOK) {
 800073e:	69fb      	ldr	r3, [r7, #28]
 8000740:	2b00      	cmp	r3, #0
 8000742:	d11a      	bne.n	800077a <func_s0+0xba>
			switch (qRx.id) {
 8000744:	793b      	ldrb	r3, [r7, #4]
 8000746:	2b31      	cmp	r3, #49	; 0x31
 8000748:	d114      	bne.n	8000774 <func_s0+0xb4>
				case E_MSG_BT_RX : {
					if (memcmp(qRx.pData, "OK", 2) == 0) {
 800074a:	f8d7 3006 	ldr.w	r3, [r7, #6]
 800074e:	2202      	movs	r2, #2
 8000750:	4910      	ldr	r1, [pc, #64]	; (8000794 <func_s0+0xd4>)
 8000752:	4618      	mov	r0, r3
 8000754:	f009 f91e 	bl	8009994 <memcmp>
 8000758:	4603      	mov	r3, r0
 800075a:	2b00      	cmp	r3, #0
 800075c:	d109      	bne.n	8000772 <func_s0+0xb2>
						printf("BT status : S1\r\n");
 800075e:	480e      	ldr	r0, [pc, #56]	; (8000798 <func_s0+0xd8>)
 8000760:	f009 f818 	bl	8009794 <puts>
						cbf = func_s1;  // callback function
 8000764:	4b0d      	ldr	r3, [pc, #52]	; (800079c <func_s0+0xdc>)
 8000766:	4a0e      	ldr	r2, [pc, #56]	; (80007a0 <func_s0+0xe0>)
 8000768:	601a      	str	r2, [r3, #0]
						s_state = 0;
 800076a:	4b05      	ldr	r3, [pc, #20]	; (8000780 <func_s0+0xc0>)
 800076c:	2200      	movs	r2, #0
 800076e:	701a      	strb	r2, [r3, #0]
 8000770:	e003      	b.n	800077a <func_s0+0xba>
						return;
					}
				} break;
 8000772:	bf00      	nop
			}  // switch

			s_state = 0;
 8000774:	4b02      	ldr	r3, [pc, #8]	; (8000780 <func_s0+0xc0>)
 8000776:	2200      	movs	r2, #0
 8000778:	701a      	strb	r2, [r3, #0]
		} // else if (sts == osOK) {
	}
}
 800077a:	3720      	adds	r7, #32
 800077c:	46bd      	mov	sp, r7
 800077e:	bd80      	pop	{r7, pc}
 8000780:	20000098 	.word	0x20000098
 8000784:	0800aafc 	.word	0x0800aafc
 8000788:	0800ab0c 	.word	0x0800ab0c
 800078c:	2000009c 	.word	0x2000009c
 8000790:	2000008c 	.word	0x2000008c
 8000794:	0800ab10 	.word	0x0800ab10
 8000798:	0800ab14 	.word	0x0800ab14
 800079c:	20000094 	.word	0x20000094
 80007a0:	080007a5 	.word	0x080007a5

080007a4 <func_s1>:

void func_s1(void)
{
 80007a4:	b580      	push	{r7, lr}
 80007a6:	b088      	sub	sp, #32
 80007a8:	af00      	add	r7, sp, #0
	MSG_T qTx, qRx;

	osStatus_t sts = osMessageQueueGet(msgBufQ_handle, &qRx, NULL, 300);
 80007aa:	4b1e      	ldr	r3, [pc, #120]	; (8000824 <func_s1+0x80>)
 80007ac:	6818      	ldr	r0, [r3, #0]
 80007ae:	1d39      	adds	r1, r7, #4
 80007b0:	f44f 7396 	mov.w	r3, #300	; 0x12c
 80007b4:	2200      	movs	r2, #0
 80007b6:	f005 ffe5 	bl	8006784 <osMessageQueueGet>
 80007ba:	61f8      	str	r0, [r7, #28]

	if (sts == osErrorTimeout) {
 80007bc:	69fb      	ldr	r3, [r7, #28]
 80007be:	f113 0f02 	cmn.w	r3, #2
 80007c2:	d10f      	bne.n	80007e4 <func_s1+0x40>
		qTx.id = E_MSG_UART2_RX_CHECK;
 80007c4:	2313      	movs	r3, #19
 80007c6:	743b      	strb	r3, [r7, #16]
		qTx.timeout = 1;
 80007c8:	2300      	movs	r3, #0
 80007ca:	f043 0301 	orr.w	r3, r3, #1
 80007ce:	82fb      	strh	r3, [r7, #22]
 80007d0:	2300      	movs	r3, #0
 80007d2:	833b      	strh	r3, [r7, #24]
		uart_QPut(&qTx, 0, 0);
 80007d4:	f107 0310 	add.w	r3, r7, #16
 80007d8:	2200      	movs	r2, #0
 80007da:	2100      	movs	r1, #0
 80007dc:	4618      	mov	r0, r3
 80007de:	f001 f8ab 	bl	8001938 <uart_QPut>
				qTx.pData[qTx.len] = '\0';
				//printf("%s\r\n", qTx.pData);
			} break;
		}
	}
}
 80007e2:	e01b      	b.n	800081c <func_s1+0x78>
	} else if (sts == osOK) {
 80007e4:	69fb      	ldr	r3, [r7, #28]
 80007e6:	2b00      	cmp	r3, #0
 80007e8:	d118      	bne.n	800081c <func_s1+0x78>
		switch (qRx.id) {
 80007ea:	793b      	ldrb	r3, [r7, #4]
 80007ec:	2b31      	cmp	r3, #49	; 0x31
 80007ee:	d115      	bne.n	800081c <func_s1+0x78>
				qTx.id = E_MSG_UART2_TX;
 80007f0:	2310      	movs	r3, #16
 80007f2:	743b      	strb	r3, [r7, #16]
				qTx.len = qRx.len;
 80007f4:	797b      	ldrb	r3, [r7, #5]
 80007f6:	747b      	strb	r3, [r7, #17]
				qTx.pData = qRx.pData;
 80007f8:	f8d7 3006 	ldr.w	r3, [r7, #6]
 80007fc:	f8c7 3012 	str.w	r3, [r7, #18]
				uart_QPut(&qTx, 0, 0);
 8000800:	f107 0310 	add.w	r3, r7, #16
 8000804:	2200      	movs	r2, #0
 8000806:	2100      	movs	r1, #0
 8000808:	4618      	mov	r0, r3
 800080a:	f001 f895 	bl	8001938 <uart_QPut>
				qTx.pData[qTx.len] = '\0';
 800080e:	f8d7 3012 	ldr.w	r3, [r7, #18]
 8000812:	7c7a      	ldrb	r2, [r7, #17]
 8000814:	4413      	add	r3, r2
 8000816:	2200      	movs	r2, #0
 8000818:	701a      	strb	r2, [r3, #0]
			} break;
 800081a:	bf00      	nop
}
 800081c:	bf00      	nop
 800081e:	3720      	adds	r7, #32
 8000820:	46bd      	mov	sp, r7
 8000822:	bd80      	pop	{r7, pc}
 8000824:	2000008c 	.word	0x2000008c

08000828 <btProc_Task>:


void btProc_Task(void *arg)
{
 8000828:	b580      	push	{r7, lr}
 800082a:	b082      	sub	sp, #8
 800082c:	af00      	add	r7, sp, #0
 800082e:	6078      	str	r0, [r7, #4]
	cbf = func_s0;
 8000830:	4b06      	ldr	r3, [pc, #24]	; (800084c <btProc_Task+0x24>)
 8000832:	4a07      	ldr	r2, [pc, #28]	; (8000850 <btProc_Task+0x28>)
 8000834:	601a      	str	r2, [r3, #0]

	printf("Bluetooth Thread Start...\r\n");
 8000836:	4807      	ldr	r0, [pc, #28]	; (8000854 <btProc_Task+0x2c>)
 8000838:	f008 ffac 	bl	8009794 <puts>

	osDelay(500);
 800083c:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000840:	f005 fdf1 	bl	8006426 <osDelay>

	for (;;) {
		cbf();
 8000844:	4b01      	ldr	r3, [pc, #4]	; (800084c <btProc_Task+0x24>)
 8000846:	681b      	ldr	r3, [r3, #0]
 8000848:	4798      	blx	r3
 800084a:	e7fb      	b.n	8000844 <btProc_Task+0x1c>
 800084c:	20000094 	.word	0x20000094
 8000850:	080006c1 	.word	0x080006c1
 8000854:	0800ab24 	.word	0x0800ab24

08000858 <cli_bt>:
  { "bt",			2, cli_bt,		"bt [n/v/] [name]"		},
  { NULL, 		0, NULL, 			NULL									}
};

static int cli_bt(int argc, char *argv[])
{
 8000858:	b480      	push	{r7}
 800085a:	b083      	sub	sp, #12
 800085c:	af00      	add	r7, sp, #0
 800085e:	6078      	str	r0, [r7, #4]
 8000860:	6039      	str	r1, [r7, #0]

	return 0;
 8000862:	2300      	movs	r3, #0
}
 8000864:	4618      	mov	r0, r3
 8000866:	370c      	adds	r7, #12
 8000868:	46bd      	mov	sp, r7
 800086a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800086e:	4770      	bx	lr

08000870 <cli_pwm>:

static int cli_pwm(int argc, char *argv[])
{
 8000870:	b580      	push	{r7, lr}
 8000872:	b084      	sub	sp, #16
 8000874:	af00      	add	r7, sp, #0
 8000876:	6078      	str	r0, [r7, #4]
 8000878:	6039      	str	r1, [r7, #0]
  if (argc < 3) printf("Need more arguments\r\n");
 800087a:	687b      	ldr	r3, [r7, #4]
 800087c:	2b02      	cmp	r3, #2
 800087e:	dc02      	bgt.n	8000886 <cli_pwm+0x16>
 8000880:	4815      	ldr	r0, [pc, #84]	; (80008d8 <cli_pwm+0x68>)
 8000882:	f008 ff87 	bl	8009794 <puts>

  long no = strtol(argv[1], NULL, 10);
 8000886:	683b      	ldr	r3, [r7, #0]
 8000888:	3304      	adds	r3, #4
 800088a:	681b      	ldr	r3, [r3, #0]
 800088c:	220a      	movs	r2, #10
 800088e:	2100      	movs	r1, #0
 8000890:	4618      	mov	r0, r3
 8000892:	f008 fe4d 	bl	8009530 <strtol>
 8000896:	60b8      	str	r0, [r7, #8]
  long duty = strtol(argv[2], NULL, 10);
 8000898:	683b      	ldr	r3, [r7, #0]
 800089a:	3308      	adds	r3, #8
 800089c:	681b      	ldr	r3, [r3, #0]
 800089e:	220a      	movs	r2, #10
 80008a0:	2100      	movs	r1, #0
 80008a2:	4618      	mov	r0, r3
 80008a4:	f008 fe44 	bl	8009530 <strtol>
 80008a8:	60f8      	str	r0, [r7, #12]

  if (duty > 100) duty = 100;
 80008aa:	68fb      	ldr	r3, [r7, #12]
 80008ac:	2b64      	cmp	r3, #100	; 0x64
 80008ae:	dd01      	ble.n	80008b4 <cli_pwm+0x44>
 80008b0:	2364      	movs	r3, #100	; 0x64
 80008b2:	60fb      	str	r3, [r7, #12]
  if (duty < 0) duty = 0;
 80008b4:	68fb      	ldr	r3, [r7, #12]
 80008b6:	2b00      	cmp	r3, #0
 80008b8:	da01      	bge.n	80008be <cli_pwm+0x4e>
 80008ba:	2300      	movs	r3, #0
 80008bc:	60fb      	str	r3, [r7, #12]

  pwm_dimming((uint8_t)no, (uint8_t)duty);
 80008be:	68bb      	ldr	r3, [r7, #8]
 80008c0:	b2db      	uxtb	r3, r3
 80008c2:	68fa      	ldr	r2, [r7, #12]
 80008c4:	b2d2      	uxtb	r2, r2
 80008c6:	4611      	mov	r1, r2
 80008c8:	4618      	mov	r0, r3
 80008ca:	f000 fc07 	bl	80010dc <pwm_dimming>

  return 0;
 80008ce:	2300      	movs	r3, #0
}
 80008d0:	4618      	mov	r0, r3
 80008d2:	3710      	adds	r7, #16
 80008d4:	46bd      	mov	sp, r7
 80008d6:	bd80      	pop	{r7, pc}
 80008d8:	0800aba8 	.word	0x0800aba8

080008dc <cli_led>:


static int cli_led(int argc, char *argv[])
{
 80008dc:	b580      	push	{r7, lr}
 80008de:	b084      	sub	sp, #16
 80008e0:	af00      	add	r7, sp, #0
 80008e2:	6078      	str	r0, [r7, #4]
 80008e4:	6039      	str	r1, [r7, #0]
  if (argc < 3) printf("Need more arguments\r\n");
 80008e6:	687b      	ldr	r3, [r7, #4]
 80008e8:	2b02      	cmp	r3, #2
 80008ea:	dc02      	bgt.n	80008f2 <cli_led+0x16>
 80008ec:	4812      	ldr	r0, [pc, #72]	; (8000938 <cli_led+0x5c>)
 80008ee:	f008 ff51 	bl	8009794 <puts>

  long no = strtol(argv[1], NULL, 10);
 80008f2:	683b      	ldr	r3, [r7, #0]
 80008f4:	3304      	adds	r3, #4
 80008f6:	681b      	ldr	r3, [r3, #0]
 80008f8:	220a      	movs	r2, #10
 80008fa:	2100      	movs	r1, #0
 80008fc:	4618      	mov	r0, r3
 80008fe:	f008 fe17 	bl	8009530 <strtol>
 8000902:	60b8      	str	r0, [r7, #8]
  int onoff = strcmp(argv[2], "off");
 8000904:	683b      	ldr	r3, [r7, #0]
 8000906:	3308      	adds	r3, #8
 8000908:	681b      	ldr	r3, [r3, #0]
 800090a:	490c      	ldr	r1, [pc, #48]	; (800093c <cli_led+0x60>)
 800090c:	4618      	mov	r0, r3
 800090e:	f7ff fc6f 	bl	80001f0 <strcmp>
 8000912:	60f8      	str	r0, [r7, #12]

  if (onoff != 0) onoff = 1;
 8000914:	68fb      	ldr	r3, [r7, #12]
 8000916:	2b00      	cmp	r3, #0
 8000918:	d001      	beq.n	800091e <cli_led+0x42>
 800091a:	2301      	movs	r3, #1
 800091c:	60fb      	str	r3, [r7, #12]

  //printf("led %ld %s\r\n", no, argv[2]);
  led_onoff((uint8_t)no, (uint8_t)onoff);
 800091e:	68bb      	ldr	r3, [r7, #8]
 8000920:	b2db      	uxtb	r3, r3
 8000922:	68fa      	ldr	r2, [r7, #12]
 8000924:	b2d2      	uxtb	r2, r2
 8000926:	4611      	mov	r1, r2
 8000928:	4618      	mov	r0, r3
 800092a:	f000 f8b7 	bl	8000a9c <led_onoff>

  return 0;
 800092e:	2300      	movs	r3, #0
}
 8000930:	4618      	mov	r0, r3
 8000932:	3710      	adds	r7, #16
 8000934:	46bd      	mov	sp, r7
 8000936:	bd80      	pop	{r7, pc}
 8000938:	0800aba8 	.word	0x0800aba8
 800093c:	0800abc0 	.word	0x0800abc0

08000940 <cli_echo>:


static int cli_echo(int argc, char *argv[])
{
 8000940:	b580      	push	{r7, lr}
 8000942:	b082      	sub	sp, #8
 8000944:	af00      	add	r7, sp, #0
 8000946:	6078      	str	r0, [r7, #4]
 8000948:	6039      	str	r1, [r7, #0]
  if (argc < 2) printf("Need more arguments\r\n");
 800094a:	687b      	ldr	r3, [r7, #4]
 800094c:	2b01      	cmp	r3, #1
 800094e:	dc02      	bgt.n	8000956 <cli_echo+0x16>
 8000950:	4807      	ldr	r0, [pc, #28]	; (8000970 <cli_echo+0x30>)
 8000952:	f008 ff1f 	bl	8009794 <puts>
  printf("%s\r\n", argv[1]);
 8000956:	683b      	ldr	r3, [r7, #0]
 8000958:	3304      	adds	r3, #4
 800095a:	681b      	ldr	r3, [r3, #0]
 800095c:	4619      	mov	r1, r3
 800095e:	4805      	ldr	r0, [pc, #20]	; (8000974 <cli_echo+0x34>)
 8000960:	f008 feb2 	bl	80096c8 <iprintf>

  return 0;
 8000964:	2300      	movs	r3, #0
}
 8000966:	4618      	mov	r0, r3
 8000968:	3708      	adds	r7, #8
 800096a:	46bd      	mov	sp, r7
 800096c:	bd80      	pop	{r7, pc}
 800096e:	bf00      	nop
 8000970:	0800aba8 	.word	0x0800aba8
 8000974:	0800abc4 	.word	0x0800abc4

08000978 <cli_help>:

static int cli_help(int argc, char *argv[])
{
 8000978:	b580      	push	{r7, lr}
 800097a:	b084      	sub	sp, #16
 800097c:	af00      	add	r7, sp, #0
 800097e:	6078      	str	r0, [r7, #4]
 8000980:	6039      	str	r1, [r7, #0]
  for (int i=0; gCmdListObj[i].cmd != NULL; i++) {
 8000982:	2300      	movs	r3, #0
 8000984:	60fb      	str	r3, [r7, #12]
 8000986:	e00c      	b.n	80009a2 <cli_help+0x2a>
    printf("%s\r\n", gCmdListObj[i].remark);
 8000988:	4a0c      	ldr	r2, [pc, #48]	; (80009bc <cli_help+0x44>)
 800098a:	68fb      	ldr	r3, [r7, #12]
 800098c:	011b      	lsls	r3, r3, #4
 800098e:	4413      	add	r3, r2
 8000990:	330c      	adds	r3, #12
 8000992:	681b      	ldr	r3, [r3, #0]
 8000994:	4619      	mov	r1, r3
 8000996:	480a      	ldr	r0, [pc, #40]	; (80009c0 <cli_help+0x48>)
 8000998:	f008 fe96 	bl	80096c8 <iprintf>
  for (int i=0; gCmdListObj[i].cmd != NULL; i++) {
 800099c:	68fb      	ldr	r3, [r7, #12]
 800099e:	3301      	adds	r3, #1
 80009a0:	60fb      	str	r3, [r7, #12]
 80009a2:	4a06      	ldr	r2, [pc, #24]	; (80009bc <cli_help+0x44>)
 80009a4:	68fb      	ldr	r3, [r7, #12]
 80009a6:	011b      	lsls	r3, r3, #4
 80009a8:	4413      	add	r3, r2
 80009aa:	681b      	ldr	r3, [r3, #0]
 80009ac:	2b00      	cmp	r3, #0
 80009ae:	d1eb      	bne.n	8000988 <cli_help+0x10>
  }

  return 0;
 80009b0:	2300      	movs	r3, #0
}
 80009b2:	4618      	mov	r0, r3
 80009b4:	3710      	adds	r7, #16
 80009b6:	46bd      	mov	sp, r7
 80009b8:	bd80      	pop	{r7, pc}
 80009ba:	bf00      	nop
 80009bc:	0800acc4 	.word	0x0800acc4
 80009c0:	0800abc4 	.word	0x0800abc4

080009c4 <cli_parser>:

#define D_DELIMITER	" ,\r\n"

bool cli_parser(uint8_t *buf)
{
 80009c4:	b580      	push	{r7, lr}
 80009c6:	b090      	sub	sp, #64	; 0x40
 80009c8:	af00      	add	r7, sp, #0
 80009ca:	6078      	str	r0, [r7, #4]
#if 1
  int argc = 0;
 80009cc:	2300      	movs	r3, #0
 80009ce:	63fb      	str	r3, [r7, #60]	; 0x3c
  char *argv[10];
  char *ptr;

  ptr = strtok((char *)buf, D_DELIMITER);
 80009d0:	4925      	ldr	r1, [pc, #148]	; (8000a68 <cli_parser+0xa4>)
 80009d2:	6878      	ldr	r0, [r7, #4]
 80009d4:	f008 fff6 	bl	80099c4 <strtok>
 80009d8:	63b8      	str	r0, [r7, #56]	; 0x38
  if (ptr == NULL) return false;
 80009da:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80009dc:	2b00      	cmp	r3, #0
 80009de:	d110      	bne.n	8000a02 <cli_parser+0x3e>
 80009e0:	2300      	movs	r3, #0
 80009e2:	e03c      	b.n	8000a5e <cli_parser+0x9a>

  while(ptr != NULL) {
    //printf("%s\r\n", ptr);
    argv[argc] = ptr;
 80009e4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80009e6:	009b      	lsls	r3, r3, #2
 80009e8:	3340      	adds	r3, #64	; 0x40
 80009ea:	443b      	add	r3, r7
 80009ec:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80009ee:	f843 2c34 	str.w	r2, [r3, #-52]
    argc++;
 80009f2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80009f4:	3301      	adds	r3, #1
 80009f6:	63fb      	str	r3, [r7, #60]	; 0x3c
    ptr = strtok(NULL, D_DELIMITER);
 80009f8:	491b      	ldr	r1, [pc, #108]	; (8000a68 <cli_parser+0xa4>)
 80009fa:	2000      	movs	r0, #0
 80009fc:	f008 ffe2 	bl	80099c4 <strtok>
 8000a00:	63b8      	str	r0, [r7, #56]	; 0x38
  while(ptr != NULL) {
 8000a02:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8000a04:	2b00      	cmp	r3, #0
 8000a06:	d1ed      	bne.n	80009e4 <cli_parser+0x20>
  }

  for (int i=0; gCmdListObj[i].cmd != NULL; i++) {
 8000a08:	2300      	movs	r3, #0
 8000a0a:	637b      	str	r3, [r7, #52]	; 0x34
 8000a0c:	e01c      	b.n	8000a48 <cli_parser+0x84>
    if (strcmp(gCmdListObj[i].cmd, argv[0]) == 0) {
 8000a0e:	4a17      	ldr	r2, [pc, #92]	; (8000a6c <cli_parser+0xa8>)
 8000a10:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000a12:	011b      	lsls	r3, r3, #4
 8000a14:	4413      	add	r3, r2
 8000a16:	681b      	ldr	r3, [r3, #0]
 8000a18:	68fa      	ldr	r2, [r7, #12]
 8000a1a:	4611      	mov	r1, r2
 8000a1c:	4618      	mov	r0, r3
 8000a1e:	f7ff fbe7 	bl	80001f0 <strcmp>
 8000a22:	4603      	mov	r3, r0
 8000a24:	2b00      	cmp	r3, #0
 8000a26:	d10c      	bne.n	8000a42 <cli_parser+0x7e>
      gCmdListObj[i].cbf(argc, argv);
 8000a28:	4a10      	ldr	r2, [pc, #64]	; (8000a6c <cli_parser+0xa8>)
 8000a2a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000a2c:	011b      	lsls	r3, r3, #4
 8000a2e:	4413      	add	r3, r2
 8000a30:	3308      	adds	r3, #8
 8000a32:	681b      	ldr	r3, [r3, #0]
 8000a34:	f107 020c 	add.w	r2, r7, #12
 8000a38:	4611      	mov	r1, r2
 8000a3a:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 8000a3c:	4798      	blx	r3
      return true;
 8000a3e:	2301      	movs	r3, #1
 8000a40:	e00d      	b.n	8000a5e <cli_parser+0x9a>
  for (int i=0; gCmdListObj[i].cmd != NULL; i++) {
 8000a42:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000a44:	3301      	adds	r3, #1
 8000a46:	637b      	str	r3, [r7, #52]	; 0x34
 8000a48:	4a08      	ldr	r2, [pc, #32]	; (8000a6c <cli_parser+0xa8>)
 8000a4a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000a4c:	011b      	lsls	r3, r3, #4
 8000a4e:	4413      	add	r3, r2
 8000a50:	681b      	ldr	r3, [r3, #0]
 8000a52:	2b00      	cmp	r3, #0
 8000a54:	d1db      	bne.n	8000a0e <cli_parser+0x4a>
    }
  }

  printf("Unsupported command..\r\n");
 8000a56:	4806      	ldr	r0, [pc, #24]	; (8000a70 <cli_parser+0xac>)
 8000a58:	f008 fe9c 	bl	8009794 <puts>
      ptr = strtok(NULL, " ");     //자른 문자 다음부터 구분자 또 찾기
  }

  uart_regcbf(cli_parser2222);
#endif
  return true;
 8000a5c:	2301      	movs	r3, #1
}
 8000a5e:	4618      	mov	r0, r3
 8000a60:	3740      	adds	r7, #64	; 0x40
 8000a62:	46bd      	mov	sp, r7
 8000a64:	bd80      	pop	{r7, pc}
 8000a66:	bf00      	nop
 8000a68:	0800abcc 	.word	0x0800abcc
 8000a6c:	0800acc4 	.word	0x0800acc4
 8000a70:	0800abd4 	.word	0x0800abd4

08000a74 <cli_init>:

void cli_init(void)
{
 8000a74:	b580      	push	{r7, lr}
 8000a76:	af00      	add	r7, sp, #0
  uart_regcbf(0, cli_parser);
 8000a78:	4902      	ldr	r1, [pc, #8]	; (8000a84 <cli_init+0x10>)
 8000a7a:	2000      	movs	r0, #0
 8000a7c:	f000 ff48 	bl	8001910 <uart_regcbf>
}
 8000a80:	bf00      	nop
 8000a82:	bd80      	pop	{r7, pc}
 8000a84:	080009c5 	.word	0x080009c5

08000a88 <led_init>:

#include "main.h"
#include "led.h"

void led_init(void)
{
 8000a88:	b580      	push	{r7, lr}
 8000a8a:	af00      	add	r7, sp, #0
  printf("LED initialized...\r\n");
 8000a8c:	4802      	ldr	r0, [pc, #8]	; (8000a98 <led_init+0x10>)
 8000a8e:	f008 fe81 	bl	8009794 <puts>
}
 8000a92:	bf00      	nop
 8000a94:	bd80      	pop	{r7, pc}
 8000a96:	bf00      	nop
 8000a98:	0800abec 	.word	0x0800abec

08000a9c <led_onoff>:

bool led_onoff(uint8_t no, uint8_t onoff)
{
 8000a9c:	b580      	push	{r7, lr}
 8000a9e:	b084      	sub	sp, #16
 8000aa0:	af00      	add	r7, sp, #0
 8000aa2:	4603      	mov	r3, r0
 8000aa4:	460a      	mov	r2, r1
 8000aa6:	71fb      	strb	r3, [r7, #7]
 8000aa8:	4613      	mov	r3, r2
 8000aaa:	71bb      	strb	r3, [r7, #6]
  GPIO_PinState sts = onoff ? GPIO_PIN_SET : GPIO_PIN_RESET;
 8000aac:	79bb      	ldrb	r3, [r7, #6]
 8000aae:	2b00      	cmp	r3, #0
 8000ab0:	bf14      	ite	ne
 8000ab2:	2301      	movne	r3, #1
 8000ab4:	2300      	moveq	r3, #0
 8000ab6:	b2db      	uxtb	r3, r3
 8000ab8:	73fb      	strb	r3, [r7, #15]

  switch (no) {
 8000aba:	79fb      	ldrb	r3, [r7, #7]
 8000abc:	2b02      	cmp	r3, #2
 8000abe:	d002      	beq.n	8000ac6 <led_onoff+0x2a>
 8000ac0:	2b03      	cmp	r3, #3
 8000ac2:	d007      	beq.n	8000ad4 <led_onoff+0x38>
 8000ac4:	e00e      	b.n	8000ae4 <led_onoff+0x48>
    case 2 :
      HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, sts);
 8000ac6:	7bfb      	ldrb	r3, [r7, #15]
 8000ac8:	461a      	mov	r2, r3
 8000aca:	2180      	movs	r1, #128	; 0x80
 8000acc:	4809      	ldr	r0, [pc, #36]	; (8000af4 <led_onoff+0x58>)
 8000ace:	f002 fbcb 	bl	8003268 <HAL_GPIO_WritePin>
      break;
 8000ad2:	e009      	b.n	8000ae8 <led_onoff+0x4c>
    case 3 :
      HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, sts);
 8000ad4:	7bfb      	ldrb	r3, [r7, #15]
 8000ad6:	461a      	mov	r2, r3
 8000ad8:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000adc:	4805      	ldr	r0, [pc, #20]	; (8000af4 <led_onoff+0x58>)
 8000ade:	f002 fbc3 	bl	8003268 <HAL_GPIO_WritePin>
      break;
 8000ae2:	e001      	b.n	8000ae8 <led_onoff+0x4c>
    default :
      return false;
 8000ae4:	2300      	movs	r3, #0
 8000ae6:	e000      	b.n	8000aea <led_onoff+0x4e>
  }

  return true;
 8000ae8:	2301      	movs	r3, #1
}
 8000aea:	4618      	mov	r0, r3
 8000aec:	3710      	adds	r7, #16
 8000aee:	46bd      	mov	sp, r7
 8000af0:	bd80      	pop	{r7, pc}
 8000af2:	bf00      	nop
 8000af4:	40020400 	.word	0x40020400

08000af8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000af8:	b580      	push	{r7, lr}
 8000afa:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000afc:	f001 f9bc 	bl	8001e78 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000b00:	f000 f824 	bl	8000b4c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000b04:	f000 f9fa 	bl	8000efc <MX_GPIO_Init>
  MX_DMA_Init();
 8000b08:	f000 f9d0 	bl	8000eac <MX_DMA_Init>
  MX_ETH_Init();
 8000b0c:	f000 f888 	bl	8000c20 <MX_ETH_Init>
  MX_USART3_UART_Init();
 8000b10:	f000 f974 	bl	8000dfc <MX_USART3_UART_Init>
  MX_USB_OTG_FS_PCD_Init();
 8000b14:	f000 f99c 	bl	8000e50 <MX_USB_OTG_FS_PCD_Init>
  MX_TIM3_Init();
 8000b18:	f000 f8d0 	bl	8000cbc <MX_TIM3_Init>
  MX_USART2_UART_Init();
 8000b1c:	f000 f944 	bl	8000da8 <MX_USART2_UART_Init>
  /* USER CODE BEGIN 2 */
  app();
 8000b20:	f7ff fd56 	bl	80005d0 <app>
  /* USER CODE END 2 */

  /* Init scheduler */
  osKernelInitialize();
 8000b24:	f005 fba2 	bl	800626c <osKernelInitialize>
  /* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* creation of defaultTask */
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000b28:	4a05      	ldr	r2, [pc, #20]	; (8000b40 <main+0x48>)
 8000b2a:	2100      	movs	r1, #0
 8000b2c:	4805      	ldr	r0, [pc, #20]	; (8000b44 <main+0x4c>)
 8000b2e:	f005 fbe7 	bl	8006300 <osThreadNew>
 8000b32:	4603      	mov	r3, r0
 8000b34:	4a04      	ldr	r2, [pc, #16]	; (8000b48 <main+0x50>)
 8000b36:	6013      	str	r3, [r2, #0]
  /* USER CODE BEGIN RTOS_EVENTS */
  /* add events, ... */
  /* USER CODE END RTOS_EVENTS */

  /* Start scheduler */
  osKernelStart();
 8000b38:	f005 fbbc 	bl	80062b4 <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8000b3c:	e7fe      	b.n	8000b3c <main+0x44>
 8000b3e:	bf00      	nop
 8000b40:	0800ad24 	.word	0x0800ad24
 8000b44:	080010a1 	.word	0x080010a1
 8000b48:	200009c8 	.word	0x200009c8

08000b4c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000b4c:	b580      	push	{r7, lr}
 8000b4e:	b094      	sub	sp, #80	; 0x50
 8000b50:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000b52:	f107 0320 	add.w	r3, r7, #32
 8000b56:	2230      	movs	r2, #48	; 0x30
 8000b58:	2100      	movs	r1, #0
 8000b5a:	4618      	mov	r0, r3
 8000b5c:	f008 ff2a 	bl	80099b4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000b60:	f107 030c 	add.w	r3, r7, #12
 8000b64:	2200      	movs	r2, #0
 8000b66:	601a      	str	r2, [r3, #0]
 8000b68:	605a      	str	r2, [r3, #4]
 8000b6a:	609a      	str	r2, [r3, #8]
 8000b6c:	60da      	str	r2, [r3, #12]
 8000b6e:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000b70:	2300      	movs	r3, #0
 8000b72:	60bb      	str	r3, [r7, #8]
 8000b74:	4b28      	ldr	r3, [pc, #160]	; (8000c18 <SystemClock_Config+0xcc>)
 8000b76:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000b78:	4a27      	ldr	r2, [pc, #156]	; (8000c18 <SystemClock_Config+0xcc>)
 8000b7a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000b7e:	6413      	str	r3, [r2, #64]	; 0x40
 8000b80:	4b25      	ldr	r3, [pc, #148]	; (8000c18 <SystemClock_Config+0xcc>)
 8000b82:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000b84:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000b88:	60bb      	str	r3, [r7, #8]
 8000b8a:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000b8c:	2300      	movs	r3, #0
 8000b8e:	607b      	str	r3, [r7, #4]
 8000b90:	4b22      	ldr	r3, [pc, #136]	; (8000c1c <SystemClock_Config+0xd0>)
 8000b92:	681b      	ldr	r3, [r3, #0]
 8000b94:	4a21      	ldr	r2, [pc, #132]	; (8000c1c <SystemClock_Config+0xd0>)
 8000b96:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8000b9a:	6013      	str	r3, [r2, #0]
 8000b9c:	4b1f      	ldr	r3, [pc, #124]	; (8000c1c <SystemClock_Config+0xd0>)
 8000b9e:	681b      	ldr	r3, [r3, #0]
 8000ba0:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000ba4:	607b      	str	r3, [r7, #4]
 8000ba6:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000ba8:	2301      	movs	r3, #1
 8000baa:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 8000bac:	f44f 23a0 	mov.w	r3, #327680	; 0x50000
 8000bb0:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000bb2:	2302      	movs	r3, #2
 8000bb4:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000bb6:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8000bba:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 4;
 8000bbc:	2304      	movs	r3, #4
 8000bbe:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 168;
 8000bc0:	23a8      	movs	r3, #168	; 0xa8
 8000bc2:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000bc4:	2302      	movs	r3, #2
 8000bc6:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 7;
 8000bc8:	2307      	movs	r3, #7
 8000bca:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000bcc:	f107 0320 	add.w	r3, r7, #32
 8000bd0:	4618      	mov	r0, r3
 8000bd2:	f002 fc7f 	bl	80034d4 <HAL_RCC_OscConfig>
 8000bd6:	4603      	mov	r3, r0
 8000bd8:	2b00      	cmp	r3, #0
 8000bda:	d001      	beq.n	8000be0 <SystemClock_Config+0x94>
  {
    Error_Handler();
 8000bdc:	f000 fa68 	bl	80010b0 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000be0:	230f      	movs	r3, #15
 8000be2:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000be4:	2302      	movs	r3, #2
 8000be6:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000be8:	2300      	movs	r3, #0
 8000bea:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000bec:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8000bf0:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000bf2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000bf6:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000bf8:	f107 030c 	add.w	r3, r7, #12
 8000bfc:	2105      	movs	r1, #5
 8000bfe:	4618      	mov	r0, r3
 8000c00:	f002 fee0 	bl	80039c4 <HAL_RCC_ClockConfig>
 8000c04:	4603      	mov	r3, r0
 8000c06:	2b00      	cmp	r3, #0
 8000c08:	d001      	beq.n	8000c0e <SystemClock_Config+0xc2>
  {
    Error_Handler();
 8000c0a:	f000 fa51 	bl	80010b0 <Error_Handler>
  }
}
 8000c0e:	bf00      	nop
 8000c10:	3750      	adds	r7, #80	; 0x50
 8000c12:	46bd      	mov	sp, r7
 8000c14:	bd80      	pop	{r7, pc}
 8000c16:	bf00      	nop
 8000c18:	40023800 	.word	0x40023800
 8000c1c:	40007000 	.word	0x40007000

08000c20 <MX_ETH_Init>:
  * @brief ETH Initialization Function
  * @param None
  * @retval None
  */
static void MX_ETH_Init(void)
{
 8000c20:	b580      	push	{r7, lr}
 8000c22:	af00      	add	r7, sp, #0
   static uint8_t MACAddr[6];

  /* USER CODE BEGIN ETH_Init 1 */

  /* USER CODE END ETH_Init 1 */
  heth.Instance = ETH;
 8000c24:	4b1f      	ldr	r3, [pc, #124]	; (8000ca4 <MX_ETH_Init+0x84>)
 8000c26:	4a20      	ldr	r2, [pc, #128]	; (8000ca8 <MX_ETH_Init+0x88>)
 8000c28:	601a      	str	r2, [r3, #0]
  MACAddr[0] = 0x00;
 8000c2a:	4b20      	ldr	r3, [pc, #128]	; (8000cac <MX_ETH_Init+0x8c>)
 8000c2c:	2200      	movs	r2, #0
 8000c2e:	701a      	strb	r2, [r3, #0]
  MACAddr[1] = 0x80;
 8000c30:	4b1e      	ldr	r3, [pc, #120]	; (8000cac <MX_ETH_Init+0x8c>)
 8000c32:	2280      	movs	r2, #128	; 0x80
 8000c34:	705a      	strb	r2, [r3, #1]
  MACAddr[2] = 0xE1;
 8000c36:	4b1d      	ldr	r3, [pc, #116]	; (8000cac <MX_ETH_Init+0x8c>)
 8000c38:	22e1      	movs	r2, #225	; 0xe1
 8000c3a:	709a      	strb	r2, [r3, #2]
  MACAddr[3] = 0x00;
 8000c3c:	4b1b      	ldr	r3, [pc, #108]	; (8000cac <MX_ETH_Init+0x8c>)
 8000c3e:	2200      	movs	r2, #0
 8000c40:	70da      	strb	r2, [r3, #3]
  MACAddr[4] = 0x00;
 8000c42:	4b1a      	ldr	r3, [pc, #104]	; (8000cac <MX_ETH_Init+0x8c>)
 8000c44:	2200      	movs	r2, #0
 8000c46:	711a      	strb	r2, [r3, #4]
  MACAddr[5] = 0x00;
 8000c48:	4b18      	ldr	r3, [pc, #96]	; (8000cac <MX_ETH_Init+0x8c>)
 8000c4a:	2200      	movs	r2, #0
 8000c4c:	715a      	strb	r2, [r3, #5]
  heth.Init.MACAddr = &MACAddr[0];
 8000c4e:	4b15      	ldr	r3, [pc, #84]	; (8000ca4 <MX_ETH_Init+0x84>)
 8000c50:	4a16      	ldr	r2, [pc, #88]	; (8000cac <MX_ETH_Init+0x8c>)
 8000c52:	605a      	str	r2, [r3, #4]
  heth.Init.MediaInterface = HAL_ETH_RMII_MODE;
 8000c54:	4b13      	ldr	r3, [pc, #76]	; (8000ca4 <MX_ETH_Init+0x84>)
 8000c56:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
 8000c5a:	609a      	str	r2, [r3, #8]
  heth.Init.TxDesc = DMATxDscrTab;
 8000c5c:	4b11      	ldr	r3, [pc, #68]	; (8000ca4 <MX_ETH_Init+0x84>)
 8000c5e:	4a14      	ldr	r2, [pc, #80]	; (8000cb0 <MX_ETH_Init+0x90>)
 8000c60:	60da      	str	r2, [r3, #12]
  heth.Init.RxDesc = DMARxDscrTab;
 8000c62:	4b10      	ldr	r3, [pc, #64]	; (8000ca4 <MX_ETH_Init+0x84>)
 8000c64:	4a13      	ldr	r2, [pc, #76]	; (8000cb4 <MX_ETH_Init+0x94>)
 8000c66:	611a      	str	r2, [r3, #16]
  heth.Init.RxBuffLen = 1524;
 8000c68:	4b0e      	ldr	r3, [pc, #56]	; (8000ca4 <MX_ETH_Init+0x84>)
 8000c6a:	f240 52f4 	movw	r2, #1524	; 0x5f4
 8000c6e:	615a      	str	r2, [r3, #20]

  /* USER CODE BEGIN MACADDRESS */

  /* USER CODE END MACADDRESS */

  if (HAL_ETH_Init(&heth) != HAL_OK)
 8000c70:	480c      	ldr	r0, [pc, #48]	; (8000ca4 <MX_ETH_Init+0x84>)
 8000c72:	f001 fe25 	bl	80028c0 <HAL_ETH_Init>
 8000c76:	4603      	mov	r3, r0
 8000c78:	2b00      	cmp	r3, #0
 8000c7a:	d001      	beq.n	8000c80 <MX_ETH_Init+0x60>
  {
    Error_Handler();
 8000c7c:	f000 fa18 	bl	80010b0 <Error_Handler>
  }

  memset(&TxConfig, 0 , sizeof(ETH_TxPacketConfig));
 8000c80:	2238      	movs	r2, #56	; 0x38
 8000c82:	2100      	movs	r1, #0
 8000c84:	480c      	ldr	r0, [pc, #48]	; (8000cb8 <MX_ETH_Init+0x98>)
 8000c86:	f008 fe95 	bl	80099b4 <memset>
  TxConfig.Attributes = ETH_TX_PACKETS_FEATURES_CSUM | ETH_TX_PACKETS_FEATURES_CRCPAD;
 8000c8a:	4b0b      	ldr	r3, [pc, #44]	; (8000cb8 <MX_ETH_Init+0x98>)
 8000c8c:	2221      	movs	r2, #33	; 0x21
 8000c8e:	601a      	str	r2, [r3, #0]
  TxConfig.ChecksumCtrl = ETH_CHECKSUM_IPHDR_PAYLOAD_INSERT_PHDR_CALC;
 8000c90:	4b09      	ldr	r3, [pc, #36]	; (8000cb8 <MX_ETH_Init+0x98>)
 8000c92:	f44f 0240 	mov.w	r2, #12582912	; 0xc00000
 8000c96:	615a      	str	r2, [r3, #20]
  TxConfig.CRCPadCtrl = ETH_CRC_PAD_INSERT;
 8000c98:	4b07      	ldr	r3, [pc, #28]	; (8000cb8 <MX_ETH_Init+0x98>)
 8000c9a:	2200      	movs	r2, #0
 8000c9c:	611a      	str	r2, [r3, #16]
  /* USER CODE BEGIN ETH_Init 2 */

  /* USER CODE END ETH_Init 2 */

}
 8000c9e:	bf00      	nop
 8000ca0:	bd80      	pop	{r7, pc}
 8000ca2:	bf00      	nop
 8000ca4:	2000027c 	.word	0x2000027c
 8000ca8:	40028000 	.word	0x40028000
 8000cac:	200009cc 	.word	0x200009cc
 8000cb0:	200001dc 	.word	0x200001dc
 8000cb4:	2000013c 	.word	0x2000013c
 8000cb8:	20000104 	.word	0x20000104

08000cbc <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8000cbc:	b580      	push	{r7, lr}
 8000cbe:	b08e      	sub	sp, #56	; 0x38
 8000cc0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000cc2:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8000cc6:	2200      	movs	r2, #0
 8000cc8:	601a      	str	r2, [r3, #0]
 8000cca:	605a      	str	r2, [r3, #4]
 8000ccc:	609a      	str	r2, [r3, #8]
 8000cce:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000cd0:	f107 0320 	add.w	r3, r7, #32
 8000cd4:	2200      	movs	r2, #0
 8000cd6:	601a      	str	r2, [r3, #0]
 8000cd8:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000cda:	1d3b      	adds	r3, r7, #4
 8000cdc:	2200      	movs	r2, #0
 8000cde:	601a      	str	r2, [r3, #0]
 8000ce0:	605a      	str	r2, [r3, #4]
 8000ce2:	609a      	str	r2, [r3, #8]
 8000ce4:	60da      	str	r2, [r3, #12]
 8000ce6:	611a      	str	r2, [r3, #16]
 8000ce8:	615a      	str	r2, [r3, #20]
 8000cea:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8000cec:	4b2c      	ldr	r3, [pc, #176]	; (8000da0 <MX_TIM3_Init+0xe4>)
 8000cee:	4a2d      	ldr	r2, [pc, #180]	; (8000da4 <MX_TIM3_Init+0xe8>)
 8000cf0:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 83;
 8000cf2:	4b2b      	ldr	r3, [pc, #172]	; (8000da0 <MX_TIM3_Init+0xe4>)
 8000cf4:	2253      	movs	r2, #83	; 0x53
 8000cf6:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000cf8:	4b29      	ldr	r3, [pc, #164]	; (8000da0 <MX_TIM3_Init+0xe4>)
 8000cfa:	2200      	movs	r2, #0
 8000cfc:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 65535;
 8000cfe:	4b28      	ldr	r3, [pc, #160]	; (8000da0 <MX_TIM3_Init+0xe4>)
 8000d00:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000d04:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000d06:	4b26      	ldr	r3, [pc, #152]	; (8000da0 <MX_TIM3_Init+0xe4>)
 8000d08:	2200      	movs	r2, #0
 8000d0a:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000d0c:	4b24      	ldr	r3, [pc, #144]	; (8000da0 <MX_TIM3_Init+0xe4>)
 8000d0e:	2200      	movs	r2, #0
 8000d10:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8000d12:	4823      	ldr	r0, [pc, #140]	; (8000da0 <MX_TIM3_Init+0xe4>)
 8000d14:	f003 f876 	bl	8003e04 <HAL_TIM_Base_Init>
 8000d18:	4603      	mov	r3, r0
 8000d1a:	2b00      	cmp	r3, #0
 8000d1c:	d001      	beq.n	8000d22 <MX_TIM3_Init+0x66>
  {
    Error_Handler();
 8000d1e:	f000 f9c7 	bl	80010b0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000d22:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000d26:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000d28:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8000d2c:	4619      	mov	r1, r3
 8000d2e:	481c      	ldr	r0, [pc, #112]	; (8000da0 <MX_TIM3_Init+0xe4>)
 8000d30:	f003 fa9a 	bl	8004268 <HAL_TIM_ConfigClockSource>
 8000d34:	4603      	mov	r3, r0
 8000d36:	2b00      	cmp	r3, #0
 8000d38:	d001      	beq.n	8000d3e <MX_TIM3_Init+0x82>
  {
    Error_Handler();
 8000d3a:	f000 f9b9 	bl	80010b0 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8000d3e:	4818      	ldr	r0, [pc, #96]	; (8000da0 <MX_TIM3_Init+0xe4>)
 8000d40:	f003 f8af 	bl	8003ea2 <HAL_TIM_PWM_Init>
 8000d44:	4603      	mov	r3, r0
 8000d46:	2b00      	cmp	r3, #0
 8000d48:	d001      	beq.n	8000d4e <MX_TIM3_Init+0x92>
  {
    Error_Handler();
 8000d4a:	f000 f9b1 	bl	80010b0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000d4e:	2300      	movs	r3, #0
 8000d50:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000d52:	2300      	movs	r3, #0
 8000d54:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000d56:	f107 0320 	add.w	r3, r7, #32
 8000d5a:	4619      	mov	r1, r3
 8000d5c:	4810      	ldr	r0, [pc, #64]	; (8000da0 <MX_TIM3_Init+0xe4>)
 8000d5e:	f003 fe5b 	bl	8004a18 <HAL_TIMEx_MasterConfigSynchronization>
 8000d62:	4603      	mov	r3, r0
 8000d64:	2b00      	cmp	r3, #0
 8000d66:	d001      	beq.n	8000d6c <MX_TIM3_Init+0xb0>
  {
    Error_Handler();
 8000d68:	f000 f9a2 	bl	80010b0 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000d6c:	2360      	movs	r3, #96	; 0x60
 8000d6e:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8000d70:	2300      	movs	r3, #0
 8000d72:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000d74:	2300      	movs	r3, #0
 8000d76:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000d78:	2300      	movs	r3, #0
 8000d7a:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 8000d7c:	1d3b      	adds	r3, r7, #4
 8000d7e:	2208      	movs	r2, #8
 8000d80:	4619      	mov	r1, r3
 8000d82:	4807      	ldr	r0, [pc, #28]	; (8000da0 <MX_TIM3_Init+0xe4>)
 8000d84:	f003 f9ae 	bl	80040e4 <HAL_TIM_PWM_ConfigChannel>
 8000d88:	4603      	mov	r3, r0
 8000d8a:	2b00      	cmp	r3, #0
 8000d8c:	d001      	beq.n	8000d92 <MX_TIM3_Init+0xd6>
  {
    Error_Handler();
 8000d8e:	f000 f98f 	bl	80010b0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 8000d92:	4803      	ldr	r0, [pc, #12]	; (8000da0 <MX_TIM3_Init+0xe4>)
 8000d94:	f000 fada 	bl	800134c <HAL_TIM_MspPostInit>

}
 8000d98:	bf00      	nop
 8000d9a:	3738      	adds	r7, #56	; 0x38
 8000d9c:	46bd      	mov	sp, r7
 8000d9e:	bd80      	pop	{r7, pc}
 8000da0:	2000032c 	.word	0x2000032c
 8000da4:	40000400 	.word	0x40000400

08000da8 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8000da8:	b580      	push	{r7, lr}
 8000daa:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8000dac:	4b11      	ldr	r3, [pc, #68]	; (8000df4 <MX_USART2_UART_Init+0x4c>)
 8000dae:	4a12      	ldr	r2, [pc, #72]	; (8000df8 <MX_USART2_UART_Init+0x50>)
 8000db0:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8000db2:	4b10      	ldr	r3, [pc, #64]	; (8000df4 <MX_USART2_UART_Init+0x4c>)
 8000db4:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8000db8:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8000dba:	4b0e      	ldr	r3, [pc, #56]	; (8000df4 <MX_USART2_UART_Init+0x4c>)
 8000dbc:	2200      	movs	r2, #0
 8000dbe:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8000dc0:	4b0c      	ldr	r3, [pc, #48]	; (8000df4 <MX_USART2_UART_Init+0x4c>)
 8000dc2:	2200      	movs	r2, #0
 8000dc4:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8000dc6:	4b0b      	ldr	r3, [pc, #44]	; (8000df4 <MX_USART2_UART_Init+0x4c>)
 8000dc8:	2200      	movs	r2, #0
 8000dca:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8000dcc:	4b09      	ldr	r3, [pc, #36]	; (8000df4 <MX_USART2_UART_Init+0x4c>)
 8000dce:	220c      	movs	r2, #12
 8000dd0:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000dd2:	4b08      	ldr	r3, [pc, #32]	; (8000df4 <MX_USART2_UART_Init+0x4c>)
 8000dd4:	2200      	movs	r2, #0
 8000dd6:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000dd8:	4b06      	ldr	r3, [pc, #24]	; (8000df4 <MX_USART2_UART_Init+0x4c>)
 8000dda:	2200      	movs	r2, #0
 8000ddc:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8000dde:	4805      	ldr	r0, [pc, #20]	; (8000df4 <MX_USART2_UART_Init+0x4c>)
 8000de0:	f003 fe96 	bl	8004b10 <HAL_UART_Init>
 8000de4:	4603      	mov	r3, r0
 8000de6:	2b00      	cmp	r3, #0
 8000de8:	d001      	beq.n	8000dee <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8000dea:	f000 f961 	bl	80010b0 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8000dee:	bf00      	nop
 8000df0:	bd80      	pop	{r7, pc}
 8000df2:	bf00      	nop
 8000df4:	20000374 	.word	0x20000374
 8000df8:	40004400 	.word	0x40004400

08000dfc <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 8000dfc:	b580      	push	{r7, lr}
 8000dfe:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 8000e00:	4b11      	ldr	r3, [pc, #68]	; (8000e48 <MX_USART3_UART_Init+0x4c>)
 8000e02:	4a12      	ldr	r2, [pc, #72]	; (8000e4c <MX_USART3_UART_Init+0x50>)
 8000e04:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 115200;
 8000e06:	4b10      	ldr	r3, [pc, #64]	; (8000e48 <MX_USART3_UART_Init+0x4c>)
 8000e08:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8000e0c:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 8000e0e:	4b0e      	ldr	r3, [pc, #56]	; (8000e48 <MX_USART3_UART_Init+0x4c>)
 8000e10:	2200      	movs	r2, #0
 8000e12:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 8000e14:	4b0c      	ldr	r3, [pc, #48]	; (8000e48 <MX_USART3_UART_Init+0x4c>)
 8000e16:	2200      	movs	r2, #0
 8000e18:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 8000e1a:	4b0b      	ldr	r3, [pc, #44]	; (8000e48 <MX_USART3_UART_Init+0x4c>)
 8000e1c:	2200      	movs	r2, #0
 8000e1e:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 8000e20:	4b09      	ldr	r3, [pc, #36]	; (8000e48 <MX_USART3_UART_Init+0x4c>)
 8000e22:	220c      	movs	r2, #12
 8000e24:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000e26:	4b08      	ldr	r3, [pc, #32]	; (8000e48 <MX_USART3_UART_Init+0x4c>)
 8000e28:	2200      	movs	r2, #0
 8000e2a:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8000e2c:	4b06      	ldr	r3, [pc, #24]	; (8000e48 <MX_USART3_UART_Init+0x4c>)
 8000e2e:	2200      	movs	r2, #0
 8000e30:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 8000e32:	4805      	ldr	r0, [pc, #20]	; (8000e48 <MX_USART3_UART_Init+0x4c>)
 8000e34:	f003 fe6c 	bl	8004b10 <HAL_UART_Init>
 8000e38:	4603      	mov	r3, r0
 8000e3a:	2b00      	cmp	r3, #0
 8000e3c:	d001      	beq.n	8000e42 <MX_USART3_UART_Init+0x46>
  {
    Error_Handler();
 8000e3e:	f000 f937 	bl	80010b0 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 8000e42:	bf00      	nop
 8000e44:	bd80      	pop	{r7, pc}
 8000e46:	bf00      	nop
 8000e48:	200003b8 	.word	0x200003b8
 8000e4c:	40004800 	.word	0x40004800

08000e50 <MX_USB_OTG_FS_PCD_Init>:
  * @brief USB_OTG_FS Initialization Function
  * @param None
  * @retval None
  */
static void MX_USB_OTG_FS_PCD_Init(void)
{
 8000e50:	b580      	push	{r7, lr}
 8000e52:	af00      	add	r7, sp, #0
  /* USER CODE END USB_OTG_FS_Init 0 */

  /* USER CODE BEGIN USB_OTG_FS_Init 1 */

  /* USER CODE END USB_OTG_FS_Init 1 */
  hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 8000e54:	4b14      	ldr	r3, [pc, #80]	; (8000ea8 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8000e56:	f04f 42a0 	mov.w	r2, #1342177280	; 0x50000000
 8000e5a:	601a      	str	r2, [r3, #0]
  hpcd_USB_OTG_FS.Init.dev_endpoints = 4;
 8000e5c:	4b12      	ldr	r3, [pc, #72]	; (8000ea8 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8000e5e:	2204      	movs	r2, #4
 8000e60:	605a      	str	r2, [r3, #4]
  hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 8000e62:	4b11      	ldr	r3, [pc, #68]	; (8000ea8 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8000e64:	2202      	movs	r2, #2
 8000e66:	60da      	str	r2, [r3, #12]
  hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 8000e68:	4b0f      	ldr	r3, [pc, #60]	; (8000ea8 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8000e6a:	2200      	movs	r2, #0
 8000e6c:	611a      	str	r2, [r3, #16]
  hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 8000e6e:	4b0e      	ldr	r3, [pc, #56]	; (8000ea8 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8000e70:	2202      	movs	r2, #2
 8000e72:	619a      	str	r2, [r3, #24]
  hpcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 8000e74:	4b0c      	ldr	r3, [pc, #48]	; (8000ea8 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8000e76:	2201      	movs	r2, #1
 8000e78:	61da      	str	r2, [r3, #28]
  hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 8000e7a:	4b0b      	ldr	r3, [pc, #44]	; (8000ea8 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8000e7c:	2200      	movs	r2, #0
 8000e7e:	621a      	str	r2, [r3, #32]
  hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 8000e80:	4b09      	ldr	r3, [pc, #36]	; (8000ea8 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8000e82:	2200      	movs	r2, #0
 8000e84:	625a      	str	r2, [r3, #36]	; 0x24
  hpcd_USB_OTG_FS.Init.vbus_sensing_enable = DISABLE;
 8000e86:	4b08      	ldr	r3, [pc, #32]	; (8000ea8 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8000e88:	2200      	movs	r2, #0
 8000e8a:	62da      	str	r2, [r3, #44]	; 0x2c
  hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 8000e8c:	4b06      	ldr	r3, [pc, #24]	; (8000ea8 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8000e8e:	2200      	movs	r2, #0
 8000e90:	631a      	str	r2, [r3, #48]	; 0x30
  if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 8000e92:	4805      	ldr	r0, [pc, #20]	; (8000ea8 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8000e94:	f002 fa01 	bl	800329a <HAL_PCD_Init>
 8000e98:	4603      	mov	r3, r0
 8000e9a:	2b00      	cmp	r3, #0
 8000e9c:	d001      	beq.n	8000ea2 <MX_USB_OTG_FS_PCD_Init+0x52>
  {
    Error_Handler();
 8000e9e:	f000 f907 	bl	80010b0 <Error_Handler>
  }
  /* USER CODE BEGIN USB_OTG_FS_Init 2 */

  /* USER CODE END USB_OTG_FS_Init 2 */

}
 8000ea2:	bf00      	nop
 8000ea4:	bd80      	pop	{r7, pc}
 8000ea6:	bf00      	nop
 8000ea8:	200004bc 	.word	0x200004bc

08000eac <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8000eac:	b580      	push	{r7, lr}
 8000eae:	b082      	sub	sp, #8
 8000eb0:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8000eb2:	2300      	movs	r3, #0
 8000eb4:	607b      	str	r3, [r7, #4]
 8000eb6:	4b10      	ldr	r3, [pc, #64]	; (8000ef8 <MX_DMA_Init+0x4c>)
 8000eb8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000eba:	4a0f      	ldr	r2, [pc, #60]	; (8000ef8 <MX_DMA_Init+0x4c>)
 8000ebc:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000ec0:	6313      	str	r3, [r2, #48]	; 0x30
 8000ec2:	4b0d      	ldr	r3, [pc, #52]	; (8000ef8 <MX_DMA_Init+0x4c>)
 8000ec4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ec6:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8000eca:	607b      	str	r3, [r7, #4]
 8000ecc:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream5_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 5, 0);
 8000ece:	2200      	movs	r2, #0
 8000ed0:	2105      	movs	r1, #5
 8000ed2:	2010      	movs	r0, #16
 8000ed4:	f001 f941 	bl	800215a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 8000ed8:	2010      	movs	r0, #16
 8000eda:	f001 f95a 	bl	8002192 <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream6_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream6_IRQn, 5, 0);
 8000ede:	2200      	movs	r2, #0
 8000ee0:	2105      	movs	r1, #5
 8000ee2:	2011      	movs	r0, #17
 8000ee4:	f001 f939 	bl	800215a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 8000ee8:	2011      	movs	r0, #17
 8000eea:	f001 f952 	bl	8002192 <HAL_NVIC_EnableIRQ>

}
 8000eee:	bf00      	nop
 8000ef0:	3708      	adds	r7, #8
 8000ef2:	46bd      	mov	sp, r7
 8000ef4:	bd80      	pop	{r7, pc}
 8000ef6:	bf00      	nop
 8000ef8:	40023800 	.word	0x40023800

08000efc <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000efc:	b580      	push	{r7, lr}
 8000efe:	b08c      	sub	sp, #48	; 0x30
 8000f00:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000f02:	f107 031c 	add.w	r3, r7, #28
 8000f06:	2200      	movs	r2, #0
 8000f08:	601a      	str	r2, [r3, #0]
 8000f0a:	605a      	str	r2, [r3, #4]
 8000f0c:	609a      	str	r2, [r3, #8]
 8000f0e:	60da      	str	r2, [r3, #12]
 8000f10:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000f12:	2300      	movs	r3, #0
 8000f14:	61bb      	str	r3, [r7, #24]
 8000f16:	4b5d      	ldr	r3, [pc, #372]	; (800108c <MX_GPIO_Init+0x190>)
 8000f18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f1a:	4a5c      	ldr	r2, [pc, #368]	; (800108c <MX_GPIO_Init+0x190>)
 8000f1c:	f043 0304 	orr.w	r3, r3, #4
 8000f20:	6313      	str	r3, [r2, #48]	; 0x30
 8000f22:	4b5a      	ldr	r3, [pc, #360]	; (800108c <MX_GPIO_Init+0x190>)
 8000f24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f26:	f003 0304 	and.w	r3, r3, #4
 8000f2a:	61bb      	str	r3, [r7, #24]
 8000f2c:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000f2e:	2300      	movs	r3, #0
 8000f30:	617b      	str	r3, [r7, #20]
 8000f32:	4b56      	ldr	r3, [pc, #344]	; (800108c <MX_GPIO_Init+0x190>)
 8000f34:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f36:	4a55      	ldr	r2, [pc, #340]	; (800108c <MX_GPIO_Init+0x190>)
 8000f38:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000f3c:	6313      	str	r3, [r2, #48]	; 0x30
 8000f3e:	4b53      	ldr	r3, [pc, #332]	; (800108c <MX_GPIO_Init+0x190>)
 8000f40:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f42:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000f46:	617b      	str	r3, [r7, #20]
 8000f48:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000f4a:	2300      	movs	r3, #0
 8000f4c:	613b      	str	r3, [r7, #16]
 8000f4e:	4b4f      	ldr	r3, [pc, #316]	; (800108c <MX_GPIO_Init+0x190>)
 8000f50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f52:	4a4e      	ldr	r2, [pc, #312]	; (800108c <MX_GPIO_Init+0x190>)
 8000f54:	f043 0301 	orr.w	r3, r3, #1
 8000f58:	6313      	str	r3, [r2, #48]	; 0x30
 8000f5a:	4b4c      	ldr	r3, [pc, #304]	; (800108c <MX_GPIO_Init+0x190>)
 8000f5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f5e:	f003 0301 	and.w	r3, r3, #1
 8000f62:	613b      	str	r3, [r7, #16]
 8000f64:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000f66:	2300      	movs	r3, #0
 8000f68:	60fb      	str	r3, [r7, #12]
 8000f6a:	4b48      	ldr	r3, [pc, #288]	; (800108c <MX_GPIO_Init+0x190>)
 8000f6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f6e:	4a47      	ldr	r2, [pc, #284]	; (800108c <MX_GPIO_Init+0x190>)
 8000f70:	f043 0302 	orr.w	r3, r3, #2
 8000f74:	6313      	str	r3, [r2, #48]	; 0x30
 8000f76:	4b45      	ldr	r3, [pc, #276]	; (800108c <MX_GPIO_Init+0x190>)
 8000f78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f7a:	f003 0302 	and.w	r3, r3, #2
 8000f7e:	60fb      	str	r3, [r7, #12]
 8000f80:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000f82:	2300      	movs	r3, #0
 8000f84:	60bb      	str	r3, [r7, #8]
 8000f86:	4b41      	ldr	r3, [pc, #260]	; (800108c <MX_GPIO_Init+0x190>)
 8000f88:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f8a:	4a40      	ldr	r2, [pc, #256]	; (800108c <MX_GPIO_Init+0x190>)
 8000f8c:	f043 0308 	orr.w	r3, r3, #8
 8000f90:	6313      	str	r3, [r2, #48]	; 0x30
 8000f92:	4b3e      	ldr	r3, [pc, #248]	; (800108c <MX_GPIO_Init+0x190>)
 8000f94:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f96:	f003 0308 	and.w	r3, r3, #8
 8000f9a:	60bb      	str	r3, [r7, #8]
 8000f9c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000f9e:	2300      	movs	r3, #0
 8000fa0:	607b      	str	r3, [r7, #4]
 8000fa2:	4b3a      	ldr	r3, [pc, #232]	; (800108c <MX_GPIO_Init+0x190>)
 8000fa4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000fa6:	4a39      	ldr	r2, [pc, #228]	; (800108c <MX_GPIO_Init+0x190>)
 8000fa8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000fac:	6313      	str	r3, [r2, #48]	; 0x30
 8000fae:	4b37      	ldr	r3, [pc, #220]	; (800108c <MX_GPIO_Init+0x190>)
 8000fb0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000fb2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000fb6:	607b      	str	r3, [r7, #4]
 8000fb8:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LD3_Pin|LD2_Pin, GPIO_PIN_RESET);
 8000fba:	2200      	movs	r2, #0
 8000fbc:	f44f 4181 	mov.w	r1, #16512	; 0x4080
 8000fc0:	4833      	ldr	r0, [pc, #204]	; (8001090 <MX_GPIO_Init+0x194>)
 8000fc2:	f002 f951 	bl	8003268 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(USB_PowerSwitchOn_GPIO_Port, USB_PowerSwitchOn_Pin, GPIO_PIN_RESET);
 8000fc6:	2200      	movs	r2, #0
 8000fc8:	2140      	movs	r1, #64	; 0x40
 8000fca:	4832      	ldr	r0, [pc, #200]	; (8001094 <MX_GPIO_Init+0x198>)
 8000fcc:	f002 f94c 	bl	8003268 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10, GPIO_PIN_RESET);
 8000fd0:	2200      	movs	r2, #0
 8000fd2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000fd6:	4830      	ldr	r0, [pc, #192]	; (8001098 <MX_GPIO_Init+0x19c>)
 8000fd8:	f002 f946 	bl	8003268 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : USER_Btn_Pin */
  GPIO_InitStruct.Pin = USER_Btn_Pin;
 8000fdc:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000fe0:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000fe2:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8000fe6:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000fe8:	2300      	movs	r3, #0
 8000fea:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(USER_Btn_GPIO_Port, &GPIO_InitStruct);
 8000fec:	f107 031c 	add.w	r3, r7, #28
 8000ff0:	4619      	mov	r1, r3
 8000ff2:	482a      	ldr	r0, [pc, #168]	; (800109c <MX_GPIO_Init+0x1a0>)
 8000ff4:	f001 ff8c 	bl	8002f10 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD3_Pin LD2_Pin */
  GPIO_InitStruct.Pin = LD3_Pin|LD2_Pin;
 8000ff8:	f44f 4381 	mov.w	r3, #16512	; 0x4080
 8000ffc:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000ffe:	2301      	movs	r3, #1
 8001000:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001002:	2300      	movs	r3, #0
 8001004:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001006:	2300      	movs	r3, #0
 8001008:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800100a:	f107 031c 	add.w	r3, r7, #28
 800100e:	4619      	mov	r1, r3
 8001010:	481f      	ldr	r0, [pc, #124]	; (8001090 <MX_GPIO_Init+0x194>)
 8001012:	f001 ff7d 	bl	8002f10 <HAL_GPIO_Init>

  /*Configure GPIO pin : USB_PowerSwitchOn_Pin */
  GPIO_InitStruct.Pin = USB_PowerSwitchOn_Pin;
 8001016:	2340      	movs	r3, #64	; 0x40
 8001018:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800101a:	2301      	movs	r3, #1
 800101c:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800101e:	2300      	movs	r3, #0
 8001020:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001022:	2300      	movs	r3, #0
 8001024:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(USB_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 8001026:	f107 031c 	add.w	r3, r7, #28
 800102a:	4619      	mov	r1, r3
 800102c:	4819      	ldr	r0, [pc, #100]	; (8001094 <MX_GPIO_Init+0x198>)
 800102e:	f001 ff6f 	bl	8002f10 <HAL_GPIO_Init>

  /*Configure GPIO pin : USB_OverCurrent_Pin */
  GPIO_InitStruct.Pin = USB_OverCurrent_Pin;
 8001032:	2380      	movs	r3, #128	; 0x80
 8001034:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001036:	2300      	movs	r3, #0
 8001038:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800103a:	2300      	movs	r3, #0
 800103c:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(USB_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 800103e:	f107 031c 	add.w	r3, r7, #28
 8001042:	4619      	mov	r1, r3
 8001044:	4813      	ldr	r0, [pc, #76]	; (8001094 <MX_GPIO_Init+0x198>)
 8001046:	f001 ff63 	bl	8002f10 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA9 */
  GPIO_InitStruct.Pin = GPIO_PIN_9;
 800104a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800104e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001050:	2300      	movs	r3, #0
 8001052:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001054:	2300      	movs	r3, #0
 8001056:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001058:	f107 031c 	add.w	r3, r7, #28
 800105c:	4619      	mov	r1, r3
 800105e:	480e      	ldr	r0, [pc, #56]	; (8001098 <MX_GPIO_Init+0x19c>)
 8001060:	f001 ff56 	bl	8002f10 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA10 */
  GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001064:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001068:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800106a:	2301      	movs	r3, #1
 800106c:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800106e:	2300      	movs	r3, #0
 8001070:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001072:	2300      	movs	r3, #0
 8001074:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001076:	f107 031c 	add.w	r3, r7, #28
 800107a:	4619      	mov	r1, r3
 800107c:	4806      	ldr	r0, [pc, #24]	; (8001098 <MX_GPIO_Init+0x19c>)
 800107e:	f001 ff47 	bl	8002f10 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8001082:	bf00      	nop
 8001084:	3730      	adds	r7, #48	; 0x30
 8001086:	46bd      	mov	sp, r7
 8001088:	bd80      	pop	{r7, pc}
 800108a:	bf00      	nop
 800108c:	40023800 	.word	0x40023800
 8001090:	40020400 	.word	0x40020400
 8001094:	40021800 	.word	0x40021800
 8001098:	40020000 	.word	0x40020000
 800109c:	40020800 	.word	0x40020800

080010a0 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80010a0:	b580      	push	{r7, lr}
 80010a2:	b082      	sub	sp, #8
 80010a4:	af00      	add	r7, sp, #0
 80010a6:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(1);
 80010a8:	2001      	movs	r0, #1
 80010aa:	f005 f9bc 	bl	8006426 <osDelay>
 80010ae:	e7fb      	b.n	80010a8 <StartDefaultTask+0x8>

080010b0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80010b0:	b480      	push	{r7}
 80010b2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80010b4:	b672      	cpsid	i
}
 80010b6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80010b8:	e7fe      	b.n	80010b8 <Error_Handler+0x8>
	...

080010bc <pwm_init>:
#include "pwm.h"

extern TIM_HandleTypeDef htim3;

void pwm_init(void)
{
 80010bc:	b580      	push	{r7, lr}
 80010be:	af00      	add	r7, sp, #0
  printf("Timer3 PWM start\r\n");
 80010c0:	4804      	ldr	r0, [pc, #16]	; (80010d4 <pwm_init+0x18>)
 80010c2:	f008 fb67 	bl	8009794 <puts>
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);
 80010c6:	2108      	movs	r1, #8
 80010c8:	4803      	ldr	r0, [pc, #12]	; (80010d8 <pwm_init+0x1c>)
 80010ca:	f002 ff43 	bl	8003f54 <HAL_TIM_PWM_Start>
}
 80010ce:	bf00      	nop
 80010d0:	bd80      	pop	{r7, pc}
 80010d2:	bf00      	nop
 80010d4:	0800ac0c 	.word	0x0800ac0c
 80010d8:	2000032c 	.word	0x2000032c

080010dc <pwm_dimming>:

bool pwm_dimming(uint8_t no, uint8_t duty)
{
 80010dc:	b480      	push	{r7}
 80010de:	b085      	sub	sp, #20
 80010e0:	af00      	add	r7, sp, #0
 80010e2:	4603      	mov	r3, r0
 80010e4:	460a      	mov	r2, r1
 80010e6:	71fb      	strb	r3, [r7, #7]
 80010e8:	4613      	mov	r3, r2
 80010ea:	71bb      	strb	r3, [r7, #6]
  bool res = true;
 80010ec:	2301      	movs	r3, #1
 80010ee:	73fb      	strb	r3, [r7, #15]
  uint16_t ccr = (uint16_t)duty * 10;
 80010f0:	79bb      	ldrb	r3, [r7, #6]
 80010f2:	b29b      	uxth	r3, r3
 80010f4:	461a      	mov	r2, r3
 80010f6:	0092      	lsls	r2, r2, #2
 80010f8:	4413      	add	r3, r2
 80010fa:	005b      	lsls	r3, r3, #1
 80010fc:	81bb      	strh	r3, [r7, #12]

  switch (no) {
 80010fe:	79fb      	ldrb	r3, [r7, #7]
 8001100:	2b00      	cmp	r3, #0
 8001102:	d104      	bne.n	800110e <pwm_dimming+0x32>
    case 0 :
      __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_3, ccr);
 8001104:	4b06      	ldr	r3, [pc, #24]	; (8001120 <pwm_dimming+0x44>)
 8001106:	681b      	ldr	r3, [r3, #0]
 8001108:	89ba      	ldrh	r2, [r7, #12]
 800110a:	63da      	str	r2, [r3, #60]	; 0x3c
      break;
 800110c:	e001      	b.n	8001112 <pwm_dimming+0x36>
    default :
      res = false;
 800110e:	2300      	movs	r3, #0
 8001110:	73fb      	strb	r3, [r7, #15]
  }

  return res;
 8001112:	7bfb      	ldrb	r3, [r7, #15]
}
 8001114:	4618      	mov	r0, r3
 8001116:	3714      	adds	r7, #20
 8001118:	46bd      	mov	sp, r7
 800111a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800111e:	4770      	bx	lr
 8001120:	2000032c 	.word	0x2000032c

08001124 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001124:	b580      	push	{r7, lr}
 8001126:	b082      	sub	sp, #8
 8001128:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800112a:	2300      	movs	r3, #0
 800112c:	607b      	str	r3, [r7, #4]
 800112e:	4b12      	ldr	r3, [pc, #72]	; (8001178 <HAL_MspInit+0x54>)
 8001130:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001132:	4a11      	ldr	r2, [pc, #68]	; (8001178 <HAL_MspInit+0x54>)
 8001134:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001138:	6453      	str	r3, [r2, #68]	; 0x44
 800113a:	4b0f      	ldr	r3, [pc, #60]	; (8001178 <HAL_MspInit+0x54>)
 800113c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800113e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001142:	607b      	str	r3, [r7, #4]
 8001144:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001146:	2300      	movs	r3, #0
 8001148:	603b      	str	r3, [r7, #0]
 800114a:	4b0b      	ldr	r3, [pc, #44]	; (8001178 <HAL_MspInit+0x54>)
 800114c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800114e:	4a0a      	ldr	r2, [pc, #40]	; (8001178 <HAL_MspInit+0x54>)
 8001150:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001154:	6413      	str	r3, [r2, #64]	; 0x40
 8001156:	4b08      	ldr	r3, [pc, #32]	; (8001178 <HAL_MspInit+0x54>)
 8001158:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800115a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800115e:	603b      	str	r3, [r7, #0]
 8001160:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001162:	2200      	movs	r2, #0
 8001164:	210f      	movs	r1, #15
 8001166:	f06f 0001 	mvn.w	r0, #1
 800116a:	f000 fff6 	bl	800215a <HAL_NVIC_SetPriority>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800116e:	bf00      	nop
 8001170:	3708      	adds	r7, #8
 8001172:	46bd      	mov	sp, r7
 8001174:	bd80      	pop	{r7, pc}
 8001176:	bf00      	nop
 8001178:	40023800 	.word	0x40023800

0800117c <HAL_ETH_MspInit>:
* This function configures the hardware resources used in this example
* @param heth: ETH handle pointer
* @retval None
*/
void HAL_ETH_MspInit(ETH_HandleTypeDef* heth)
{
 800117c:	b580      	push	{r7, lr}
 800117e:	b08e      	sub	sp, #56	; 0x38
 8001180:	af00      	add	r7, sp, #0
 8001182:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001184:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001188:	2200      	movs	r2, #0
 800118a:	601a      	str	r2, [r3, #0]
 800118c:	605a      	str	r2, [r3, #4]
 800118e:	609a      	str	r2, [r3, #8]
 8001190:	60da      	str	r2, [r3, #12]
 8001192:	611a      	str	r2, [r3, #16]
  if(heth->Instance==ETH)
 8001194:	687b      	ldr	r3, [r7, #4]
 8001196:	681b      	ldr	r3, [r3, #0]
 8001198:	4a55      	ldr	r2, [pc, #340]	; (80012f0 <HAL_ETH_MspInit+0x174>)
 800119a:	4293      	cmp	r3, r2
 800119c:	f040 80a4 	bne.w	80012e8 <HAL_ETH_MspInit+0x16c>
  {
  /* USER CODE BEGIN ETH_MspInit 0 */

  /* USER CODE END ETH_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ETH_CLK_ENABLE();
 80011a0:	2300      	movs	r3, #0
 80011a2:	623b      	str	r3, [r7, #32]
 80011a4:	4b53      	ldr	r3, [pc, #332]	; (80012f4 <HAL_ETH_MspInit+0x178>)
 80011a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80011a8:	4a52      	ldr	r2, [pc, #328]	; (80012f4 <HAL_ETH_MspInit+0x178>)
 80011aa:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80011ae:	6313      	str	r3, [r2, #48]	; 0x30
 80011b0:	4b50      	ldr	r3, [pc, #320]	; (80012f4 <HAL_ETH_MspInit+0x178>)
 80011b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80011b4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80011b8:	623b      	str	r3, [r7, #32]
 80011ba:	6a3b      	ldr	r3, [r7, #32]
 80011bc:	2300      	movs	r3, #0
 80011be:	61fb      	str	r3, [r7, #28]
 80011c0:	4b4c      	ldr	r3, [pc, #304]	; (80012f4 <HAL_ETH_MspInit+0x178>)
 80011c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80011c4:	4a4b      	ldr	r2, [pc, #300]	; (80012f4 <HAL_ETH_MspInit+0x178>)
 80011c6:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 80011ca:	6313      	str	r3, [r2, #48]	; 0x30
 80011cc:	4b49      	ldr	r3, [pc, #292]	; (80012f4 <HAL_ETH_MspInit+0x178>)
 80011ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80011d0:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 80011d4:	61fb      	str	r3, [r7, #28]
 80011d6:	69fb      	ldr	r3, [r7, #28]
 80011d8:	2300      	movs	r3, #0
 80011da:	61bb      	str	r3, [r7, #24]
 80011dc:	4b45      	ldr	r3, [pc, #276]	; (80012f4 <HAL_ETH_MspInit+0x178>)
 80011de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80011e0:	4a44      	ldr	r2, [pc, #272]	; (80012f4 <HAL_ETH_MspInit+0x178>)
 80011e2:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 80011e6:	6313      	str	r3, [r2, #48]	; 0x30
 80011e8:	4b42      	ldr	r3, [pc, #264]	; (80012f4 <HAL_ETH_MspInit+0x178>)
 80011ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80011ec:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80011f0:	61bb      	str	r3, [r7, #24]
 80011f2:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 80011f4:	2300      	movs	r3, #0
 80011f6:	617b      	str	r3, [r7, #20]
 80011f8:	4b3e      	ldr	r3, [pc, #248]	; (80012f4 <HAL_ETH_MspInit+0x178>)
 80011fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80011fc:	4a3d      	ldr	r2, [pc, #244]	; (80012f4 <HAL_ETH_MspInit+0x178>)
 80011fe:	f043 0304 	orr.w	r3, r3, #4
 8001202:	6313      	str	r3, [r2, #48]	; 0x30
 8001204:	4b3b      	ldr	r3, [pc, #236]	; (80012f4 <HAL_ETH_MspInit+0x178>)
 8001206:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001208:	f003 0304 	and.w	r3, r3, #4
 800120c:	617b      	str	r3, [r7, #20]
 800120e:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001210:	2300      	movs	r3, #0
 8001212:	613b      	str	r3, [r7, #16]
 8001214:	4b37      	ldr	r3, [pc, #220]	; (80012f4 <HAL_ETH_MspInit+0x178>)
 8001216:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001218:	4a36      	ldr	r2, [pc, #216]	; (80012f4 <HAL_ETH_MspInit+0x178>)
 800121a:	f043 0301 	orr.w	r3, r3, #1
 800121e:	6313      	str	r3, [r2, #48]	; 0x30
 8001220:	4b34      	ldr	r3, [pc, #208]	; (80012f4 <HAL_ETH_MspInit+0x178>)
 8001222:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001224:	f003 0301 	and.w	r3, r3, #1
 8001228:	613b      	str	r3, [r7, #16]
 800122a:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800122c:	2300      	movs	r3, #0
 800122e:	60fb      	str	r3, [r7, #12]
 8001230:	4b30      	ldr	r3, [pc, #192]	; (80012f4 <HAL_ETH_MspInit+0x178>)
 8001232:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001234:	4a2f      	ldr	r2, [pc, #188]	; (80012f4 <HAL_ETH_MspInit+0x178>)
 8001236:	f043 0302 	orr.w	r3, r3, #2
 800123a:	6313      	str	r3, [r2, #48]	; 0x30
 800123c:	4b2d      	ldr	r3, [pc, #180]	; (80012f4 <HAL_ETH_MspInit+0x178>)
 800123e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001240:	f003 0302 	and.w	r3, r3, #2
 8001244:	60fb      	str	r3, [r7, #12]
 8001246:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001248:	2300      	movs	r3, #0
 800124a:	60bb      	str	r3, [r7, #8]
 800124c:	4b29      	ldr	r3, [pc, #164]	; (80012f4 <HAL_ETH_MspInit+0x178>)
 800124e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001250:	4a28      	ldr	r2, [pc, #160]	; (80012f4 <HAL_ETH_MspInit+0x178>)
 8001252:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001256:	6313      	str	r3, [r2, #48]	; 0x30
 8001258:	4b26      	ldr	r3, [pc, #152]	; (80012f4 <HAL_ETH_MspInit+0x178>)
 800125a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800125c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001260:	60bb      	str	r3, [r7, #8]
 8001262:	68bb      	ldr	r3, [r7, #8]
    PC5     ------> ETH_RXD1
    PB13     ------> ETH_TXD1
    PG11     ------> ETH_TX_EN
    PG13     ------> ETH_TXD0
    */
    GPIO_InitStruct.Pin = RMII_MDC_Pin|RMII_RXD0_Pin|RMII_RXD1_Pin;
 8001264:	2332      	movs	r3, #50	; 0x32
 8001266:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001268:	2302      	movs	r3, #2
 800126a:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800126c:	2300      	movs	r3, #0
 800126e:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001270:	2303      	movs	r3, #3
 8001272:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 8001274:	230b      	movs	r3, #11
 8001276:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001278:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800127c:	4619      	mov	r1, r3
 800127e:	481e      	ldr	r0, [pc, #120]	; (80012f8 <HAL_ETH_MspInit+0x17c>)
 8001280:	f001 fe46 	bl	8002f10 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = RMII_REF_CLK_Pin|RMII_MDIO_Pin|RMII_CRS_DV_Pin;
 8001284:	2386      	movs	r3, #134	; 0x86
 8001286:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001288:	2302      	movs	r3, #2
 800128a:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800128c:	2300      	movs	r3, #0
 800128e:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001290:	2303      	movs	r3, #3
 8001292:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 8001294:	230b      	movs	r3, #11
 8001296:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001298:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800129c:	4619      	mov	r1, r3
 800129e:	4817      	ldr	r0, [pc, #92]	; (80012fc <HAL_ETH_MspInit+0x180>)
 80012a0:	f001 fe36 	bl	8002f10 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = RMII_TXD1_Pin;
 80012a4:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80012a8:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012aa:	2302      	movs	r3, #2
 80012ac:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012ae:	2300      	movs	r3, #0
 80012b0:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80012b2:	2303      	movs	r3, #3
 80012b4:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 80012b6:	230b      	movs	r3, #11
 80012b8:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(RMII_TXD1_GPIO_Port, &GPIO_InitStruct);
 80012ba:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80012be:	4619      	mov	r1, r3
 80012c0:	480f      	ldr	r0, [pc, #60]	; (8001300 <HAL_ETH_MspInit+0x184>)
 80012c2:	f001 fe25 	bl	8002f10 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = RMII_TX_EN_Pin|RMII_TXD0_Pin;
 80012c6:	f44f 5320 	mov.w	r3, #10240	; 0x2800
 80012ca:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012cc:	2302      	movs	r3, #2
 80012ce:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012d0:	2300      	movs	r3, #0
 80012d2:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80012d4:	2303      	movs	r3, #3
 80012d6:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 80012d8:	230b      	movs	r3, #11
 80012da:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80012dc:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80012e0:	4619      	mov	r1, r3
 80012e2:	4808      	ldr	r0, [pc, #32]	; (8001304 <HAL_ETH_MspInit+0x188>)
 80012e4:	f001 fe14 	bl	8002f10 <HAL_GPIO_Init>
  /* USER CODE BEGIN ETH_MspInit 1 */

  /* USER CODE END ETH_MspInit 1 */
  }

}
 80012e8:	bf00      	nop
 80012ea:	3738      	adds	r7, #56	; 0x38
 80012ec:	46bd      	mov	sp, r7
 80012ee:	bd80      	pop	{r7, pc}
 80012f0:	40028000 	.word	0x40028000
 80012f4:	40023800 	.word	0x40023800
 80012f8:	40020800 	.word	0x40020800
 80012fc:	40020000 	.word	0x40020000
 8001300:	40020400 	.word	0x40020400
 8001304:	40021800 	.word	0x40021800

08001308 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001308:	b480      	push	{r7}
 800130a:	b085      	sub	sp, #20
 800130c:	af00      	add	r7, sp, #0
 800130e:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM3)
 8001310:	687b      	ldr	r3, [r7, #4]
 8001312:	681b      	ldr	r3, [r3, #0]
 8001314:	4a0b      	ldr	r2, [pc, #44]	; (8001344 <HAL_TIM_Base_MspInit+0x3c>)
 8001316:	4293      	cmp	r3, r2
 8001318:	d10d      	bne.n	8001336 <HAL_TIM_Base_MspInit+0x2e>
  {
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 800131a:	2300      	movs	r3, #0
 800131c:	60fb      	str	r3, [r7, #12]
 800131e:	4b0a      	ldr	r3, [pc, #40]	; (8001348 <HAL_TIM_Base_MspInit+0x40>)
 8001320:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001322:	4a09      	ldr	r2, [pc, #36]	; (8001348 <HAL_TIM_Base_MspInit+0x40>)
 8001324:	f043 0302 	orr.w	r3, r3, #2
 8001328:	6413      	str	r3, [r2, #64]	; 0x40
 800132a:	4b07      	ldr	r3, [pc, #28]	; (8001348 <HAL_TIM_Base_MspInit+0x40>)
 800132c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800132e:	f003 0302 	and.w	r3, r3, #2
 8001332:	60fb      	str	r3, [r7, #12]
 8001334:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8001336:	bf00      	nop
 8001338:	3714      	adds	r7, #20
 800133a:	46bd      	mov	sp, r7
 800133c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001340:	4770      	bx	lr
 8001342:	bf00      	nop
 8001344:	40000400 	.word	0x40000400
 8001348:	40023800 	.word	0x40023800

0800134c <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 800134c:	b580      	push	{r7, lr}
 800134e:	b088      	sub	sp, #32
 8001350:	af00      	add	r7, sp, #0
 8001352:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001354:	f107 030c 	add.w	r3, r7, #12
 8001358:	2200      	movs	r2, #0
 800135a:	601a      	str	r2, [r3, #0]
 800135c:	605a      	str	r2, [r3, #4]
 800135e:	609a      	str	r2, [r3, #8]
 8001360:	60da      	str	r2, [r3, #12]
 8001362:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM3)
 8001364:	687b      	ldr	r3, [r7, #4]
 8001366:	681b      	ldr	r3, [r3, #0]
 8001368:	4a12      	ldr	r2, [pc, #72]	; (80013b4 <HAL_TIM_MspPostInit+0x68>)
 800136a:	4293      	cmp	r3, r2
 800136c:	d11d      	bne.n	80013aa <HAL_TIM_MspPostInit+0x5e>
  {
  /* USER CODE BEGIN TIM3_MspPostInit 0 */

  /* USER CODE END TIM3_MspPostInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 800136e:	2300      	movs	r3, #0
 8001370:	60bb      	str	r3, [r7, #8]
 8001372:	4b11      	ldr	r3, [pc, #68]	; (80013b8 <HAL_TIM_MspPostInit+0x6c>)
 8001374:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001376:	4a10      	ldr	r2, [pc, #64]	; (80013b8 <HAL_TIM_MspPostInit+0x6c>)
 8001378:	f043 0302 	orr.w	r3, r3, #2
 800137c:	6313      	str	r3, [r2, #48]	; 0x30
 800137e:	4b0e      	ldr	r3, [pc, #56]	; (80013b8 <HAL_TIM_MspPostInit+0x6c>)
 8001380:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001382:	f003 0302 	and.w	r3, r3, #2
 8001386:	60bb      	str	r3, [r7, #8]
 8001388:	68bb      	ldr	r3, [r7, #8]
    /**TIM3 GPIO Configuration
    PB0     ------> TIM3_CH3
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 800138a:	2301      	movs	r3, #1
 800138c:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800138e:	2302      	movs	r3, #2
 8001390:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001392:	2300      	movs	r3, #0
 8001394:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001396:	2300      	movs	r3, #0
 8001398:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 800139a:	2302      	movs	r3, #2
 800139c:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800139e:	f107 030c 	add.w	r3, r7, #12
 80013a2:	4619      	mov	r1, r3
 80013a4:	4805      	ldr	r0, [pc, #20]	; (80013bc <HAL_TIM_MspPostInit+0x70>)
 80013a6:	f001 fdb3 	bl	8002f10 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM3_MspPostInit 1 */

  /* USER CODE END TIM3_MspPostInit 1 */
  }

}
 80013aa:	bf00      	nop
 80013ac:	3720      	adds	r7, #32
 80013ae:	46bd      	mov	sp, r7
 80013b0:	bd80      	pop	{r7, pc}
 80013b2:	bf00      	nop
 80013b4:	40000400 	.word	0x40000400
 80013b8:	40023800 	.word	0x40023800
 80013bc:	40020400 	.word	0x40020400

080013c0 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80013c0:	b580      	push	{r7, lr}
 80013c2:	b08c      	sub	sp, #48	; 0x30
 80013c4:	af00      	add	r7, sp, #0
 80013c6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013c8:	f107 031c 	add.w	r3, r7, #28
 80013cc:	2200      	movs	r2, #0
 80013ce:	601a      	str	r2, [r3, #0]
 80013d0:	605a      	str	r2, [r3, #4]
 80013d2:	609a      	str	r2, [r3, #8]
 80013d4:	60da      	str	r2, [r3, #12]
 80013d6:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART2)
 80013d8:	687b      	ldr	r3, [r7, #4]
 80013da:	681b      	ldr	r3, [r3, #0]
 80013dc:	4a69      	ldr	r2, [pc, #420]	; (8001584 <HAL_UART_MspInit+0x1c4>)
 80013de:	4293      	cmp	r3, r2
 80013e0:	f040 8091 	bne.w	8001506 <HAL_UART_MspInit+0x146>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 80013e4:	2300      	movs	r3, #0
 80013e6:	61bb      	str	r3, [r7, #24]
 80013e8:	4b67      	ldr	r3, [pc, #412]	; (8001588 <HAL_UART_MspInit+0x1c8>)
 80013ea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80013ec:	4a66      	ldr	r2, [pc, #408]	; (8001588 <HAL_UART_MspInit+0x1c8>)
 80013ee:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80013f2:	6413      	str	r3, [r2, #64]	; 0x40
 80013f4:	4b64      	ldr	r3, [pc, #400]	; (8001588 <HAL_UART_MspInit+0x1c8>)
 80013f6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80013f8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80013fc:	61bb      	str	r3, [r7, #24]
 80013fe:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001400:	2300      	movs	r3, #0
 8001402:	617b      	str	r3, [r7, #20]
 8001404:	4b60      	ldr	r3, [pc, #384]	; (8001588 <HAL_UART_MspInit+0x1c8>)
 8001406:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001408:	4a5f      	ldr	r2, [pc, #380]	; (8001588 <HAL_UART_MspInit+0x1c8>)
 800140a:	f043 0308 	orr.w	r3, r3, #8
 800140e:	6313      	str	r3, [r2, #48]	; 0x30
 8001410:	4b5d      	ldr	r3, [pc, #372]	; (8001588 <HAL_UART_MspInit+0x1c8>)
 8001412:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001414:	f003 0308 	and.w	r3, r3, #8
 8001418:	617b      	str	r3, [r7, #20]
 800141a:	697b      	ldr	r3, [r7, #20]
    /**USART2 GPIO Configuration
    PD5     ------> USART2_TX
    PD6     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 800141c:	2360      	movs	r3, #96	; 0x60
 800141e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001420:	2302      	movs	r3, #2
 8001422:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001424:	2300      	movs	r3, #0
 8001426:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001428:	2303      	movs	r3, #3
 800142a:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 800142c:	2307      	movs	r3, #7
 800142e:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001430:	f107 031c 	add.w	r3, r7, #28
 8001434:	4619      	mov	r1, r3
 8001436:	4855      	ldr	r0, [pc, #340]	; (800158c <HAL_UART_MspInit+0x1cc>)
 8001438:	f001 fd6a 	bl	8002f10 <HAL_GPIO_Init>

    /* USART2 DMA Init */
    /* USART2_RX Init */
    hdma_usart2_rx.Instance = DMA1_Stream5;
 800143c:	4b54      	ldr	r3, [pc, #336]	; (8001590 <HAL_UART_MspInit+0x1d0>)
 800143e:	4a55      	ldr	r2, [pc, #340]	; (8001594 <HAL_UART_MspInit+0x1d4>)
 8001440:	601a      	str	r2, [r3, #0]
    hdma_usart2_rx.Init.Channel = DMA_CHANNEL_4;
 8001442:	4b53      	ldr	r3, [pc, #332]	; (8001590 <HAL_UART_MspInit+0x1d0>)
 8001444:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8001448:	605a      	str	r2, [r3, #4]
    hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 800144a:	4b51      	ldr	r3, [pc, #324]	; (8001590 <HAL_UART_MspInit+0x1d0>)
 800144c:	2200      	movs	r2, #0
 800144e:	609a      	str	r2, [r3, #8]
    hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 8001450:	4b4f      	ldr	r3, [pc, #316]	; (8001590 <HAL_UART_MspInit+0x1d0>)
 8001452:	2200      	movs	r2, #0
 8001454:	60da      	str	r2, [r3, #12]
    hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 8001456:	4b4e      	ldr	r3, [pc, #312]	; (8001590 <HAL_UART_MspInit+0x1d0>)
 8001458:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800145c:	611a      	str	r2, [r3, #16]
    hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 800145e:	4b4c      	ldr	r3, [pc, #304]	; (8001590 <HAL_UART_MspInit+0x1d0>)
 8001460:	2200      	movs	r2, #0
 8001462:	615a      	str	r2, [r3, #20]
    hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8001464:	4b4a      	ldr	r3, [pc, #296]	; (8001590 <HAL_UART_MspInit+0x1d0>)
 8001466:	2200      	movs	r2, #0
 8001468:	619a      	str	r2, [r3, #24]
    hdma_usart2_rx.Init.Mode = DMA_NORMAL;
 800146a:	4b49      	ldr	r3, [pc, #292]	; (8001590 <HAL_UART_MspInit+0x1d0>)
 800146c:	2200      	movs	r2, #0
 800146e:	61da      	str	r2, [r3, #28]
    hdma_usart2_rx.Init.Priority = DMA_PRIORITY_LOW;
 8001470:	4b47      	ldr	r3, [pc, #284]	; (8001590 <HAL_UART_MspInit+0x1d0>)
 8001472:	2200      	movs	r2, #0
 8001474:	621a      	str	r2, [r3, #32]
    hdma_usart2_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8001476:	4b46      	ldr	r3, [pc, #280]	; (8001590 <HAL_UART_MspInit+0x1d0>)
 8001478:	2200      	movs	r2, #0
 800147a:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_usart2_rx) != HAL_OK)
 800147c:	4844      	ldr	r0, [pc, #272]	; (8001590 <HAL_UART_MspInit+0x1d0>)
 800147e:	f000 fea3 	bl	80021c8 <HAL_DMA_Init>
 8001482:	4603      	mov	r3, r0
 8001484:	2b00      	cmp	r3, #0
 8001486:	d001      	beq.n	800148c <HAL_UART_MspInit+0xcc>
    {
      Error_Handler();
 8001488:	f7ff fe12 	bl	80010b0 <Error_Handler>
    }

    __HAL_LINKDMA(huart,hdmarx,hdma_usart2_rx);
 800148c:	687b      	ldr	r3, [r7, #4]
 800148e:	4a40      	ldr	r2, [pc, #256]	; (8001590 <HAL_UART_MspInit+0x1d0>)
 8001490:	639a      	str	r2, [r3, #56]	; 0x38
 8001492:	4a3f      	ldr	r2, [pc, #252]	; (8001590 <HAL_UART_MspInit+0x1d0>)
 8001494:	687b      	ldr	r3, [r7, #4]
 8001496:	6393      	str	r3, [r2, #56]	; 0x38

    /* USART2_TX Init */
    hdma_usart2_tx.Instance = DMA1_Stream6;
 8001498:	4b3f      	ldr	r3, [pc, #252]	; (8001598 <HAL_UART_MspInit+0x1d8>)
 800149a:	4a40      	ldr	r2, [pc, #256]	; (800159c <HAL_UART_MspInit+0x1dc>)
 800149c:	601a      	str	r2, [r3, #0]
    hdma_usart2_tx.Init.Channel = DMA_CHANNEL_4;
 800149e:	4b3e      	ldr	r3, [pc, #248]	; (8001598 <HAL_UART_MspInit+0x1d8>)
 80014a0:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80014a4:	605a      	str	r2, [r3, #4]
    hdma_usart2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80014a6:	4b3c      	ldr	r3, [pc, #240]	; (8001598 <HAL_UART_MspInit+0x1d8>)
 80014a8:	2240      	movs	r2, #64	; 0x40
 80014aa:	609a      	str	r2, [r3, #8]
    hdma_usart2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 80014ac:	4b3a      	ldr	r3, [pc, #232]	; (8001598 <HAL_UART_MspInit+0x1d8>)
 80014ae:	2200      	movs	r2, #0
 80014b0:	60da      	str	r2, [r3, #12]
    hdma_usart2_tx.Init.MemInc = DMA_MINC_ENABLE;
 80014b2:	4b39      	ldr	r3, [pc, #228]	; (8001598 <HAL_UART_MspInit+0x1d8>)
 80014b4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80014b8:	611a      	str	r2, [r3, #16]
    hdma_usart2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 80014ba:	4b37      	ldr	r3, [pc, #220]	; (8001598 <HAL_UART_MspInit+0x1d8>)
 80014bc:	2200      	movs	r2, #0
 80014be:	615a      	str	r2, [r3, #20]
    hdma_usart2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 80014c0:	4b35      	ldr	r3, [pc, #212]	; (8001598 <HAL_UART_MspInit+0x1d8>)
 80014c2:	2200      	movs	r2, #0
 80014c4:	619a      	str	r2, [r3, #24]
    hdma_usart2_tx.Init.Mode = DMA_NORMAL;
 80014c6:	4b34      	ldr	r3, [pc, #208]	; (8001598 <HAL_UART_MspInit+0x1d8>)
 80014c8:	2200      	movs	r2, #0
 80014ca:	61da      	str	r2, [r3, #28]
    hdma_usart2_tx.Init.Priority = DMA_PRIORITY_LOW;
 80014cc:	4b32      	ldr	r3, [pc, #200]	; (8001598 <HAL_UART_MspInit+0x1d8>)
 80014ce:	2200      	movs	r2, #0
 80014d0:	621a      	str	r2, [r3, #32]
    hdma_usart2_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80014d2:	4b31      	ldr	r3, [pc, #196]	; (8001598 <HAL_UART_MspInit+0x1d8>)
 80014d4:	2200      	movs	r2, #0
 80014d6:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_usart2_tx) != HAL_OK)
 80014d8:	482f      	ldr	r0, [pc, #188]	; (8001598 <HAL_UART_MspInit+0x1d8>)
 80014da:	f000 fe75 	bl	80021c8 <HAL_DMA_Init>
 80014de:	4603      	mov	r3, r0
 80014e0:	2b00      	cmp	r3, #0
 80014e2:	d001      	beq.n	80014e8 <HAL_UART_MspInit+0x128>
    {
      Error_Handler();
 80014e4:	f7ff fde4 	bl	80010b0 <Error_Handler>
    }

    __HAL_LINKDMA(huart,hdmatx,hdma_usart2_tx);
 80014e8:	687b      	ldr	r3, [r7, #4]
 80014ea:	4a2b      	ldr	r2, [pc, #172]	; (8001598 <HAL_UART_MspInit+0x1d8>)
 80014ec:	635a      	str	r2, [r3, #52]	; 0x34
 80014ee:	4a2a      	ldr	r2, [pc, #168]	; (8001598 <HAL_UART_MspInit+0x1d8>)
 80014f0:	687b      	ldr	r3, [r7, #4]
 80014f2:	6393      	str	r3, [r2, #56]	; 0x38

    /* USART2 interrupt Init */
    HAL_NVIC_SetPriority(USART2_IRQn, 5, 0);
 80014f4:	2200      	movs	r2, #0
 80014f6:	2105      	movs	r1, #5
 80014f8:	2026      	movs	r0, #38	; 0x26
 80014fa:	f000 fe2e 	bl	800215a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 80014fe:	2026      	movs	r0, #38	; 0x26
 8001500:	f000 fe47 	bl	8002192 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }

}
 8001504:	e039      	b.n	800157a <HAL_UART_MspInit+0x1ba>
  else if(huart->Instance==USART3)
 8001506:	687b      	ldr	r3, [r7, #4]
 8001508:	681b      	ldr	r3, [r3, #0]
 800150a:	4a25      	ldr	r2, [pc, #148]	; (80015a0 <HAL_UART_MspInit+0x1e0>)
 800150c:	4293      	cmp	r3, r2
 800150e:	d134      	bne.n	800157a <HAL_UART_MspInit+0x1ba>
    __HAL_RCC_USART3_CLK_ENABLE();
 8001510:	2300      	movs	r3, #0
 8001512:	613b      	str	r3, [r7, #16]
 8001514:	4b1c      	ldr	r3, [pc, #112]	; (8001588 <HAL_UART_MspInit+0x1c8>)
 8001516:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001518:	4a1b      	ldr	r2, [pc, #108]	; (8001588 <HAL_UART_MspInit+0x1c8>)
 800151a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800151e:	6413      	str	r3, [r2, #64]	; 0x40
 8001520:	4b19      	ldr	r3, [pc, #100]	; (8001588 <HAL_UART_MspInit+0x1c8>)
 8001522:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001524:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8001528:	613b      	str	r3, [r7, #16]
 800152a:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800152c:	2300      	movs	r3, #0
 800152e:	60fb      	str	r3, [r7, #12]
 8001530:	4b15      	ldr	r3, [pc, #84]	; (8001588 <HAL_UART_MspInit+0x1c8>)
 8001532:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001534:	4a14      	ldr	r2, [pc, #80]	; (8001588 <HAL_UART_MspInit+0x1c8>)
 8001536:	f043 0308 	orr.w	r3, r3, #8
 800153a:	6313      	str	r3, [r2, #48]	; 0x30
 800153c:	4b12      	ldr	r3, [pc, #72]	; (8001588 <HAL_UART_MspInit+0x1c8>)
 800153e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001540:	f003 0308 	and.w	r3, r3, #8
 8001544:	60fb      	str	r3, [r7, #12]
 8001546:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = STLK_RX_Pin|STLK_TX_Pin;
 8001548:	f44f 7340 	mov.w	r3, #768	; 0x300
 800154c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800154e:	2302      	movs	r3, #2
 8001550:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001552:	2300      	movs	r3, #0
 8001554:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001556:	2303      	movs	r3, #3
 8001558:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 800155a:	2307      	movs	r3, #7
 800155c:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800155e:	f107 031c 	add.w	r3, r7, #28
 8001562:	4619      	mov	r1, r3
 8001564:	4809      	ldr	r0, [pc, #36]	; (800158c <HAL_UART_MspInit+0x1cc>)
 8001566:	f001 fcd3 	bl	8002f10 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART3_IRQn, 5, 0);
 800156a:	2200      	movs	r2, #0
 800156c:	2105      	movs	r1, #5
 800156e:	2027      	movs	r0, #39	; 0x27
 8001570:	f000 fdf3 	bl	800215a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART3_IRQn);
 8001574:	2027      	movs	r0, #39	; 0x27
 8001576:	f000 fe0c 	bl	8002192 <HAL_NVIC_EnableIRQ>
}
 800157a:	bf00      	nop
 800157c:	3730      	adds	r7, #48	; 0x30
 800157e:	46bd      	mov	sp, r7
 8001580:	bd80      	pop	{r7, pc}
 8001582:	bf00      	nop
 8001584:	40004400 	.word	0x40004400
 8001588:	40023800 	.word	0x40023800
 800158c:	40020c00 	.word	0x40020c00
 8001590:	200003fc 	.word	0x200003fc
 8001594:	40026088 	.word	0x40026088
 8001598:	2000045c 	.word	0x2000045c
 800159c:	400260a0 	.word	0x400260a0
 80015a0:	40004800 	.word	0x40004800

080015a4 <HAL_PCD_MspInit>:
* This function configures the hardware resources used in this example
* @param hpcd: PCD handle pointer
* @retval None
*/
void HAL_PCD_MspInit(PCD_HandleTypeDef* hpcd)
{
 80015a4:	b580      	push	{r7, lr}
 80015a6:	b08a      	sub	sp, #40	; 0x28
 80015a8:	af00      	add	r7, sp, #0
 80015aa:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80015ac:	f107 0314 	add.w	r3, r7, #20
 80015b0:	2200      	movs	r2, #0
 80015b2:	601a      	str	r2, [r3, #0]
 80015b4:	605a      	str	r2, [r3, #4]
 80015b6:	609a      	str	r2, [r3, #8]
 80015b8:	60da      	str	r2, [r3, #12]
 80015ba:	611a      	str	r2, [r3, #16]
  if(hpcd->Instance==USB_OTG_FS)
 80015bc:	687b      	ldr	r3, [r7, #4]
 80015be:	681b      	ldr	r3, [r3, #0]
 80015c0:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 80015c4:	d132      	bne.n	800162c <HAL_PCD_MspInit+0x88>
  {
  /* USER CODE BEGIN USB_OTG_FS_MspInit 0 */

  /* USER CODE END USB_OTG_FS_MspInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80015c6:	2300      	movs	r3, #0
 80015c8:	613b      	str	r3, [r7, #16]
 80015ca:	4b1a      	ldr	r3, [pc, #104]	; (8001634 <HAL_PCD_MspInit+0x90>)
 80015cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80015ce:	4a19      	ldr	r2, [pc, #100]	; (8001634 <HAL_PCD_MspInit+0x90>)
 80015d0:	f043 0301 	orr.w	r3, r3, #1
 80015d4:	6313      	str	r3, [r2, #48]	; 0x30
 80015d6:	4b17      	ldr	r3, [pc, #92]	; (8001634 <HAL_PCD_MspInit+0x90>)
 80015d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80015da:	f003 0301 	and.w	r3, r3, #1
 80015de:	613b      	str	r3, [r7, #16]
 80015e0:	693b      	ldr	r3, [r7, #16]
    /**USB_OTG_FS GPIO Configuration
    PA8     ------> USB_OTG_FS_SOF
    PA11     ------> USB_OTG_FS_DM
    PA12     ------> USB_OTG_FS_DP
    */
    GPIO_InitStruct.Pin = USB_SOF_Pin|USB_DM_Pin|USB_DP_Pin;
 80015e2:	f44f 53c8 	mov.w	r3, #6400	; 0x1900
 80015e6:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80015e8:	2302      	movs	r3, #2
 80015ea:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015ec:	2300      	movs	r3, #0
 80015ee:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015f0:	2303      	movs	r3, #3
 80015f2:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 80015f4:	230a      	movs	r3, #10
 80015f6:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015f8:	f107 0314 	add.w	r3, r7, #20
 80015fc:	4619      	mov	r1, r3
 80015fe:	480e      	ldr	r0, [pc, #56]	; (8001638 <HAL_PCD_MspInit+0x94>)
 8001600:	f001 fc86 	bl	8002f10 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
 8001604:	4b0b      	ldr	r3, [pc, #44]	; (8001634 <HAL_PCD_MspInit+0x90>)
 8001606:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001608:	4a0a      	ldr	r2, [pc, #40]	; (8001634 <HAL_PCD_MspInit+0x90>)
 800160a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800160e:	6353      	str	r3, [r2, #52]	; 0x34
 8001610:	2300      	movs	r3, #0
 8001612:	60fb      	str	r3, [r7, #12]
 8001614:	4b07      	ldr	r3, [pc, #28]	; (8001634 <HAL_PCD_MspInit+0x90>)
 8001616:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001618:	4a06      	ldr	r2, [pc, #24]	; (8001634 <HAL_PCD_MspInit+0x90>)
 800161a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800161e:	6453      	str	r3, [r2, #68]	; 0x44
 8001620:	4b04      	ldr	r3, [pc, #16]	; (8001634 <HAL_PCD_MspInit+0x90>)
 8001622:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001624:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001628:	60fb      	str	r3, [r7, #12]
 800162a:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN USB_OTG_FS_MspInit 1 */

  /* USER CODE END USB_OTG_FS_MspInit 1 */
  }

}
 800162c:	bf00      	nop
 800162e:	3728      	adds	r7, #40	; 0x28
 8001630:	46bd      	mov	sp, r7
 8001632:	bd80      	pop	{r7, pc}
 8001634:	40023800 	.word	0x40023800
 8001638:	40020000 	.word	0x40020000

0800163c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800163c:	b480      	push	{r7}
 800163e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001640:	e7fe      	b.n	8001640 <NMI_Handler+0x4>

08001642 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001642:	b480      	push	{r7}
 8001644:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001646:	e7fe      	b.n	8001646 <HardFault_Handler+0x4>

08001648 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001648:	b480      	push	{r7}
 800164a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800164c:	e7fe      	b.n	800164c <MemManage_Handler+0x4>

0800164e <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800164e:	b480      	push	{r7}
 8001650:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001652:	e7fe      	b.n	8001652 <BusFault_Handler+0x4>

08001654 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001654:	b480      	push	{r7}
 8001656:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001658:	e7fe      	b.n	8001658 <UsageFault_Handler+0x4>

0800165a <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800165a:	b480      	push	{r7}
 800165c:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800165e:	bf00      	nop
 8001660:	46bd      	mov	sp, r7
 8001662:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001666:	4770      	bx	lr

08001668 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001668:	b580      	push	{r7, lr}
 800166a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800166c:	f000 fc56 	bl	8001f1c <HAL_IncTick>
#if (INCLUDE_xTaskGetSchedulerState == 1 )
  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED)
 8001670:	f006 fdbc 	bl	80081ec <xTaskGetSchedulerState>
 8001674:	4603      	mov	r3, r0
 8001676:	2b01      	cmp	r3, #1
 8001678:	d001      	beq.n	800167e <SysTick_Handler+0x16>
  {
#endif /* INCLUDE_xTaskGetSchedulerState */
  xPortSysTickHandler();
 800167a:	f007 fc5d 	bl	8008f38 <xPortSysTickHandler>
  }
#endif /* INCLUDE_xTaskGetSchedulerState */
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800167e:	bf00      	nop
 8001680:	bd80      	pop	{r7, pc}
	...

08001684 <DMA1_Stream5_IRQHandler>:

/**
  * @brief This function handles DMA1 stream5 global interrupt.
  */
void DMA1_Stream5_IRQHandler(void)
{
 8001684:	b580      	push	{r7, lr}
 8001686:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream5_IRQn 0 */

  /* USER CODE END DMA1_Stream5_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart2_rx);
 8001688:	4802      	ldr	r0, [pc, #8]	; (8001694 <DMA1_Stream5_IRQHandler+0x10>)
 800168a:	f000 fedd 	bl	8002448 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream5_IRQn 1 */

  /* USER CODE END DMA1_Stream5_IRQn 1 */
}
 800168e:	bf00      	nop
 8001690:	bd80      	pop	{r7, pc}
 8001692:	bf00      	nop
 8001694:	200003fc 	.word	0x200003fc

08001698 <DMA1_Stream6_IRQHandler>:

/**
  * @brief This function handles DMA1 stream6 global interrupt.
  */
void DMA1_Stream6_IRQHandler(void)
{
 8001698:	b580      	push	{r7, lr}
 800169a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream6_IRQn 0 */

  /* USER CODE END DMA1_Stream6_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart2_tx);
 800169c:	4802      	ldr	r0, [pc, #8]	; (80016a8 <DMA1_Stream6_IRQHandler+0x10>)
 800169e:	f000 fed3 	bl	8002448 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream6_IRQn 1 */

  /* USER CODE END DMA1_Stream6_IRQn 1 */
}
 80016a2:	bf00      	nop
 80016a4:	bd80      	pop	{r7, pc}
 80016a6:	bf00      	nop
 80016a8:	2000045c 	.word	0x2000045c

080016ac <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 80016ac:	b580      	push	{r7, lr}
 80016ae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 80016b0:	4802      	ldr	r0, [pc, #8]	; (80016bc <USART2_IRQHandler+0x10>)
 80016b2:	f003 fb3d 	bl	8004d30 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 80016b6:	bf00      	nop
 80016b8:	bd80      	pop	{r7, pc}
 80016ba:	bf00      	nop
 80016bc:	20000374 	.word	0x20000374

080016c0 <USART3_IRQHandler>:

/**
  * @brief This function handles USART3 global interrupt.
  */
void USART3_IRQHandler(void)
{
 80016c0:	b580      	push	{r7, lr}
 80016c2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART3_IRQn 0 */

  /* USER CODE END USART3_IRQn 0 */
  HAL_UART_IRQHandler(&huart3);
 80016c4:	4802      	ldr	r0, [pc, #8]	; (80016d0 <USART3_IRQHandler+0x10>)
 80016c6:	f003 fb33 	bl	8004d30 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART3_IRQn 1 */

  /* USER CODE END USART3_IRQn 1 */
}
 80016ca:	bf00      	nop
 80016cc:	bd80      	pop	{r7, pc}
 80016ce:	bf00      	nop
 80016d0:	200003b8 	.word	0x200003b8

080016d4 <_getpid>:
 80016d4:	b480      	push	{r7}
 80016d6:	af00      	add	r7, sp, #0
 80016d8:	2301      	movs	r3, #1
 80016da:	4618      	mov	r0, r3
 80016dc:	46bd      	mov	sp, r7
 80016de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016e2:	4770      	bx	lr

080016e4 <_kill>:
 80016e4:	b580      	push	{r7, lr}
 80016e6:	b082      	sub	sp, #8
 80016e8:	af00      	add	r7, sp, #0
 80016ea:	6078      	str	r0, [r7, #4]
 80016ec:	6039      	str	r1, [r7, #0]
 80016ee:	f008 fa61 	bl	8009bb4 <__errno>
 80016f2:	4603      	mov	r3, r0
 80016f4:	2216      	movs	r2, #22
 80016f6:	601a      	str	r2, [r3, #0]
 80016f8:	f04f 33ff 	mov.w	r3, #4294967295
 80016fc:	4618      	mov	r0, r3
 80016fe:	3708      	adds	r7, #8
 8001700:	46bd      	mov	sp, r7
 8001702:	bd80      	pop	{r7, pc}

08001704 <_exit>:
 8001704:	b580      	push	{r7, lr}
 8001706:	b082      	sub	sp, #8
 8001708:	af00      	add	r7, sp, #0
 800170a:	6078      	str	r0, [r7, #4]
 800170c:	f04f 31ff 	mov.w	r1, #4294967295
 8001710:	6878      	ldr	r0, [r7, #4]
 8001712:	f7ff ffe7 	bl	80016e4 <_kill>
 8001716:	e7fe      	b.n	8001716 <_exit+0x12>

08001718 <_read>:
 8001718:	b580      	push	{r7, lr}
 800171a:	b086      	sub	sp, #24
 800171c:	af00      	add	r7, sp, #0
 800171e:	60f8      	str	r0, [r7, #12]
 8001720:	60b9      	str	r1, [r7, #8]
 8001722:	607a      	str	r2, [r7, #4]
 8001724:	2300      	movs	r3, #0
 8001726:	617b      	str	r3, [r7, #20]
 8001728:	e00a      	b.n	8001740 <_read+0x28>
 800172a:	f3af 8000 	nop.w
 800172e:	4601      	mov	r1, r0
 8001730:	68bb      	ldr	r3, [r7, #8]
 8001732:	1c5a      	adds	r2, r3, #1
 8001734:	60ba      	str	r2, [r7, #8]
 8001736:	b2ca      	uxtb	r2, r1
 8001738:	701a      	strb	r2, [r3, #0]
 800173a:	697b      	ldr	r3, [r7, #20]
 800173c:	3301      	adds	r3, #1
 800173e:	617b      	str	r3, [r7, #20]
 8001740:	697a      	ldr	r2, [r7, #20]
 8001742:	687b      	ldr	r3, [r7, #4]
 8001744:	429a      	cmp	r2, r3
 8001746:	dbf0      	blt.n	800172a <_read+0x12>
 8001748:	687b      	ldr	r3, [r7, #4]
 800174a:	4618      	mov	r0, r3
 800174c:	3718      	adds	r7, #24
 800174e:	46bd      	mov	sp, r7
 8001750:	bd80      	pop	{r7, pc}

08001752 <_close>:
 8001752:	b480      	push	{r7}
 8001754:	b083      	sub	sp, #12
 8001756:	af00      	add	r7, sp, #0
 8001758:	6078      	str	r0, [r7, #4]
 800175a:	f04f 33ff 	mov.w	r3, #4294967295
 800175e:	4618      	mov	r0, r3
 8001760:	370c      	adds	r7, #12
 8001762:	46bd      	mov	sp, r7
 8001764:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001768:	4770      	bx	lr

0800176a <_fstat>:
 800176a:	b480      	push	{r7}
 800176c:	b083      	sub	sp, #12
 800176e:	af00      	add	r7, sp, #0
 8001770:	6078      	str	r0, [r7, #4]
 8001772:	6039      	str	r1, [r7, #0]
 8001774:	683b      	ldr	r3, [r7, #0]
 8001776:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800177a:	605a      	str	r2, [r3, #4]
 800177c:	2300      	movs	r3, #0
 800177e:	4618      	mov	r0, r3
 8001780:	370c      	adds	r7, #12
 8001782:	46bd      	mov	sp, r7
 8001784:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001788:	4770      	bx	lr

0800178a <_isatty>:
 800178a:	b480      	push	{r7}
 800178c:	b083      	sub	sp, #12
 800178e:	af00      	add	r7, sp, #0
 8001790:	6078      	str	r0, [r7, #4]
 8001792:	2301      	movs	r3, #1
 8001794:	4618      	mov	r0, r3
 8001796:	370c      	adds	r7, #12
 8001798:	46bd      	mov	sp, r7
 800179a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800179e:	4770      	bx	lr

080017a0 <_lseek>:
 80017a0:	b480      	push	{r7}
 80017a2:	b085      	sub	sp, #20
 80017a4:	af00      	add	r7, sp, #0
 80017a6:	60f8      	str	r0, [r7, #12]
 80017a8:	60b9      	str	r1, [r7, #8]
 80017aa:	607a      	str	r2, [r7, #4]
 80017ac:	2300      	movs	r3, #0
 80017ae:	4618      	mov	r0, r3
 80017b0:	3714      	adds	r7, #20
 80017b2:	46bd      	mov	sp, r7
 80017b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017b8:	4770      	bx	lr
	...

080017bc <_sbrk>:
 80017bc:	b580      	push	{r7, lr}
 80017be:	b086      	sub	sp, #24
 80017c0:	af00      	add	r7, sp, #0
 80017c2:	6078      	str	r0, [r7, #4]
 80017c4:	4a14      	ldr	r2, [pc, #80]	; (8001818 <_sbrk+0x5c>)
 80017c6:	4b15      	ldr	r3, [pc, #84]	; (800181c <_sbrk+0x60>)
 80017c8:	1ad3      	subs	r3, r2, r3
 80017ca:	617b      	str	r3, [r7, #20]
 80017cc:	697b      	ldr	r3, [r7, #20]
 80017ce:	613b      	str	r3, [r7, #16]
 80017d0:	4b13      	ldr	r3, [pc, #76]	; (8001820 <_sbrk+0x64>)
 80017d2:	681b      	ldr	r3, [r3, #0]
 80017d4:	2b00      	cmp	r3, #0
 80017d6:	d102      	bne.n	80017de <_sbrk+0x22>
 80017d8:	4b11      	ldr	r3, [pc, #68]	; (8001820 <_sbrk+0x64>)
 80017da:	4a12      	ldr	r2, [pc, #72]	; (8001824 <_sbrk+0x68>)
 80017dc:	601a      	str	r2, [r3, #0]
 80017de:	4b10      	ldr	r3, [pc, #64]	; (8001820 <_sbrk+0x64>)
 80017e0:	681a      	ldr	r2, [r3, #0]
 80017e2:	687b      	ldr	r3, [r7, #4]
 80017e4:	4413      	add	r3, r2
 80017e6:	693a      	ldr	r2, [r7, #16]
 80017e8:	429a      	cmp	r2, r3
 80017ea:	d207      	bcs.n	80017fc <_sbrk+0x40>
 80017ec:	f008 f9e2 	bl	8009bb4 <__errno>
 80017f0:	4603      	mov	r3, r0
 80017f2:	220c      	movs	r2, #12
 80017f4:	601a      	str	r2, [r3, #0]
 80017f6:	f04f 33ff 	mov.w	r3, #4294967295
 80017fa:	e009      	b.n	8001810 <_sbrk+0x54>
 80017fc:	4b08      	ldr	r3, [pc, #32]	; (8001820 <_sbrk+0x64>)
 80017fe:	681b      	ldr	r3, [r3, #0]
 8001800:	60fb      	str	r3, [r7, #12]
 8001802:	4b07      	ldr	r3, [pc, #28]	; (8001820 <_sbrk+0x64>)
 8001804:	681a      	ldr	r2, [r3, #0]
 8001806:	687b      	ldr	r3, [r7, #4]
 8001808:	4413      	add	r3, r2
 800180a:	4a05      	ldr	r2, [pc, #20]	; (8001820 <_sbrk+0x64>)
 800180c:	6013      	str	r3, [r2, #0]
 800180e:	68fb      	ldr	r3, [r7, #12]
 8001810:	4618      	mov	r0, r3
 8001812:	3718      	adds	r7, #24
 8001814:	46bd      	mov	sp, r7
 8001816:	bd80      	pop	{r7, pc}
 8001818:	20030000 	.word	0x20030000
 800181c:	00000400 	.word	0x00000400
 8001820:	200009d4 	.word	0x200009d4
 8001824:	20005da8 	.word	0x20005da8

08001828 <SystemInit>:
 8001828:	b480      	push	{r7}
 800182a:	af00      	add	r7, sp, #0
 800182c:	4b06      	ldr	r3, [pc, #24]	; (8001848 <SystemInit+0x20>)
 800182e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001832:	4a05      	ldr	r2, [pc, #20]	; (8001848 <SystemInit+0x20>)
 8001834:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001838:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 800183c:	bf00      	nop
 800183e:	46bd      	mov	sp, r7
 8001840:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001844:	4770      	bx	lr
 8001846:	bf00      	nop
 8001848:	e000ed00 	.word	0xe000ed00

0800184c <uart_init>:

static void uartProc_Task(void *arg);
static void uartProc_Timer(void *arg);

void uart_init(void)
{
 800184c:	b580      	push	{r7, lr}
 800184e:	af00      	add	r7, sp, #0
  uartTask_handle = osThreadNew(uartProc_Task, NULL, &uartTask_attributes);
 8001850:	4a22      	ldr	r2, [pc, #136]	; (80018dc <uart_init+0x90>)
 8001852:	2100      	movs	r1, #0
 8001854:	4822      	ldr	r0, [pc, #136]	; (80018e0 <uart_init+0x94>)
 8001856:	f004 fd53 	bl	8006300 <osThreadNew>
 800185a:	4603      	mov	r3, r0
 800185c:	4a21      	ldr	r2, [pc, #132]	; (80018e4 <uart_init+0x98>)
 800185e:	6013      	str	r3, [r2, #0]
  if (uartTask_handle == NULL) {
 8001860:	4b20      	ldr	r3, [pc, #128]	; (80018e4 <uart_init+0x98>)
 8001862:	681b      	ldr	r3, [r3, #0]
 8001864:	2b00      	cmp	r3, #0
 8001866:	d105      	bne.n	8001874 <uart_init+0x28>
  	printf("%s : %d\r\n", __func__, __LINE__);
 8001868:	222e      	movs	r2, #46	; 0x2e
 800186a:	491f      	ldr	r1, [pc, #124]	; (80018e8 <uart_init+0x9c>)
 800186c:	481f      	ldr	r0, [pc, #124]	; (80018ec <uart_init+0xa0>)
 800186e:	f007 ff2b 	bl	80096c8 <iprintf>
  	while (1);
 8001872:	e7fe      	b.n	8001872 <uart_init+0x26>
  }

  msgBufQ_handle = osMessageQueueNew(5, sizeof(MSG_T), NULL);
 8001874:	2200      	movs	r2, #0
 8001876:	210a      	movs	r1, #10
 8001878:	2005      	movs	r0, #5
 800187a:	f004 feaf 	bl	80065dc <osMessageQueueNew>
 800187e:	4603      	mov	r3, r0
 8001880:	4a1b      	ldr	r2, [pc, #108]	; (80018f0 <uart_init+0xa4>)
 8001882:	6013      	str	r3, [r2, #0]
  if (msgBufQ_handle == NULL) {
 8001884:	4b1a      	ldr	r3, [pc, #104]	; (80018f0 <uart_init+0xa4>)
 8001886:	681b      	ldr	r3, [r3, #0]
 8001888:	2b00      	cmp	r3, #0
 800188a:	d105      	bne.n	8001898 <uart_init+0x4c>
  	printf("%s : %d\r\n", __func__, __LINE__);
 800188c:	2234      	movs	r2, #52	; 0x34
 800188e:	4916      	ldr	r1, [pc, #88]	; (80018e8 <uart_init+0x9c>)
 8001890:	4816      	ldr	r0, [pc, #88]	; (80018ec <uart_init+0xa0>)
 8001892:	f007 ff19 	bl	80096c8 <iprintf>
  	while (1);
 8001896:	e7fe      	b.n	8001896 <uart_init+0x4a>
  }

  uartTimer_handle = osTimerNew(uartProc_Timer, osTimerOnce, NULL, NULL);
 8001898:	2300      	movs	r3, #0
 800189a:	2200      	movs	r2, #0
 800189c:	2100      	movs	r1, #0
 800189e:	4815      	ldr	r0, [pc, #84]	; (80018f4 <uart_init+0xa8>)
 80018a0:	f004 fdf2 	bl	8006488 <osTimerNew>
 80018a4:	4603      	mov	r3, r0
 80018a6:	4a14      	ldr	r2, [pc, #80]	; (80018f8 <uart_init+0xac>)
 80018a8:	6013      	str	r3, [r2, #0]
  if (uartTimer_handle == NULL) {
 80018aa:	4b13      	ldr	r3, [pc, #76]	; (80018f8 <uart_init+0xac>)
 80018ac:	681b      	ldr	r3, [r3, #0]
 80018ae:	2b00      	cmp	r3, #0
 80018b0:	d105      	bne.n	80018be <uart_init+0x72>
  	printf("%s : %d\r\n", __func__, __LINE__);
 80018b2:	223a      	movs	r2, #58	; 0x3a
 80018b4:	490c      	ldr	r1, [pc, #48]	; (80018e8 <uart_init+0x9c>)
 80018b6:	480d      	ldr	r0, [pc, #52]	; (80018ec <uart_init+0xa0>)
 80018b8:	f007 ff06 	bl	80096c8 <iprintf>
  	while (1);
 80018bc:	e7fe      	b.n	80018bc <uart_init+0x70>
  }

  HAL_UART_Receive_IT(&huart2, (uint8_t *)&rxd[0], 1);
 80018be:	2201      	movs	r2, #1
 80018c0:	490e      	ldr	r1, [pc, #56]	; (80018fc <uart_init+0xb0>)
 80018c2:	480f      	ldr	r0, [pc, #60]	; (8001900 <uart_init+0xb4>)
 80018c4:	f003 fa03 	bl	8004cce <HAL_UART_Receive_IT>
  HAL_UART_Receive_IT(&huart3, (uint8_t *)&rxd[1], 1);
 80018c8:	2201      	movs	r2, #1
 80018ca:	490e      	ldr	r1, [pc, #56]	; (8001904 <uart_init+0xb8>)
 80018cc:	480e      	ldr	r0, [pc, #56]	; (8001908 <uart_init+0xbc>)
 80018ce:	f003 f9fe 	bl	8004cce <HAL_UART_Receive_IT>

  printf("UART Initialized...\r\n");
 80018d2:	480e      	ldr	r0, [pc, #56]	; (800190c <uart_init+0xc0>)
 80018d4:	f007 ff5e 	bl	8009794 <puts>
}
 80018d8:	bf00      	nop
 80018da:	bd80      	pop	{r7, pc}
 80018dc:	0800ad60 	.word	0x0800ad60
 80018e0:	08001961 	.word	0x08001961
 80018e4:	20000b80 	.word	0x20000b80
 80018e8:	0800ad84 	.word	0x0800ad84
 80018ec:	0800ac20 	.word	0x0800ac20
 80018f0:	20000b7c 	.word	0x20000b7c
 80018f4:	08001ccd 	.word	0x08001ccd
 80018f8:	20000b84 	.word	0x20000b84
 80018fc:	20000b78 	.word	0x20000b78
 8001900:	20000374 	.word	0x20000374
 8001904:	20000b79 	.word	0x20000b79
 8001908:	200003b8 	.word	0x200003b8
 800190c:	0800ac2c 	.word	0x0800ac2c

08001910 <uart_regcbf>:

void uart_regcbf(uint8_t idx, UART_CBF cbf)
{
 8001910:	b480      	push	{r7}
 8001912:	b083      	sub	sp, #12
 8001914:	af00      	add	r7, sp, #0
 8001916:	4603      	mov	r3, r0
 8001918:	6039      	str	r1, [r7, #0]
 800191a:	71fb      	strb	r3, [r7, #7]
  uart_cbf[idx] = cbf;
 800191c:	79fb      	ldrb	r3, [r7, #7]
 800191e:	4905      	ldr	r1, [pc, #20]	; (8001934 <uart_regcbf+0x24>)
 8001920:	683a      	ldr	r2, [r7, #0]
 8001922:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8001926:	bf00      	nop
 8001928:	370c      	adds	r7, #12
 800192a:	46bd      	mov	sp, r7
 800192c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001930:	4770      	bx	lr
 8001932:	bf00      	nop
 8001934:	20000b6c 	.word	0x20000b6c

08001938 <uart_QPut>:

void uart_QPut(const void *msg_ptr, uint8_t msg_prio, uint32_t timeout)
{
 8001938:	b580      	push	{r7, lr}
 800193a:	b084      	sub	sp, #16
 800193c:	af00      	add	r7, sp, #0
 800193e:	60f8      	str	r0, [r7, #12]
 8001940:	460b      	mov	r3, r1
 8001942:	607a      	str	r2, [r7, #4]
 8001944:	72fb      	strb	r3, [r7, #11]
	osMessageQueuePut(msgBufQ_handle, msg_ptr, msg_prio, timeout);
 8001946:	4b05      	ldr	r3, [pc, #20]	; (800195c <uart_QPut+0x24>)
 8001948:	6818      	ldr	r0, [r3, #0]
 800194a:	7afa      	ldrb	r2, [r7, #11]
 800194c:	687b      	ldr	r3, [r7, #4]
 800194e:	68f9      	ldr	r1, [r7, #12]
 8001950:	f004 feb8 	bl	80066c4 <osMessageQueuePut>
}
 8001954:	bf00      	nop
 8001956:	3710      	adds	r7, #16
 8001958:	46bd      	mov	sp, r7
 800195a:	bd80      	pop	{r7, pc}
 800195c:	20000b7c 	.word	0x20000b7c

08001960 <uartProc_Task>:

static void uartProc_Task(void *arg)
{
 8001960:	b580      	push	{r7, lr}
 8001962:	b08a      	sub	sp, #40	; 0x28
 8001964:	af00      	add	r7, sp, #0
 8001966:	6078      	str	r0, [r7, #4]
	//static uint8_t msg_buf[2][202];
	MSG_T qRx, qTx;

	for (;;) {
		osMessageQueueGet(msgBufQ_handle, &qRx, NULL, osWaitForever);
 8001968:	4b55      	ldr	r3, [pc, #340]	; (8001ac0 <uartProc_Task+0x160>)
 800196a:	6818      	ldr	r0, [r3, #0]
 800196c:	f107 0118 	add.w	r1, r7, #24
 8001970:	f04f 33ff 	mov.w	r3, #4294967295
 8001974:	2200      	movs	r2, #0
 8001976:	f004 ff05 	bl	8006784 <osMessageQueueGet>

		switch (qRx.id) {
 800197a:	7e3b      	ldrb	r3, [r7, #24]
 800197c:	3b10      	subs	r3, #16
 800197e:	2b11      	cmp	r3, #17
 8001980:	d8f2      	bhi.n	8001968 <uartProc_Task+0x8>
 8001982:	a201      	add	r2, pc, #4	; (adr r2, 8001988 <uartProc_Task+0x28>)
 8001984:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001988:	080019d1 	.word	0x080019d1
 800198c:	080019e5 	.word	0x080019e5
 8001990:	08001a1b 	.word	0x08001a1b
 8001994:	08001a09 	.word	0x08001a09
 8001998:	08001969 	.word	0x08001969
 800199c:	08001969 	.word	0x08001969
 80019a0:	08001969 	.word	0x08001969
 80019a4:	08001969 	.word	0x08001969
 80019a8:	08001969 	.word	0x08001969
 80019ac:	08001969 	.word	0x08001969
 80019b0:	08001969 	.word	0x08001969
 80019b4:	08001969 	.word	0x08001969
 80019b8:	08001969 	.word	0x08001969
 80019bc:	08001969 	.word	0x08001969
 80019c0:	08001969 	.word	0x08001969
 80019c4:	08001969 	.word	0x08001969
 80019c8:	08001a35 	.word	0x08001a35
 80019cc:	08001a3d 	.word	0x08001a3d

			case E_MSG_UART2_TX :
				HAL_UART_Transmit(&huart2, qRx.pData, qRx.len, 0xffff);
 80019d0:	f8d7 101a 	ldr.w	r1, [r7, #26]
 80019d4:	7e7b      	ldrb	r3, [r7, #25]
 80019d6:	b29a      	uxth	r2, r3
 80019d8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80019dc:	4839      	ldr	r0, [pc, #228]	; (8001ac4 <uartProc_Task+0x164>)
 80019de:	f003 f8e4 	bl	8004baa <HAL_UART_Transmit>
				break;
 80019e2:	e06c      	b.n	8001abe <uartProc_Task+0x15e>

			case E_MSG_UART2_TX_N_CHECK :
				HAL_UART_Transmit(&huart2, qRx.pData, qRx.len, 0xffff);
 80019e4:	f8d7 101a 	ldr.w	r1, [r7, #26]
 80019e8:	7e7b      	ldrb	r3, [r7, #25]
 80019ea:	b29a      	uxth	r2, r3
 80019ec:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80019f0:	4834      	ldr	r0, [pc, #208]	; (8001ac4 <uartProc_Task+0x164>)
 80019f2:	f003 f8da 	bl	8004baa <HAL_UART_Transmit>
				osTimerStart(uartTimer_handle, qRx.timeout);
 80019f6:	4b34      	ldr	r3, [pc, #208]	; (8001ac8 <uartProc_Task+0x168>)
 80019f8:	681b      	ldr	r3, [r3, #0]
 80019fa:	f8d7 201e 	ldr.w	r2, [r7, #30]
 80019fe:	4611      	mov	r1, r2
 8001a00:	4618      	mov	r0, r3
 8001a02:	f004 fdbd 	bl	8006580 <osTimerStart>
				break;
 8001a06:	e05a      	b.n	8001abe <uartProc_Task+0x15e>

			case E_MSG_UART2_RX_CHECK :
				//if (qRx.timeout == osWaitForever) break;
				osTimerStart(uartTimer_handle, qRx.timeout);
 8001a08:	4b2f      	ldr	r3, [pc, #188]	; (8001ac8 <uartProc_Task+0x168>)
 8001a0a:	681b      	ldr	r3, [r3, #0]
 8001a0c:	f8d7 201e 	ldr.w	r2, [r7, #30]
 8001a10:	4611      	mov	r1, r2
 8001a12:	4618      	mov	r0, r3
 8001a14:	f004 fdb4 	bl	8006580 <osTimerStart>
				break;
 8001a18:	e051      	b.n	8001abe <uartProc_Task+0x15e>

			case E_MSG_UART2_RX : {
				if (qRx.len != 0) {
 8001a1a:	7e7b      	ldrb	r3, [r7, #25]
 8001a1c:	2b00      	cmp	r3, #0
 8001a1e:	d04a      	beq.n	8001ab6 <uartProc_Task+0x156>
					qRx.id = E_MSG_BT_RX;
 8001a20:	2331      	movs	r3, #49	; 0x31
 8001a22:	763b      	strb	r3, [r7, #24]
					bt_QPut(&qRx, 0, 0);
 8001a24:	f107 0318 	add.w	r3, r7, #24
 8001a28:	2200      	movs	r2, #0
 8001a2a:	2100      	movs	r1, #0
 8001a2c:	4618      	mov	r0, r3
 8001a2e:	f7fe fe33 	bl	8000698 <bt_QPut>
				}
				//printf("[URX2] %s\r\n", qRx.pData);
			} break;
 8001a32:	e040      	b.n	8001ab6 <uartProc_Task+0x156>

			case E_MSG_UART3_TX : {
				printf("E_MSG_UART3_TX\r\n");
 8001a34:	4825      	ldr	r0, [pc, #148]	; (8001acc <uartProc_Task+0x16c>)
 8001a36:	f007 fead 	bl	8009794 <puts>
			} break;
 8001a3a:	e040      	b.n	8001abe <uartProc_Task+0x15e>
//					if (isalnum(ch) || isspace(ch)) printf("%c ", ch);
//					else printf(". ");
//				}
//				printf("\r\n");

				PKT_T *pPkt = (PKT_T *)qRx.pData;
 8001a3c:	f8d7 301a 	ldr.w	r3, [r7, #26]
 8001a40:	627b      	str	r3, [r7, #36]	; 0x24

				switch (pPkt->cmd) {
 8001a42:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a44:	881b      	ldrh	r3, [r3, #0]
 8001a46:	b29b      	uxth	r3, r3
 8001a48:	2b03      	cmp	r3, #3
 8001a4a:	d030      	beq.n	8001aae <uartProc_Task+0x14e>
 8001a4c:	2b03      	cmp	r3, #3
 8001a4e:	dc34      	bgt.n	8001aba <uartProc_Task+0x15a>
 8001a50:	2b01      	cmp	r3, #1
 8001a52:	d002      	beq.n	8001a5a <uartProc_Task+0xfa>
 8001a54:	2b02      	cmp	r3, #2
 8001a56:	d012      	beq.n	8001a7e <uartProc_Task+0x11e>

					default : {

					}
				}
			} break;
 8001a58:	e02f      	b.n	8001aba <uartProc_Task+0x15a>
						pPkt->data[pPkt->len] = '\0'; // string
 8001a5a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a5c:	789b      	ldrb	r3, [r3, #2]
 8001a5e:	461a      	mov	r2, r3
 8001a60:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a62:	4413      	add	r3, r2
 8001a64:	2200      	movs	r2, #0
 8001a66:	70da      	strb	r2, [r3, #3]
						if (uart_cbf[0] != NULL) uart_cbf[0](pPkt->data);
 8001a68:	4b19      	ldr	r3, [pc, #100]	; (8001ad0 <uartProc_Task+0x170>)
 8001a6a:	681b      	ldr	r3, [r3, #0]
 8001a6c:	2b00      	cmp	r3, #0
 8001a6e:	d020      	beq.n	8001ab2 <uartProc_Task+0x152>
 8001a70:	4b17      	ldr	r3, [pc, #92]	; (8001ad0 <uartProc_Task+0x170>)
 8001a72:	681b      	ldr	r3, [r3, #0]
 8001a74:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001a76:	3203      	adds	r2, #3
 8001a78:	4610      	mov	r0, r2
 8001a7a:	4798      	blx	r3
					} break;
 8001a7c:	e019      	b.n	8001ab2 <uartProc_Task+0x152>
						pPkt->data[pPkt->len] = '\0';
 8001a7e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a80:	789b      	ldrb	r3, [r3, #2]
 8001a82:	461a      	mov	r2, r3
 8001a84:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a86:	4413      	add	r3, r2
 8001a88:	2200      	movs	r2, #0
 8001a8a:	70da      	strb	r2, [r3, #3]
						printf("%s\r\n", pPkt->data);
 8001a8c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a8e:	3303      	adds	r3, #3
 8001a90:	4619      	mov	r1, r3
 8001a92:	4810      	ldr	r0, [pc, #64]	; (8001ad4 <uartProc_Task+0x174>)
 8001a94:	f007 fe18 	bl	80096c8 <iprintf>
						HAL_UART_Transmit(&huart2, pPkt->data, pPkt->len, 0xffff);
 8001a98:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a9a:	1cd9      	adds	r1, r3, #3
 8001a9c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a9e:	789b      	ldrb	r3, [r3, #2]
 8001aa0:	b29a      	uxth	r2, r3
 8001aa2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001aa6:	4807      	ldr	r0, [pc, #28]	; (8001ac4 <uartProc_Task+0x164>)
 8001aa8:	f003 f87f 	bl	8004baa <HAL_UART_Transmit>
					} break;
 8001aac:	e002      	b.n	8001ab4 <uartProc_Task+0x154>
					} break;
 8001aae:	bf00      	nop
 8001ab0:	e003      	b.n	8001aba <uartProc_Task+0x15a>
					} break;
 8001ab2:	bf00      	nop
			} break;
 8001ab4:	e001      	b.n	8001aba <uartProc_Task+0x15a>
			} break;
 8001ab6:	bf00      	nop
 8001ab8:	e756      	b.n	8001968 <uartProc_Task+0x8>
			} break;
 8001aba:	bf00      	nop
 8001abc:	e754      	b.n	8001968 <uartProc_Task+0x8>
		osMessageQueueGet(msgBufQ_handle, &qRx, NULL, osWaitForever);
 8001abe:	e753      	b.n	8001968 <uartProc_Task+0x8>
 8001ac0:	20000b7c 	.word	0x20000b7c
 8001ac4:	20000374 	.word	0x20000374
 8001ac8:	20000b84 	.word	0x20000b84
 8001acc:	0800ac44 	.word	0x0800ac44
 8001ad0:	20000b6c 	.word	0x20000b6c
 8001ad4:	0800ac54 	.word	0x0800ac54

08001ad8 <slip_tx>:
#define D_FESC	0xDB
#define D_TFEND	0xDC
#define D_TFESC	0xDD

bool slip_tx(const uint8_t *pTx, const uint8_t Len, uint8_t *pEnBuf, uint8_t *pEnLen)
{
 8001ad8:	b480      	push	{r7}
 8001ada:	b087      	sub	sp, #28
 8001adc:	af00      	add	r7, sp, #0
 8001ade:	60f8      	str	r0, [r7, #12]
 8001ae0:	607a      	str	r2, [r7, #4]
 8001ae2:	603b      	str	r3, [r7, #0]
 8001ae4:	460b      	mov	r3, r1
 8001ae6:	72fb      	strb	r3, [r7, #11]
	uint8_t idx = 0;
 8001ae8:	2300      	movs	r3, #0
 8001aea:	75fb      	strb	r3, [r7, #23]

	if (Len > D_TX_MAX) return false;
 8001aec:	7afb      	ldrb	r3, [r7, #11]
 8001aee:	2b64      	cmp	r3, #100	; 0x64
 8001af0:	d901      	bls.n	8001af6 <slip_tx+0x1e>
 8001af2:	2300      	movs	r3, #0
 8001af4:	e05b      	b.n	8001bae <slip_tx+0xd6>
	if (pEnBuf == NULL) return false;
 8001af6:	687b      	ldr	r3, [r7, #4]
 8001af8:	2b00      	cmp	r3, #0
 8001afa:	d101      	bne.n	8001b00 <slip_tx+0x28>
 8001afc:	2300      	movs	r3, #0
 8001afe:	e056      	b.n	8001bae <slip_tx+0xd6>
	//if (*pEnLen < (D_TX_MAX * 2 + 2)) return false;

	pEnBuf[idx++] = D_FEND;
 8001b00:	7dfb      	ldrb	r3, [r7, #23]
 8001b02:	1c5a      	adds	r2, r3, #1
 8001b04:	75fa      	strb	r2, [r7, #23]
 8001b06:	461a      	mov	r2, r3
 8001b08:	687b      	ldr	r3, [r7, #4]
 8001b0a:	4413      	add	r3, r2
 8001b0c:	22c0      	movs	r2, #192	; 0xc0
 8001b0e:	701a      	strb	r2, [r3, #0]
	for (int i=0; i < Len; i++) {
 8001b10:	2300      	movs	r3, #0
 8001b12:	613b      	str	r3, [r7, #16]
 8001b14:	e03b      	b.n	8001b8e <slip_tx+0xb6>
		if (pTx[i] == D_FEND) {
 8001b16:	693b      	ldr	r3, [r7, #16]
 8001b18:	68fa      	ldr	r2, [r7, #12]
 8001b1a:	4413      	add	r3, r2
 8001b1c:	781b      	ldrb	r3, [r3, #0]
 8001b1e:	2bc0      	cmp	r3, #192	; 0xc0
 8001b20:	d110      	bne.n	8001b44 <slip_tx+0x6c>
			pEnBuf[idx++] = D_FESC;
 8001b22:	7dfb      	ldrb	r3, [r7, #23]
 8001b24:	1c5a      	adds	r2, r3, #1
 8001b26:	75fa      	strb	r2, [r7, #23]
 8001b28:	461a      	mov	r2, r3
 8001b2a:	687b      	ldr	r3, [r7, #4]
 8001b2c:	4413      	add	r3, r2
 8001b2e:	22db      	movs	r2, #219	; 0xdb
 8001b30:	701a      	strb	r2, [r3, #0]
			pEnBuf[idx++] = D_TFEND;
 8001b32:	7dfb      	ldrb	r3, [r7, #23]
 8001b34:	1c5a      	adds	r2, r3, #1
 8001b36:	75fa      	strb	r2, [r7, #23]
 8001b38:	461a      	mov	r2, r3
 8001b3a:	687b      	ldr	r3, [r7, #4]
 8001b3c:	4413      	add	r3, r2
 8001b3e:	22dc      	movs	r2, #220	; 0xdc
 8001b40:	701a      	strb	r2, [r3, #0]
 8001b42:	e021      	b.n	8001b88 <slip_tx+0xb0>
		} else if (pTx[i] == D_FESC) {
 8001b44:	693b      	ldr	r3, [r7, #16]
 8001b46:	68fa      	ldr	r2, [r7, #12]
 8001b48:	4413      	add	r3, r2
 8001b4a:	781b      	ldrb	r3, [r3, #0]
 8001b4c:	2bdb      	cmp	r3, #219	; 0xdb
 8001b4e:	d110      	bne.n	8001b72 <slip_tx+0x9a>
			pEnBuf[idx++] = D_FESC;
 8001b50:	7dfb      	ldrb	r3, [r7, #23]
 8001b52:	1c5a      	adds	r2, r3, #1
 8001b54:	75fa      	strb	r2, [r7, #23]
 8001b56:	461a      	mov	r2, r3
 8001b58:	687b      	ldr	r3, [r7, #4]
 8001b5a:	4413      	add	r3, r2
 8001b5c:	22db      	movs	r2, #219	; 0xdb
 8001b5e:	701a      	strb	r2, [r3, #0]
			pEnBuf[idx++] = D_TFESC;
 8001b60:	7dfb      	ldrb	r3, [r7, #23]
 8001b62:	1c5a      	adds	r2, r3, #1
 8001b64:	75fa      	strb	r2, [r7, #23]
 8001b66:	461a      	mov	r2, r3
 8001b68:	687b      	ldr	r3, [r7, #4]
 8001b6a:	4413      	add	r3, r2
 8001b6c:	22dd      	movs	r2, #221	; 0xdd
 8001b6e:	701a      	strb	r2, [r3, #0]
 8001b70:	e00a      	b.n	8001b88 <slip_tx+0xb0>
		} else {
			pEnBuf[idx++] = pTx[i];
 8001b72:	693b      	ldr	r3, [r7, #16]
 8001b74:	68fa      	ldr	r2, [r7, #12]
 8001b76:	441a      	add	r2, r3
 8001b78:	7dfb      	ldrb	r3, [r7, #23]
 8001b7a:	1c59      	adds	r1, r3, #1
 8001b7c:	75f9      	strb	r1, [r7, #23]
 8001b7e:	4619      	mov	r1, r3
 8001b80:	687b      	ldr	r3, [r7, #4]
 8001b82:	440b      	add	r3, r1
 8001b84:	7812      	ldrb	r2, [r2, #0]
 8001b86:	701a      	strb	r2, [r3, #0]
	for (int i=0; i < Len; i++) {
 8001b88:	693b      	ldr	r3, [r7, #16]
 8001b8a:	3301      	adds	r3, #1
 8001b8c:	613b      	str	r3, [r7, #16]
 8001b8e:	7afb      	ldrb	r3, [r7, #11]
 8001b90:	693a      	ldr	r2, [r7, #16]
 8001b92:	429a      	cmp	r2, r3
 8001b94:	dbbf      	blt.n	8001b16 <slip_tx+0x3e>
		}
	}
	pEnBuf[idx++] = D_FEND;
 8001b96:	7dfb      	ldrb	r3, [r7, #23]
 8001b98:	1c5a      	adds	r2, r3, #1
 8001b9a:	75fa      	strb	r2, [r7, #23]
 8001b9c:	461a      	mov	r2, r3
 8001b9e:	687b      	ldr	r3, [r7, #4]
 8001ba0:	4413      	add	r3, r2
 8001ba2:	22c0      	movs	r2, #192	; 0xc0
 8001ba4:	701a      	strb	r2, [r3, #0]
	*pEnLen = idx;
 8001ba6:	683b      	ldr	r3, [r7, #0]
 8001ba8:	7dfa      	ldrb	r2, [r7, #23]
 8001baa:	701a      	strb	r2, [r3, #0]

	return true;
 8001bac:	2301      	movs	r3, #1
}
 8001bae:	4618      	mov	r0, r3
 8001bb0:	371c      	adds	r7, #28
 8001bb2:	46bd      	mov	sp, r7
 8001bb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bb8:	4770      	bx	lr

08001bba <slip_rx>:

bool slip_rx(MSG_T *pQ, uint8_t *pState, uint8_t rxd)
{
 8001bba:	b480      	push	{r7}
 8001bbc:	b085      	sub	sp, #20
 8001bbe:	af00      	add	r7, sp, #0
 8001bc0:	60f8      	str	r0, [r7, #12]
 8001bc2:	60b9      	str	r1, [r7, #8]
 8001bc4:	4613      	mov	r3, r2
 8001bc6:	71fb      	strb	r3, [r7, #7]
	switch (*pState) {
 8001bc8:	68bb      	ldr	r3, [r7, #8]
 8001bca:	781b      	ldrb	r3, [r3, #0]
 8001bcc:	2b02      	cmp	r3, #2
 8001bce:	d03a      	beq.n	8001c46 <slip_rx+0x8c>
 8001bd0:	2b02      	cmp	r3, #2
 8001bd2:	dc6b      	bgt.n	8001cac <slip_rx+0xf2>
 8001bd4:	2b00      	cmp	r3, #0
 8001bd6:	d002      	beq.n	8001bde <slip_rx+0x24>
 8001bd8:	2b01      	cmp	r3, #1
 8001bda:	d00d      	beq.n	8001bf8 <slip_rx+0x3e>
 8001bdc:	e066      	b.n	8001cac <slip_rx+0xf2>
		case 0 : {
			if (rxd == D_FEND) {
 8001bde:	79fb      	ldrb	r3, [r7, #7]
 8001be0:	2bc0      	cmp	r3, #192	; 0xc0
 8001be2:	d16a      	bne.n	8001cba <slip_rx+0x100>
				(*pState)++; // 1st FEND
 8001be4:	68bb      	ldr	r3, [r7, #8]
 8001be6:	781b      	ldrb	r3, [r3, #0]
 8001be8:	3301      	adds	r3, #1
 8001bea:	b2da      	uxtb	r2, r3
 8001bec:	68bb      	ldr	r3, [r7, #8]
 8001bee:	701a      	strb	r2, [r3, #0]
				pQ->len = 0;
 8001bf0:	68fb      	ldr	r3, [r7, #12]
 8001bf2:	2200      	movs	r2, #0
 8001bf4:	705a      	strb	r2, [r3, #1]
			}
		} break;
 8001bf6:	e060      	b.n	8001cba <slip_rx+0x100>

		case 1 : {
			if (rxd == D_FESC) {
 8001bf8:	79fb      	ldrb	r3, [r7, #7]
 8001bfa:	2bdb      	cmp	r3, #219	; 0xdb
 8001bfc:	d106      	bne.n	8001c0c <slip_rx+0x52>
				(*pState)++;
 8001bfe:	68bb      	ldr	r3, [r7, #8]
 8001c00:	781b      	ldrb	r3, [r3, #0]
 8001c02:	3301      	adds	r3, #1
 8001c04:	b2da      	uxtb	r2, r3
 8001c06:	68bb      	ldr	r3, [r7, #8]
 8001c08:	701a      	strb	r2, [r3, #0]
					return true;
				}
			} else {
				pQ->pData[pQ->len++] = rxd;
			}
		} break;
 8001c0a:	e057      	b.n	8001cbc <slip_rx+0x102>
			} else if (rxd == D_FEND) {	// 2nd FEND
 8001c0c:	79fb      	ldrb	r3, [r7, #7]
 8001c0e:	2bc0      	cmp	r3, #192	; 0xc0
 8001c10:	d10c      	bne.n	8001c2c <slip_rx+0x72>
				if (pQ->len < 3) {
 8001c12:	68fb      	ldr	r3, [r7, #12]
 8001c14:	785b      	ldrb	r3, [r3, #1]
 8001c16:	2b02      	cmp	r3, #2
 8001c18:	d803      	bhi.n	8001c22 <slip_rx+0x68>
					*pState = 0;
 8001c1a:	68bb      	ldr	r3, [r7, #8]
 8001c1c:	2200      	movs	r2, #0
 8001c1e:	701a      	strb	r2, [r3, #0]
		} break;
 8001c20:	e04c      	b.n	8001cbc <slip_rx+0x102>
					*pState = 0;
 8001c22:	68bb      	ldr	r3, [r7, #8]
 8001c24:	2200      	movs	r2, #0
 8001c26:	701a      	strb	r2, [r3, #0]
					return true;
 8001c28:	2301      	movs	r3, #1
 8001c2a:	e048      	b.n	8001cbe <slip_rx+0x104>
				pQ->pData[pQ->len++] = rxd;
 8001c2c:	68fb      	ldr	r3, [r7, #12]
 8001c2e:	f8d3 2002 	ldr.w	r2, [r3, #2]
 8001c32:	68fb      	ldr	r3, [r7, #12]
 8001c34:	785b      	ldrb	r3, [r3, #1]
 8001c36:	1c59      	adds	r1, r3, #1
 8001c38:	b2c8      	uxtb	r0, r1
 8001c3a:	68f9      	ldr	r1, [r7, #12]
 8001c3c:	7048      	strb	r0, [r1, #1]
 8001c3e:	4413      	add	r3, r2
 8001c40:	79fa      	ldrb	r2, [r7, #7]
 8001c42:	701a      	strb	r2, [r3, #0]
		} break;
 8001c44:	e03a      	b.n	8001cbc <slip_rx+0x102>

		case 2 : {
			if (rxd == D_TFEND) {
 8001c46:	79fb      	ldrb	r3, [r7, #7]
 8001c48:	2bdc      	cmp	r3, #220	; 0xdc
 8001c4a:	d112      	bne.n	8001c72 <slip_rx+0xb8>
				pQ->pData[pQ->len++]  = D_FEND;
 8001c4c:	68fb      	ldr	r3, [r7, #12]
 8001c4e:	f8d3 2002 	ldr.w	r2, [r3, #2]
 8001c52:	68fb      	ldr	r3, [r7, #12]
 8001c54:	785b      	ldrb	r3, [r3, #1]
 8001c56:	1c59      	adds	r1, r3, #1
 8001c58:	b2c8      	uxtb	r0, r1
 8001c5a:	68f9      	ldr	r1, [r7, #12]
 8001c5c:	7048      	strb	r0, [r1, #1]
 8001c5e:	4413      	add	r3, r2
 8001c60:	22c0      	movs	r2, #192	; 0xc0
 8001c62:	701a      	strb	r2, [r3, #0]
				(*pState)--;
 8001c64:	68bb      	ldr	r3, [r7, #8]
 8001c66:	781b      	ldrb	r3, [r3, #0]
 8001c68:	3b01      	subs	r3, #1
 8001c6a:	b2da      	uxtb	r2, r3
 8001c6c:	68bb      	ldr	r3, [r7, #8]
 8001c6e:	701a      	strb	r2, [r3, #0]
				pQ->pData[pQ->len++]  = D_FESC;
				(*pState)--;
			} else {
				(*pState)++; // wait for ending esc
			}
		} break;
 8001c70:	e024      	b.n	8001cbc <slip_rx+0x102>
			} else if (rxd == D_TFESC) {
 8001c72:	79fb      	ldrb	r3, [r7, #7]
 8001c74:	2bdd      	cmp	r3, #221	; 0xdd
 8001c76:	d112      	bne.n	8001c9e <slip_rx+0xe4>
				pQ->pData[pQ->len++]  = D_FESC;
 8001c78:	68fb      	ldr	r3, [r7, #12]
 8001c7a:	f8d3 2002 	ldr.w	r2, [r3, #2]
 8001c7e:	68fb      	ldr	r3, [r7, #12]
 8001c80:	785b      	ldrb	r3, [r3, #1]
 8001c82:	1c59      	adds	r1, r3, #1
 8001c84:	b2c8      	uxtb	r0, r1
 8001c86:	68f9      	ldr	r1, [r7, #12]
 8001c88:	7048      	strb	r0, [r1, #1]
 8001c8a:	4413      	add	r3, r2
 8001c8c:	22db      	movs	r2, #219	; 0xdb
 8001c8e:	701a      	strb	r2, [r3, #0]
				(*pState)--;
 8001c90:	68bb      	ldr	r3, [r7, #8]
 8001c92:	781b      	ldrb	r3, [r3, #0]
 8001c94:	3b01      	subs	r3, #1
 8001c96:	b2da      	uxtb	r2, r3
 8001c98:	68bb      	ldr	r3, [r7, #8]
 8001c9a:	701a      	strb	r2, [r3, #0]
		} break;
 8001c9c:	e00e      	b.n	8001cbc <slip_rx+0x102>
				(*pState)++; // wait for ending esc
 8001c9e:	68bb      	ldr	r3, [r7, #8]
 8001ca0:	781b      	ldrb	r3, [r3, #0]
 8001ca2:	3301      	adds	r3, #1
 8001ca4:	b2da      	uxtb	r2, r3
 8001ca6:	68bb      	ldr	r3, [r7, #8]
 8001ca8:	701a      	strb	r2, [r3, #0]
		} break;
 8001caa:	e007      	b.n	8001cbc <slip_rx+0x102>

		default : {
			if (rxd == D_FEND) *pState = 0;
 8001cac:	79fb      	ldrb	r3, [r7, #7]
 8001cae:	2bc0      	cmp	r3, #192	; 0xc0
 8001cb0:	d104      	bne.n	8001cbc <slip_rx+0x102>
 8001cb2:	68bb      	ldr	r3, [r7, #8]
 8001cb4:	2200      	movs	r2, #0
 8001cb6:	701a      	strb	r2, [r3, #0]
 8001cb8:	e000      	b.n	8001cbc <slip_rx+0x102>
		} break;
 8001cba:	bf00      	nop
		}
	}

	return false;
 8001cbc:	2300      	movs	r3, #0
}
 8001cbe:	4618      	mov	r0, r3
 8001cc0:	3714      	adds	r7, #20
 8001cc2:	46bd      	mov	sp, r7
 8001cc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cc8:	4770      	bx	lr
	...

08001ccc <uartProc_Timer>:

static MSG_T qTxUart2;

static void uartProc_Timer(void *arg)
{
 8001ccc:	b580      	push	{r7, lr}
 8001cce:	b082      	sub	sp, #8
 8001cd0:	af00      	add	r7, sp, #0
 8001cd2:	6078      	str	r0, [r7, #4]
	if (qTxUart2.len != 0) {
 8001cd4:	4b0a      	ldr	r3, [pc, #40]	; (8001d00 <uartProc_Timer+0x34>)
 8001cd6:	785b      	ldrb	r3, [r3, #1]
 8001cd8:	2b00      	cmp	r3, #0
 8001cda:	d00c      	beq.n	8001cf6 <uartProc_Timer+0x2a>
		qTxUart2.id = E_MSG_UART2_RX;
 8001cdc:	4b08      	ldr	r3, [pc, #32]	; (8001d00 <uartProc_Timer+0x34>)
 8001cde:	2212      	movs	r2, #18
 8001ce0:	701a      	strb	r2, [r3, #0]
		osMessageQueuePut(msgBufQ_handle, &qTxUart2, 0, 0);
 8001ce2:	4b08      	ldr	r3, [pc, #32]	; (8001d04 <uartProc_Timer+0x38>)
 8001ce4:	6818      	ldr	r0, [r3, #0]
 8001ce6:	2300      	movs	r3, #0
 8001ce8:	2200      	movs	r2, #0
 8001cea:	4905      	ldr	r1, [pc, #20]	; (8001d00 <uartProc_Timer+0x34>)
 8001cec:	f004 fcea 	bl	80066c4 <osMessageQueuePut>
		qTxUart2.len = 0;
 8001cf0:	4b03      	ldr	r3, [pc, #12]	; (8001d00 <uartProc_Timer+0x34>)
 8001cf2:	2200      	movs	r2, #0
 8001cf4:	705a      	strb	r2, [r3, #1]
	}
}
 8001cf6:	bf00      	nop
 8001cf8:	3708      	adds	r7, #8
 8001cfa:	46bd      	mov	sp, r7
 8001cfc:	bd80      	pop	{r7, pc}
 8001cfe:	bf00      	nop
 8001d00:	20000b88 	.word	0x20000b88
 8001d04:	20000b7c 	.word	0x20000b7c

08001d08 <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8001d08:	b580      	push	{r7, lr}
 8001d0a:	b084      	sub	sp, #16
 8001d0c:	af00      	add	r7, sp, #0
 8001d0e:	6078      	str	r0, [r7, #4]
	if (huart == &huart2) {
 8001d10:	687b      	ldr	r3, [r7, #4]
 8001d12:	4a29      	ldr	r2, [pc, #164]	; (8001db8 <HAL_UART_RxCpltCallback+0xb0>)
 8001d14:	4293      	cmp	r3, r2
 8001d16:	d126      	bne.n	8001d66 <HAL_UART_RxCpltCallback+0x5e>
//		static uint8_t state = 0;

//  	bool ret;

  	qTxUart2.pData = (uint8_t *)&gBufObj[0];
 8001d18:	4b28      	ldr	r3, [pc, #160]	; (8001dbc <HAL_UART_RxCpltCallback+0xb4>)
 8001d1a:	4a29      	ldr	r2, [pc, #164]	; (8001dc0 <HAL_UART_RxCpltCallback+0xb8>)
 8001d1c:	f8c3 2002 	str.w	r2, [r3, #2]

  	qTxUart2.pData[qTxUart2.len] = rxd[0];
 8001d20:	4b26      	ldr	r3, [pc, #152]	; (8001dbc <HAL_UART_RxCpltCallback+0xb4>)
 8001d22:	f8d3 3002 	ldr.w	r3, [r3, #2]
 8001d26:	4a25      	ldr	r2, [pc, #148]	; (8001dbc <HAL_UART_RxCpltCallback+0xb4>)
 8001d28:	7852      	ldrb	r2, [r2, #1]
 8001d2a:	4413      	add	r3, r2
 8001d2c:	4a25      	ldr	r2, [pc, #148]	; (8001dc4 <HAL_UART_RxCpltCallback+0xbc>)
 8001d2e:	7812      	ldrb	r2, [r2, #0]
 8001d30:	b2d2      	uxtb	r2, r2
 8001d32:	701a      	strb	r2, [r3, #0]
  	qTxUart2.len++;
 8001d34:	4b21      	ldr	r3, [pc, #132]	; (8001dbc <HAL_UART_RxCpltCallback+0xb4>)
 8001d36:	785b      	ldrb	r3, [r3, #1]
 8001d38:	3301      	adds	r3, #1
 8001d3a:	b2da      	uxtb	r2, r3
 8001d3c:	4b1f      	ldr	r3, [pc, #124]	; (8001dbc <HAL_UART_RxCpltCallback+0xb4>)
 8001d3e:	705a      	strb	r2, [r3, #1]
  	qTxUart2.len %= D_TX_MAX;
 8001d40:	4b1e      	ldr	r3, [pc, #120]	; (8001dbc <HAL_UART_RxCpltCallback+0xb4>)
 8001d42:	785b      	ldrb	r3, [r3, #1]
 8001d44:	4a20      	ldr	r2, [pc, #128]	; (8001dc8 <HAL_UART_RxCpltCallback+0xc0>)
 8001d46:	fba2 1203 	umull	r1, r2, r2, r3
 8001d4a:	0952      	lsrs	r2, r2, #5
 8001d4c:	2164      	movs	r1, #100	; 0x64
 8001d4e:	fb01 f202 	mul.w	r2, r1, r2
 8001d52:	1a9b      	subs	r3, r3, r2
 8001d54:	b2da      	uxtb	r2, r3
 8001d56:	4b19      	ldr	r3, [pc, #100]	; (8001dbc <HAL_UART_RxCpltCallback+0xb4>)
 8001d58:	705a      	strb	r2, [r3, #1]
//			qTx.id = E_MSG_UART2_RX;
//			osMessageQueuePut(msgBufQ_handle, &qTx, 0, 0);
//			qTx.len = 0;
//		}

    HAL_UART_Receive_IT(&huart2, (uint8_t *)&rxd[0], 1);
 8001d5a:	2201      	movs	r2, #1
 8001d5c:	4919      	ldr	r1, [pc, #100]	; (8001dc4 <HAL_UART_RxCpltCallback+0xbc>)
 8001d5e:	4816      	ldr	r0, [pc, #88]	; (8001db8 <HAL_UART_RxCpltCallback+0xb0>)
 8001d60:	f002 ffb5 	bl	8004cce <HAL_UART_Receive_IT>
//	  	p->idx = 0;
//    }


  }
}
 8001d64:	e023      	b.n	8001dae <HAL_UART_RxCpltCallback+0xa6>
	} else if (huart == &huart3) {
 8001d66:	687b      	ldr	r3, [r7, #4]
 8001d68:	4a18      	ldr	r2, [pc, #96]	; (8001dcc <HAL_UART_RxCpltCallback+0xc4>)
 8001d6a:	4293      	cmp	r3, r2
 8001d6c:	d11f      	bne.n	8001dae <HAL_UART_RxCpltCallback+0xa6>
  	q.pData = (uint8_t *)&gBufObj[1];
 8001d6e:	4b18      	ldr	r3, [pc, #96]	; (8001dd0 <HAL_UART_RxCpltCallback+0xc8>)
 8001d70:	4a18      	ldr	r2, [pc, #96]	; (8001dd4 <HAL_UART_RxCpltCallback+0xcc>)
 8001d72:	f8c3 2002 	str.w	r2, [r3, #2]
  	ret = slip_rx(&q, &state, rxd[1]);
 8001d76:	4b13      	ldr	r3, [pc, #76]	; (8001dc4 <HAL_UART_RxCpltCallback+0xbc>)
 8001d78:	785b      	ldrb	r3, [r3, #1]
 8001d7a:	b2db      	uxtb	r3, r3
 8001d7c:	461a      	mov	r2, r3
 8001d7e:	4916      	ldr	r1, [pc, #88]	; (8001dd8 <HAL_UART_RxCpltCallback+0xd0>)
 8001d80:	4813      	ldr	r0, [pc, #76]	; (8001dd0 <HAL_UART_RxCpltCallback+0xc8>)
 8001d82:	f7ff ff1a 	bl	8001bba <slip_rx>
 8001d86:	4603      	mov	r3, r0
 8001d88:	73fb      	strb	r3, [r7, #15]
  	if (ret == true) {
 8001d8a:	7bfb      	ldrb	r3, [r7, #15]
 8001d8c:	2b00      	cmp	r3, #0
 8001d8e:	d009      	beq.n	8001da4 <HAL_UART_RxCpltCallback+0x9c>
			q.id = E_MSG_UART3_RX;
 8001d90:	4b0f      	ldr	r3, [pc, #60]	; (8001dd0 <HAL_UART_RxCpltCallback+0xc8>)
 8001d92:	2221      	movs	r2, #33	; 0x21
 8001d94:	701a      	strb	r2, [r3, #0]
			osMessageQueuePut(msgBufQ_handle, &q, 0, 0);
 8001d96:	4b11      	ldr	r3, [pc, #68]	; (8001ddc <HAL_UART_RxCpltCallback+0xd4>)
 8001d98:	6818      	ldr	r0, [r3, #0]
 8001d9a:	2300      	movs	r3, #0
 8001d9c:	2200      	movs	r2, #0
 8001d9e:	490c      	ldr	r1, [pc, #48]	; (8001dd0 <HAL_UART_RxCpltCallback+0xc8>)
 8001da0:	f004 fc90 	bl	80066c4 <osMessageQueuePut>
    HAL_UART_Receive_IT(&huart3, (uint8_t *)&rxd[1], 1);
 8001da4:	2201      	movs	r2, #1
 8001da6:	490e      	ldr	r1, [pc, #56]	; (8001de0 <HAL_UART_RxCpltCallback+0xd8>)
 8001da8:	4808      	ldr	r0, [pc, #32]	; (8001dcc <HAL_UART_RxCpltCallback+0xc4>)
 8001daa:	f002 ff90 	bl	8004cce <HAL_UART_Receive_IT>
}
 8001dae:	bf00      	nop
 8001db0:	3710      	adds	r7, #16
 8001db2:	46bd      	mov	sp, r7
 8001db4:	bd80      	pop	{r7, pc}
 8001db6:	bf00      	nop
 8001db8:	20000374 	.word	0x20000374
 8001dbc:	20000b88 	.word	0x20000b88
 8001dc0:	200009d8 	.word	0x200009d8
 8001dc4:	20000b78 	.word	0x20000b78
 8001dc8:	51eb851f 	.word	0x51eb851f
 8001dcc:	200003b8 	.word	0x200003b8
 8001dd0:	20000b94 	.word	0x20000b94
 8001dd4:	20000aa2 	.word	0x20000aa2
 8001dd8:	20000b9e 	.word	0x20000b9e
 8001ddc:	20000b7c 	.word	0x20000b7c
 8001de0:	20000b79 	.word	0x20000b79

08001de4 <_write>:

int _write(int file, char *ptr, int len)
{
 8001de4:	b580      	push	{r7, lr}
 8001de6:	b086      	sub	sp, #24
 8001de8:	af00      	add	r7, sp, #0
 8001dea:	60f8      	str	r0, [r7, #12]
 8001dec:	60b9      	str	r1, [r7, #8]
 8001dee:	607a      	str	r2, [r7, #4]
  (void)file;

  static uint8_t slip_tx_buf[202];
  uint8_t Len;

  slip_tx((uint8_t *)ptr, (uint8_t)len, slip_tx_buf, &Len);
 8001df0:	687b      	ldr	r3, [r7, #4]
 8001df2:	b2d9      	uxtb	r1, r3
 8001df4:	f107 0317 	add.w	r3, r7, #23
 8001df8:	4a08      	ldr	r2, [pc, #32]	; (8001e1c <_write+0x38>)
 8001dfa:	68b8      	ldr	r0, [r7, #8]
 8001dfc:	f7ff fe6c 	bl	8001ad8 <slip_tx>
  HAL_UART_Transmit(&huart3, (uint8_t *)slip_tx_buf, Len, 0xffff);
 8001e00:	7dfb      	ldrb	r3, [r7, #23]
 8001e02:	b29a      	uxth	r2, r3
 8001e04:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001e08:	4904      	ldr	r1, [pc, #16]	; (8001e1c <_write+0x38>)
 8001e0a:	4805      	ldr	r0, [pc, #20]	; (8001e20 <_write+0x3c>)
 8001e0c:	f002 fecd 	bl	8004baa <HAL_UART_Transmit>

  return len;
 8001e10:	687b      	ldr	r3, [r7, #4]
}
 8001e12:	4618      	mov	r0, r3
 8001e14:	3718      	adds	r7, #24
 8001e16:	46bd      	mov	sp, r7
 8001e18:	bd80      	pop	{r7, pc}
 8001e1a:	bf00      	nop
 8001e1c:	20000ba0 	.word	0x20000ba0
 8001e20:	200003b8 	.word	0x200003b8

08001e24 <Reset_Handler>:
 8001e24:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001e5c <LoopFillZerobss+0x12>
 8001e28:	480d      	ldr	r0, [pc, #52]	; (8001e60 <LoopFillZerobss+0x16>)
 8001e2a:	490e      	ldr	r1, [pc, #56]	; (8001e64 <LoopFillZerobss+0x1a>)
 8001e2c:	4a0e      	ldr	r2, [pc, #56]	; (8001e68 <LoopFillZerobss+0x1e>)
 8001e2e:	2300      	movs	r3, #0
 8001e30:	e002      	b.n	8001e38 <LoopCopyDataInit>

08001e32 <CopyDataInit>:
 8001e32:	58d4      	ldr	r4, [r2, r3]
 8001e34:	50c4      	str	r4, [r0, r3]
 8001e36:	3304      	adds	r3, #4

08001e38 <LoopCopyDataInit>:
 8001e38:	18c4      	adds	r4, r0, r3
 8001e3a:	428c      	cmp	r4, r1
 8001e3c:	d3f9      	bcc.n	8001e32 <CopyDataInit>
 8001e3e:	4a0b      	ldr	r2, [pc, #44]	; (8001e6c <LoopFillZerobss+0x22>)
 8001e40:	4c0b      	ldr	r4, [pc, #44]	; (8001e70 <LoopFillZerobss+0x26>)
 8001e42:	2300      	movs	r3, #0
 8001e44:	e001      	b.n	8001e4a <LoopFillZerobss>

08001e46 <FillZerobss>:
 8001e46:	6013      	str	r3, [r2, #0]
 8001e48:	3204      	adds	r2, #4

08001e4a <LoopFillZerobss>:
 8001e4a:	42a2      	cmp	r2, r4
 8001e4c:	d3fb      	bcc.n	8001e46 <FillZerobss>
 8001e4e:	f7ff fceb 	bl	8001828 <SystemInit>
 8001e52:	f007 feb5 	bl	8009bc0 <__libc_init_array>
 8001e56:	f7fe fe4f 	bl	8000af8 <main>
 8001e5a:	4770      	bx	lr
 8001e5c:	20030000 	.word	0x20030000
 8001e60:	20000000 	.word	0x20000000
 8001e64:	2000006c 	.word	0x2000006c
 8001e68:	0800af8c 	.word	0x0800af8c
 8001e6c:	2000006c 	.word	0x2000006c
 8001e70:	20005da4 	.word	0x20005da4

08001e74 <ADC_IRQHandler>:
 8001e74:	e7fe      	b.n	8001e74 <ADC_IRQHandler>
	...

08001e78 <HAL_Init>:
 8001e78:	b580      	push	{r7, lr}
 8001e7a:	af00      	add	r7, sp, #0
 8001e7c:	4b0e      	ldr	r3, [pc, #56]	; (8001eb8 <HAL_Init+0x40>)
 8001e7e:	681b      	ldr	r3, [r3, #0]
 8001e80:	4a0d      	ldr	r2, [pc, #52]	; (8001eb8 <HAL_Init+0x40>)
 8001e82:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001e86:	6013      	str	r3, [r2, #0]
 8001e88:	4b0b      	ldr	r3, [pc, #44]	; (8001eb8 <HAL_Init+0x40>)
 8001e8a:	681b      	ldr	r3, [r3, #0]
 8001e8c:	4a0a      	ldr	r2, [pc, #40]	; (8001eb8 <HAL_Init+0x40>)
 8001e8e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001e92:	6013      	str	r3, [r2, #0]
 8001e94:	4b08      	ldr	r3, [pc, #32]	; (8001eb8 <HAL_Init+0x40>)
 8001e96:	681b      	ldr	r3, [r3, #0]
 8001e98:	4a07      	ldr	r2, [pc, #28]	; (8001eb8 <HAL_Init+0x40>)
 8001e9a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001e9e:	6013      	str	r3, [r2, #0]
 8001ea0:	2003      	movs	r0, #3
 8001ea2:	f000 f94f 	bl	8002144 <HAL_NVIC_SetPriorityGrouping>
 8001ea6:	200f      	movs	r0, #15
 8001ea8:	f000 f808 	bl	8001ebc <HAL_InitTick>
 8001eac:	f7ff f93a 	bl	8001124 <HAL_MspInit>
 8001eb0:	2300      	movs	r3, #0
 8001eb2:	4618      	mov	r0, r3
 8001eb4:	bd80      	pop	{r7, pc}
 8001eb6:	bf00      	nop
 8001eb8:	40023c00 	.word	0x40023c00

08001ebc <HAL_InitTick>:
 8001ebc:	b580      	push	{r7, lr}
 8001ebe:	b082      	sub	sp, #8
 8001ec0:	af00      	add	r7, sp, #0
 8001ec2:	6078      	str	r0, [r7, #4]
 8001ec4:	4b12      	ldr	r3, [pc, #72]	; (8001f10 <HAL_InitTick+0x54>)
 8001ec6:	681a      	ldr	r2, [r3, #0]
 8001ec8:	4b12      	ldr	r3, [pc, #72]	; (8001f14 <HAL_InitTick+0x58>)
 8001eca:	781b      	ldrb	r3, [r3, #0]
 8001ecc:	4619      	mov	r1, r3
 8001ece:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001ed2:	fbb3 f3f1 	udiv	r3, r3, r1
 8001ed6:	fbb2 f3f3 	udiv	r3, r2, r3
 8001eda:	4618      	mov	r0, r3
 8001edc:	f000 f967 	bl	80021ae <HAL_SYSTICK_Config>
 8001ee0:	4603      	mov	r3, r0
 8001ee2:	2b00      	cmp	r3, #0
 8001ee4:	d001      	beq.n	8001eea <HAL_InitTick+0x2e>
 8001ee6:	2301      	movs	r3, #1
 8001ee8:	e00e      	b.n	8001f08 <HAL_InitTick+0x4c>
 8001eea:	687b      	ldr	r3, [r7, #4]
 8001eec:	2b0f      	cmp	r3, #15
 8001eee:	d80a      	bhi.n	8001f06 <HAL_InitTick+0x4a>
 8001ef0:	2200      	movs	r2, #0
 8001ef2:	6879      	ldr	r1, [r7, #4]
 8001ef4:	f04f 30ff 	mov.w	r0, #4294967295
 8001ef8:	f000 f92f 	bl	800215a <HAL_NVIC_SetPriority>
 8001efc:	4a06      	ldr	r2, [pc, #24]	; (8001f18 <HAL_InitTick+0x5c>)
 8001efe:	687b      	ldr	r3, [r7, #4]
 8001f00:	6013      	str	r3, [r2, #0]
 8001f02:	2300      	movs	r3, #0
 8001f04:	e000      	b.n	8001f08 <HAL_InitTick+0x4c>
 8001f06:	2301      	movs	r3, #1
 8001f08:	4618      	mov	r0, r3
 8001f0a:	3708      	adds	r7, #8
 8001f0c:	46bd      	mov	sp, r7
 8001f0e:	bd80      	pop	{r7, pc}
 8001f10:	20000000 	.word	0x20000000
 8001f14:	20000008 	.word	0x20000008
 8001f18:	20000004 	.word	0x20000004

08001f1c <HAL_IncTick>:
 8001f1c:	b480      	push	{r7}
 8001f1e:	af00      	add	r7, sp, #0
 8001f20:	4b06      	ldr	r3, [pc, #24]	; (8001f3c <HAL_IncTick+0x20>)
 8001f22:	781b      	ldrb	r3, [r3, #0]
 8001f24:	461a      	mov	r2, r3
 8001f26:	4b06      	ldr	r3, [pc, #24]	; (8001f40 <HAL_IncTick+0x24>)
 8001f28:	681b      	ldr	r3, [r3, #0]
 8001f2a:	4413      	add	r3, r2
 8001f2c:	4a04      	ldr	r2, [pc, #16]	; (8001f40 <HAL_IncTick+0x24>)
 8001f2e:	6013      	str	r3, [r2, #0]
 8001f30:	bf00      	nop
 8001f32:	46bd      	mov	sp, r7
 8001f34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f38:	4770      	bx	lr
 8001f3a:	bf00      	nop
 8001f3c:	20000008 	.word	0x20000008
 8001f40:	20000c6c 	.word	0x20000c6c

08001f44 <HAL_GetTick>:
 8001f44:	b480      	push	{r7}
 8001f46:	af00      	add	r7, sp, #0
 8001f48:	4b03      	ldr	r3, [pc, #12]	; (8001f58 <HAL_GetTick+0x14>)
 8001f4a:	681b      	ldr	r3, [r3, #0]
 8001f4c:	4618      	mov	r0, r3
 8001f4e:	46bd      	mov	sp, r7
 8001f50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f54:	4770      	bx	lr
 8001f56:	bf00      	nop
 8001f58:	20000c6c 	.word	0x20000c6c

08001f5c <HAL_Delay>:
 8001f5c:	b580      	push	{r7, lr}
 8001f5e:	b084      	sub	sp, #16
 8001f60:	af00      	add	r7, sp, #0
 8001f62:	6078      	str	r0, [r7, #4]
 8001f64:	f7ff ffee 	bl	8001f44 <HAL_GetTick>
 8001f68:	60b8      	str	r0, [r7, #8]
 8001f6a:	687b      	ldr	r3, [r7, #4]
 8001f6c:	60fb      	str	r3, [r7, #12]
 8001f6e:	68fb      	ldr	r3, [r7, #12]
 8001f70:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001f74:	d005      	beq.n	8001f82 <HAL_Delay+0x26>
 8001f76:	4b0a      	ldr	r3, [pc, #40]	; (8001fa0 <HAL_Delay+0x44>)
 8001f78:	781b      	ldrb	r3, [r3, #0]
 8001f7a:	461a      	mov	r2, r3
 8001f7c:	68fb      	ldr	r3, [r7, #12]
 8001f7e:	4413      	add	r3, r2
 8001f80:	60fb      	str	r3, [r7, #12]
 8001f82:	bf00      	nop
 8001f84:	f7ff ffde 	bl	8001f44 <HAL_GetTick>
 8001f88:	4602      	mov	r2, r0
 8001f8a:	68bb      	ldr	r3, [r7, #8]
 8001f8c:	1ad3      	subs	r3, r2, r3
 8001f8e:	68fa      	ldr	r2, [r7, #12]
 8001f90:	429a      	cmp	r2, r3
 8001f92:	d8f7      	bhi.n	8001f84 <HAL_Delay+0x28>
 8001f94:	bf00      	nop
 8001f96:	bf00      	nop
 8001f98:	3710      	adds	r7, #16
 8001f9a:	46bd      	mov	sp, r7
 8001f9c:	bd80      	pop	{r7, pc}
 8001f9e:	bf00      	nop
 8001fa0:	20000008 	.word	0x20000008

08001fa4 <__NVIC_SetPriorityGrouping>:
 8001fa4:	b480      	push	{r7}
 8001fa6:	b085      	sub	sp, #20
 8001fa8:	af00      	add	r7, sp, #0
 8001faa:	6078      	str	r0, [r7, #4]
 8001fac:	687b      	ldr	r3, [r7, #4]
 8001fae:	f003 0307 	and.w	r3, r3, #7
 8001fb2:	60fb      	str	r3, [r7, #12]
 8001fb4:	4b0c      	ldr	r3, [pc, #48]	; (8001fe8 <__NVIC_SetPriorityGrouping+0x44>)
 8001fb6:	68db      	ldr	r3, [r3, #12]
 8001fb8:	60bb      	str	r3, [r7, #8]
 8001fba:	68ba      	ldr	r2, [r7, #8]
 8001fbc:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001fc0:	4013      	ands	r3, r2
 8001fc2:	60bb      	str	r3, [r7, #8]
 8001fc4:	68fb      	ldr	r3, [r7, #12]
 8001fc6:	021a      	lsls	r2, r3, #8
 8001fc8:	68bb      	ldr	r3, [r7, #8]
 8001fca:	4313      	orrs	r3, r2
 8001fcc:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001fd0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001fd4:	60bb      	str	r3, [r7, #8]
 8001fd6:	4a04      	ldr	r2, [pc, #16]	; (8001fe8 <__NVIC_SetPriorityGrouping+0x44>)
 8001fd8:	68bb      	ldr	r3, [r7, #8]
 8001fda:	60d3      	str	r3, [r2, #12]
 8001fdc:	bf00      	nop
 8001fde:	3714      	adds	r7, #20
 8001fe0:	46bd      	mov	sp, r7
 8001fe2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fe6:	4770      	bx	lr
 8001fe8:	e000ed00 	.word	0xe000ed00

08001fec <__NVIC_GetPriorityGrouping>:
 8001fec:	b480      	push	{r7}
 8001fee:	af00      	add	r7, sp, #0
 8001ff0:	4b04      	ldr	r3, [pc, #16]	; (8002004 <__NVIC_GetPriorityGrouping+0x18>)
 8001ff2:	68db      	ldr	r3, [r3, #12]
 8001ff4:	0a1b      	lsrs	r3, r3, #8
 8001ff6:	f003 0307 	and.w	r3, r3, #7
 8001ffa:	4618      	mov	r0, r3
 8001ffc:	46bd      	mov	sp, r7
 8001ffe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002002:	4770      	bx	lr
 8002004:	e000ed00 	.word	0xe000ed00

08002008 <__NVIC_EnableIRQ>:
 8002008:	b480      	push	{r7}
 800200a:	b083      	sub	sp, #12
 800200c:	af00      	add	r7, sp, #0
 800200e:	4603      	mov	r3, r0
 8002010:	71fb      	strb	r3, [r7, #7]
 8002012:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002016:	2b00      	cmp	r3, #0
 8002018:	db0b      	blt.n	8002032 <__NVIC_EnableIRQ+0x2a>
 800201a:	79fb      	ldrb	r3, [r7, #7]
 800201c:	f003 021f 	and.w	r2, r3, #31
 8002020:	4907      	ldr	r1, [pc, #28]	; (8002040 <__NVIC_EnableIRQ+0x38>)
 8002022:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002026:	095b      	lsrs	r3, r3, #5
 8002028:	2001      	movs	r0, #1
 800202a:	fa00 f202 	lsl.w	r2, r0, r2
 800202e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002032:	bf00      	nop
 8002034:	370c      	adds	r7, #12
 8002036:	46bd      	mov	sp, r7
 8002038:	f85d 7b04 	ldr.w	r7, [sp], #4
 800203c:	4770      	bx	lr
 800203e:	bf00      	nop
 8002040:	e000e100 	.word	0xe000e100

08002044 <__NVIC_SetPriority>:
 8002044:	b480      	push	{r7}
 8002046:	b083      	sub	sp, #12
 8002048:	af00      	add	r7, sp, #0
 800204a:	4603      	mov	r3, r0
 800204c:	6039      	str	r1, [r7, #0]
 800204e:	71fb      	strb	r3, [r7, #7]
 8002050:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002054:	2b00      	cmp	r3, #0
 8002056:	db0a      	blt.n	800206e <__NVIC_SetPriority+0x2a>
 8002058:	683b      	ldr	r3, [r7, #0]
 800205a:	b2da      	uxtb	r2, r3
 800205c:	490c      	ldr	r1, [pc, #48]	; (8002090 <__NVIC_SetPriority+0x4c>)
 800205e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002062:	0112      	lsls	r2, r2, #4
 8002064:	b2d2      	uxtb	r2, r2
 8002066:	440b      	add	r3, r1
 8002068:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 800206c:	e00a      	b.n	8002084 <__NVIC_SetPriority+0x40>
 800206e:	683b      	ldr	r3, [r7, #0]
 8002070:	b2da      	uxtb	r2, r3
 8002072:	4908      	ldr	r1, [pc, #32]	; (8002094 <__NVIC_SetPriority+0x50>)
 8002074:	79fb      	ldrb	r3, [r7, #7]
 8002076:	f003 030f 	and.w	r3, r3, #15
 800207a:	3b04      	subs	r3, #4
 800207c:	0112      	lsls	r2, r2, #4
 800207e:	b2d2      	uxtb	r2, r2
 8002080:	440b      	add	r3, r1
 8002082:	761a      	strb	r2, [r3, #24]
 8002084:	bf00      	nop
 8002086:	370c      	adds	r7, #12
 8002088:	46bd      	mov	sp, r7
 800208a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800208e:	4770      	bx	lr
 8002090:	e000e100 	.word	0xe000e100
 8002094:	e000ed00 	.word	0xe000ed00

08002098 <NVIC_EncodePriority>:
 8002098:	b480      	push	{r7}
 800209a:	b089      	sub	sp, #36	; 0x24
 800209c:	af00      	add	r7, sp, #0
 800209e:	60f8      	str	r0, [r7, #12]
 80020a0:	60b9      	str	r1, [r7, #8]
 80020a2:	607a      	str	r2, [r7, #4]
 80020a4:	68fb      	ldr	r3, [r7, #12]
 80020a6:	f003 0307 	and.w	r3, r3, #7
 80020aa:	61fb      	str	r3, [r7, #28]
 80020ac:	69fb      	ldr	r3, [r7, #28]
 80020ae:	f1c3 0307 	rsb	r3, r3, #7
 80020b2:	2b04      	cmp	r3, #4
 80020b4:	bf28      	it	cs
 80020b6:	2304      	movcs	r3, #4
 80020b8:	61bb      	str	r3, [r7, #24]
 80020ba:	69fb      	ldr	r3, [r7, #28]
 80020bc:	3304      	adds	r3, #4
 80020be:	2b06      	cmp	r3, #6
 80020c0:	d902      	bls.n	80020c8 <NVIC_EncodePriority+0x30>
 80020c2:	69fb      	ldr	r3, [r7, #28]
 80020c4:	3b03      	subs	r3, #3
 80020c6:	e000      	b.n	80020ca <NVIC_EncodePriority+0x32>
 80020c8:	2300      	movs	r3, #0
 80020ca:	617b      	str	r3, [r7, #20]
 80020cc:	f04f 32ff 	mov.w	r2, #4294967295
 80020d0:	69bb      	ldr	r3, [r7, #24]
 80020d2:	fa02 f303 	lsl.w	r3, r2, r3
 80020d6:	43da      	mvns	r2, r3
 80020d8:	68bb      	ldr	r3, [r7, #8]
 80020da:	401a      	ands	r2, r3
 80020dc:	697b      	ldr	r3, [r7, #20]
 80020de:	409a      	lsls	r2, r3
 80020e0:	f04f 31ff 	mov.w	r1, #4294967295
 80020e4:	697b      	ldr	r3, [r7, #20]
 80020e6:	fa01 f303 	lsl.w	r3, r1, r3
 80020ea:	43d9      	mvns	r1, r3
 80020ec:	687b      	ldr	r3, [r7, #4]
 80020ee:	400b      	ands	r3, r1
 80020f0:	4313      	orrs	r3, r2
 80020f2:	4618      	mov	r0, r3
 80020f4:	3724      	adds	r7, #36	; 0x24
 80020f6:	46bd      	mov	sp, r7
 80020f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020fc:	4770      	bx	lr
	...

08002100 <SysTick_Config>:
 8002100:	b580      	push	{r7, lr}
 8002102:	b082      	sub	sp, #8
 8002104:	af00      	add	r7, sp, #0
 8002106:	6078      	str	r0, [r7, #4]
 8002108:	687b      	ldr	r3, [r7, #4]
 800210a:	3b01      	subs	r3, #1
 800210c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8002110:	d301      	bcc.n	8002116 <SysTick_Config+0x16>
 8002112:	2301      	movs	r3, #1
 8002114:	e00f      	b.n	8002136 <SysTick_Config+0x36>
 8002116:	4a0a      	ldr	r2, [pc, #40]	; (8002140 <SysTick_Config+0x40>)
 8002118:	687b      	ldr	r3, [r7, #4]
 800211a:	3b01      	subs	r3, #1
 800211c:	6053      	str	r3, [r2, #4]
 800211e:	210f      	movs	r1, #15
 8002120:	f04f 30ff 	mov.w	r0, #4294967295
 8002124:	f7ff ff8e 	bl	8002044 <__NVIC_SetPriority>
 8002128:	4b05      	ldr	r3, [pc, #20]	; (8002140 <SysTick_Config+0x40>)
 800212a:	2200      	movs	r2, #0
 800212c:	609a      	str	r2, [r3, #8]
 800212e:	4b04      	ldr	r3, [pc, #16]	; (8002140 <SysTick_Config+0x40>)
 8002130:	2207      	movs	r2, #7
 8002132:	601a      	str	r2, [r3, #0]
 8002134:	2300      	movs	r3, #0
 8002136:	4618      	mov	r0, r3
 8002138:	3708      	adds	r7, #8
 800213a:	46bd      	mov	sp, r7
 800213c:	bd80      	pop	{r7, pc}
 800213e:	bf00      	nop
 8002140:	e000e010 	.word	0xe000e010

08002144 <HAL_NVIC_SetPriorityGrouping>:
 8002144:	b580      	push	{r7, lr}
 8002146:	b082      	sub	sp, #8
 8002148:	af00      	add	r7, sp, #0
 800214a:	6078      	str	r0, [r7, #4]
 800214c:	6878      	ldr	r0, [r7, #4]
 800214e:	f7ff ff29 	bl	8001fa4 <__NVIC_SetPriorityGrouping>
 8002152:	bf00      	nop
 8002154:	3708      	adds	r7, #8
 8002156:	46bd      	mov	sp, r7
 8002158:	bd80      	pop	{r7, pc}

0800215a <HAL_NVIC_SetPriority>:
 800215a:	b580      	push	{r7, lr}
 800215c:	b086      	sub	sp, #24
 800215e:	af00      	add	r7, sp, #0
 8002160:	4603      	mov	r3, r0
 8002162:	60b9      	str	r1, [r7, #8]
 8002164:	607a      	str	r2, [r7, #4]
 8002166:	73fb      	strb	r3, [r7, #15]
 8002168:	2300      	movs	r3, #0
 800216a:	617b      	str	r3, [r7, #20]
 800216c:	f7ff ff3e 	bl	8001fec <__NVIC_GetPriorityGrouping>
 8002170:	6178      	str	r0, [r7, #20]
 8002172:	687a      	ldr	r2, [r7, #4]
 8002174:	68b9      	ldr	r1, [r7, #8]
 8002176:	6978      	ldr	r0, [r7, #20]
 8002178:	f7ff ff8e 	bl	8002098 <NVIC_EncodePriority>
 800217c:	4602      	mov	r2, r0
 800217e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002182:	4611      	mov	r1, r2
 8002184:	4618      	mov	r0, r3
 8002186:	f7ff ff5d 	bl	8002044 <__NVIC_SetPriority>
 800218a:	bf00      	nop
 800218c:	3718      	adds	r7, #24
 800218e:	46bd      	mov	sp, r7
 8002190:	bd80      	pop	{r7, pc}

08002192 <HAL_NVIC_EnableIRQ>:
 8002192:	b580      	push	{r7, lr}
 8002194:	b082      	sub	sp, #8
 8002196:	af00      	add	r7, sp, #0
 8002198:	4603      	mov	r3, r0
 800219a:	71fb      	strb	r3, [r7, #7]
 800219c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80021a0:	4618      	mov	r0, r3
 80021a2:	f7ff ff31 	bl	8002008 <__NVIC_EnableIRQ>
 80021a6:	bf00      	nop
 80021a8:	3708      	adds	r7, #8
 80021aa:	46bd      	mov	sp, r7
 80021ac:	bd80      	pop	{r7, pc}

080021ae <HAL_SYSTICK_Config>:
 80021ae:	b580      	push	{r7, lr}
 80021b0:	b082      	sub	sp, #8
 80021b2:	af00      	add	r7, sp, #0
 80021b4:	6078      	str	r0, [r7, #4]
 80021b6:	6878      	ldr	r0, [r7, #4]
 80021b8:	f7ff ffa2 	bl	8002100 <SysTick_Config>
 80021bc:	4603      	mov	r3, r0
 80021be:	4618      	mov	r0, r3
 80021c0:	3708      	adds	r7, #8
 80021c2:	46bd      	mov	sp, r7
 80021c4:	bd80      	pop	{r7, pc}
	...

080021c8 <HAL_DMA_Init>:
 80021c8:	b580      	push	{r7, lr}
 80021ca:	b086      	sub	sp, #24
 80021cc:	af00      	add	r7, sp, #0
 80021ce:	6078      	str	r0, [r7, #4]
 80021d0:	2300      	movs	r3, #0
 80021d2:	617b      	str	r3, [r7, #20]
 80021d4:	f7ff feb6 	bl	8001f44 <HAL_GetTick>
 80021d8:	6138      	str	r0, [r7, #16]
 80021da:	687b      	ldr	r3, [r7, #4]
 80021dc:	2b00      	cmp	r3, #0
 80021de:	d101      	bne.n	80021e4 <HAL_DMA_Init+0x1c>
 80021e0:	2301      	movs	r3, #1
 80021e2:	e099      	b.n	8002318 <HAL_DMA_Init+0x150>
 80021e4:	687b      	ldr	r3, [r7, #4]
 80021e6:	2202      	movs	r2, #2
 80021e8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80021ec:	687b      	ldr	r3, [r7, #4]
 80021ee:	2200      	movs	r2, #0
 80021f0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80021f4:	687b      	ldr	r3, [r7, #4]
 80021f6:	681b      	ldr	r3, [r3, #0]
 80021f8:	681a      	ldr	r2, [r3, #0]
 80021fa:	687b      	ldr	r3, [r7, #4]
 80021fc:	681b      	ldr	r3, [r3, #0]
 80021fe:	f022 0201 	bic.w	r2, r2, #1
 8002202:	601a      	str	r2, [r3, #0]
 8002204:	e00f      	b.n	8002226 <HAL_DMA_Init+0x5e>
 8002206:	f7ff fe9d 	bl	8001f44 <HAL_GetTick>
 800220a:	4602      	mov	r2, r0
 800220c:	693b      	ldr	r3, [r7, #16]
 800220e:	1ad3      	subs	r3, r2, r3
 8002210:	2b05      	cmp	r3, #5
 8002212:	d908      	bls.n	8002226 <HAL_DMA_Init+0x5e>
 8002214:	687b      	ldr	r3, [r7, #4]
 8002216:	2220      	movs	r2, #32
 8002218:	655a      	str	r2, [r3, #84]	; 0x54
 800221a:	687b      	ldr	r3, [r7, #4]
 800221c:	2203      	movs	r2, #3
 800221e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002222:	2303      	movs	r3, #3
 8002224:	e078      	b.n	8002318 <HAL_DMA_Init+0x150>
 8002226:	687b      	ldr	r3, [r7, #4]
 8002228:	681b      	ldr	r3, [r3, #0]
 800222a:	681b      	ldr	r3, [r3, #0]
 800222c:	f003 0301 	and.w	r3, r3, #1
 8002230:	2b00      	cmp	r3, #0
 8002232:	d1e8      	bne.n	8002206 <HAL_DMA_Init+0x3e>
 8002234:	687b      	ldr	r3, [r7, #4]
 8002236:	681b      	ldr	r3, [r3, #0]
 8002238:	681b      	ldr	r3, [r3, #0]
 800223a:	617b      	str	r3, [r7, #20]
 800223c:	697a      	ldr	r2, [r7, #20]
 800223e:	4b38      	ldr	r3, [pc, #224]	; (8002320 <HAL_DMA_Init+0x158>)
 8002240:	4013      	ands	r3, r2
 8002242:	617b      	str	r3, [r7, #20]
 8002244:	687b      	ldr	r3, [r7, #4]
 8002246:	685a      	ldr	r2, [r3, #4]
 8002248:	687b      	ldr	r3, [r7, #4]
 800224a:	689b      	ldr	r3, [r3, #8]
 800224c:	431a      	orrs	r2, r3
 800224e:	687b      	ldr	r3, [r7, #4]
 8002250:	68db      	ldr	r3, [r3, #12]
 8002252:	431a      	orrs	r2, r3
 8002254:	687b      	ldr	r3, [r7, #4]
 8002256:	691b      	ldr	r3, [r3, #16]
 8002258:	431a      	orrs	r2, r3
 800225a:	687b      	ldr	r3, [r7, #4]
 800225c:	695b      	ldr	r3, [r3, #20]
 800225e:	431a      	orrs	r2, r3
 8002260:	687b      	ldr	r3, [r7, #4]
 8002262:	699b      	ldr	r3, [r3, #24]
 8002264:	431a      	orrs	r2, r3
 8002266:	687b      	ldr	r3, [r7, #4]
 8002268:	69db      	ldr	r3, [r3, #28]
 800226a:	431a      	orrs	r2, r3
 800226c:	687b      	ldr	r3, [r7, #4]
 800226e:	6a1b      	ldr	r3, [r3, #32]
 8002270:	4313      	orrs	r3, r2
 8002272:	697a      	ldr	r2, [r7, #20]
 8002274:	4313      	orrs	r3, r2
 8002276:	617b      	str	r3, [r7, #20]
 8002278:	687b      	ldr	r3, [r7, #4]
 800227a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800227c:	2b04      	cmp	r3, #4
 800227e:	d107      	bne.n	8002290 <HAL_DMA_Init+0xc8>
 8002280:	687b      	ldr	r3, [r7, #4]
 8002282:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002284:	687b      	ldr	r3, [r7, #4]
 8002286:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002288:	4313      	orrs	r3, r2
 800228a:	697a      	ldr	r2, [r7, #20]
 800228c:	4313      	orrs	r3, r2
 800228e:	617b      	str	r3, [r7, #20]
 8002290:	687b      	ldr	r3, [r7, #4]
 8002292:	681b      	ldr	r3, [r3, #0]
 8002294:	697a      	ldr	r2, [r7, #20]
 8002296:	601a      	str	r2, [r3, #0]
 8002298:	687b      	ldr	r3, [r7, #4]
 800229a:	681b      	ldr	r3, [r3, #0]
 800229c:	695b      	ldr	r3, [r3, #20]
 800229e:	617b      	str	r3, [r7, #20]
 80022a0:	697b      	ldr	r3, [r7, #20]
 80022a2:	f023 0307 	bic.w	r3, r3, #7
 80022a6:	617b      	str	r3, [r7, #20]
 80022a8:	687b      	ldr	r3, [r7, #4]
 80022aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022ac:	697a      	ldr	r2, [r7, #20]
 80022ae:	4313      	orrs	r3, r2
 80022b0:	617b      	str	r3, [r7, #20]
 80022b2:	687b      	ldr	r3, [r7, #4]
 80022b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022b6:	2b04      	cmp	r3, #4
 80022b8:	d117      	bne.n	80022ea <HAL_DMA_Init+0x122>
 80022ba:	687b      	ldr	r3, [r7, #4]
 80022bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80022be:	697a      	ldr	r2, [r7, #20]
 80022c0:	4313      	orrs	r3, r2
 80022c2:	617b      	str	r3, [r7, #20]
 80022c4:	687b      	ldr	r3, [r7, #4]
 80022c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80022c8:	2b00      	cmp	r3, #0
 80022ca:	d00e      	beq.n	80022ea <HAL_DMA_Init+0x122>
 80022cc:	6878      	ldr	r0, [r7, #4]
 80022ce:	f000 fa7b 	bl	80027c8 <DMA_CheckFifoParam>
 80022d2:	4603      	mov	r3, r0
 80022d4:	2b00      	cmp	r3, #0
 80022d6:	d008      	beq.n	80022ea <HAL_DMA_Init+0x122>
 80022d8:	687b      	ldr	r3, [r7, #4]
 80022da:	2240      	movs	r2, #64	; 0x40
 80022dc:	655a      	str	r2, [r3, #84]	; 0x54
 80022de:	687b      	ldr	r3, [r7, #4]
 80022e0:	2201      	movs	r2, #1
 80022e2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80022e6:	2301      	movs	r3, #1
 80022e8:	e016      	b.n	8002318 <HAL_DMA_Init+0x150>
 80022ea:	687b      	ldr	r3, [r7, #4]
 80022ec:	681b      	ldr	r3, [r3, #0]
 80022ee:	697a      	ldr	r2, [r7, #20]
 80022f0:	615a      	str	r2, [r3, #20]
 80022f2:	6878      	ldr	r0, [r7, #4]
 80022f4:	f000 fa32 	bl	800275c <DMA_CalcBaseAndBitshift>
 80022f8:	4603      	mov	r3, r0
 80022fa:	60fb      	str	r3, [r7, #12]
 80022fc:	687b      	ldr	r3, [r7, #4]
 80022fe:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002300:	223f      	movs	r2, #63	; 0x3f
 8002302:	409a      	lsls	r2, r3
 8002304:	68fb      	ldr	r3, [r7, #12]
 8002306:	609a      	str	r2, [r3, #8]
 8002308:	687b      	ldr	r3, [r7, #4]
 800230a:	2200      	movs	r2, #0
 800230c:	655a      	str	r2, [r3, #84]	; 0x54
 800230e:	687b      	ldr	r3, [r7, #4]
 8002310:	2201      	movs	r2, #1
 8002312:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002316:	2300      	movs	r3, #0
 8002318:	4618      	mov	r0, r3
 800231a:	3718      	adds	r7, #24
 800231c:	46bd      	mov	sp, r7
 800231e:	bd80      	pop	{r7, pc}
 8002320:	f010803f 	.word	0xf010803f

08002324 <HAL_DMA_Abort>:
 8002324:	b580      	push	{r7, lr}
 8002326:	b084      	sub	sp, #16
 8002328:	af00      	add	r7, sp, #0
 800232a:	6078      	str	r0, [r7, #4]
 800232c:	687b      	ldr	r3, [r7, #4]
 800232e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002330:	60fb      	str	r3, [r7, #12]
 8002332:	f7ff fe07 	bl	8001f44 <HAL_GetTick>
 8002336:	60b8      	str	r0, [r7, #8]
 8002338:	687b      	ldr	r3, [r7, #4]
 800233a:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800233e:	b2db      	uxtb	r3, r3
 8002340:	2b02      	cmp	r3, #2
 8002342:	d008      	beq.n	8002356 <HAL_DMA_Abort+0x32>
 8002344:	687b      	ldr	r3, [r7, #4]
 8002346:	2280      	movs	r2, #128	; 0x80
 8002348:	655a      	str	r2, [r3, #84]	; 0x54
 800234a:	687b      	ldr	r3, [r7, #4]
 800234c:	2200      	movs	r2, #0
 800234e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8002352:	2301      	movs	r3, #1
 8002354:	e052      	b.n	80023fc <HAL_DMA_Abort+0xd8>
 8002356:	687b      	ldr	r3, [r7, #4]
 8002358:	681b      	ldr	r3, [r3, #0]
 800235a:	681a      	ldr	r2, [r3, #0]
 800235c:	687b      	ldr	r3, [r7, #4]
 800235e:	681b      	ldr	r3, [r3, #0]
 8002360:	f022 0216 	bic.w	r2, r2, #22
 8002364:	601a      	str	r2, [r3, #0]
 8002366:	687b      	ldr	r3, [r7, #4]
 8002368:	681b      	ldr	r3, [r3, #0]
 800236a:	695a      	ldr	r2, [r3, #20]
 800236c:	687b      	ldr	r3, [r7, #4]
 800236e:	681b      	ldr	r3, [r3, #0]
 8002370:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8002374:	615a      	str	r2, [r3, #20]
 8002376:	687b      	ldr	r3, [r7, #4]
 8002378:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800237a:	2b00      	cmp	r3, #0
 800237c:	d103      	bne.n	8002386 <HAL_DMA_Abort+0x62>
 800237e:	687b      	ldr	r3, [r7, #4]
 8002380:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002382:	2b00      	cmp	r3, #0
 8002384:	d007      	beq.n	8002396 <HAL_DMA_Abort+0x72>
 8002386:	687b      	ldr	r3, [r7, #4]
 8002388:	681b      	ldr	r3, [r3, #0]
 800238a:	681a      	ldr	r2, [r3, #0]
 800238c:	687b      	ldr	r3, [r7, #4]
 800238e:	681b      	ldr	r3, [r3, #0]
 8002390:	f022 0208 	bic.w	r2, r2, #8
 8002394:	601a      	str	r2, [r3, #0]
 8002396:	687b      	ldr	r3, [r7, #4]
 8002398:	681b      	ldr	r3, [r3, #0]
 800239a:	681a      	ldr	r2, [r3, #0]
 800239c:	687b      	ldr	r3, [r7, #4]
 800239e:	681b      	ldr	r3, [r3, #0]
 80023a0:	f022 0201 	bic.w	r2, r2, #1
 80023a4:	601a      	str	r2, [r3, #0]
 80023a6:	e013      	b.n	80023d0 <HAL_DMA_Abort+0xac>
 80023a8:	f7ff fdcc 	bl	8001f44 <HAL_GetTick>
 80023ac:	4602      	mov	r2, r0
 80023ae:	68bb      	ldr	r3, [r7, #8]
 80023b0:	1ad3      	subs	r3, r2, r3
 80023b2:	2b05      	cmp	r3, #5
 80023b4:	d90c      	bls.n	80023d0 <HAL_DMA_Abort+0xac>
 80023b6:	687b      	ldr	r3, [r7, #4]
 80023b8:	2220      	movs	r2, #32
 80023ba:	655a      	str	r2, [r3, #84]	; 0x54
 80023bc:	687b      	ldr	r3, [r7, #4]
 80023be:	2203      	movs	r2, #3
 80023c0:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80023c4:	687b      	ldr	r3, [r7, #4]
 80023c6:	2200      	movs	r2, #0
 80023c8:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80023cc:	2303      	movs	r3, #3
 80023ce:	e015      	b.n	80023fc <HAL_DMA_Abort+0xd8>
 80023d0:	687b      	ldr	r3, [r7, #4]
 80023d2:	681b      	ldr	r3, [r3, #0]
 80023d4:	681b      	ldr	r3, [r3, #0]
 80023d6:	f003 0301 	and.w	r3, r3, #1
 80023da:	2b00      	cmp	r3, #0
 80023dc:	d1e4      	bne.n	80023a8 <HAL_DMA_Abort+0x84>
 80023de:	687b      	ldr	r3, [r7, #4]
 80023e0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80023e2:	223f      	movs	r2, #63	; 0x3f
 80023e4:	409a      	lsls	r2, r3
 80023e6:	68fb      	ldr	r3, [r7, #12]
 80023e8:	609a      	str	r2, [r3, #8]
 80023ea:	687b      	ldr	r3, [r7, #4]
 80023ec:	2201      	movs	r2, #1
 80023ee:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80023f2:	687b      	ldr	r3, [r7, #4]
 80023f4:	2200      	movs	r2, #0
 80023f6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80023fa:	2300      	movs	r3, #0
 80023fc:	4618      	mov	r0, r3
 80023fe:	3710      	adds	r7, #16
 8002400:	46bd      	mov	sp, r7
 8002402:	bd80      	pop	{r7, pc}

08002404 <HAL_DMA_Abort_IT>:
 8002404:	b480      	push	{r7}
 8002406:	b083      	sub	sp, #12
 8002408:	af00      	add	r7, sp, #0
 800240a:	6078      	str	r0, [r7, #4]
 800240c:	687b      	ldr	r3, [r7, #4]
 800240e:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8002412:	b2db      	uxtb	r3, r3
 8002414:	2b02      	cmp	r3, #2
 8002416:	d004      	beq.n	8002422 <HAL_DMA_Abort_IT+0x1e>
 8002418:	687b      	ldr	r3, [r7, #4]
 800241a:	2280      	movs	r2, #128	; 0x80
 800241c:	655a      	str	r2, [r3, #84]	; 0x54
 800241e:	2301      	movs	r3, #1
 8002420:	e00c      	b.n	800243c <HAL_DMA_Abort_IT+0x38>
 8002422:	687b      	ldr	r3, [r7, #4]
 8002424:	2205      	movs	r2, #5
 8002426:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800242a:	687b      	ldr	r3, [r7, #4]
 800242c:	681b      	ldr	r3, [r3, #0]
 800242e:	681a      	ldr	r2, [r3, #0]
 8002430:	687b      	ldr	r3, [r7, #4]
 8002432:	681b      	ldr	r3, [r3, #0]
 8002434:	f022 0201 	bic.w	r2, r2, #1
 8002438:	601a      	str	r2, [r3, #0]
 800243a:	2300      	movs	r3, #0
 800243c:	4618      	mov	r0, r3
 800243e:	370c      	adds	r7, #12
 8002440:	46bd      	mov	sp, r7
 8002442:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002446:	4770      	bx	lr

08002448 <HAL_DMA_IRQHandler>:
 8002448:	b580      	push	{r7, lr}
 800244a:	b086      	sub	sp, #24
 800244c:	af00      	add	r7, sp, #0
 800244e:	6078      	str	r0, [r7, #4]
 8002450:	2300      	movs	r3, #0
 8002452:	60bb      	str	r3, [r7, #8]
 8002454:	4b8e      	ldr	r3, [pc, #568]	; (8002690 <HAL_DMA_IRQHandler+0x248>)
 8002456:	681b      	ldr	r3, [r3, #0]
 8002458:	4a8e      	ldr	r2, [pc, #568]	; (8002694 <HAL_DMA_IRQHandler+0x24c>)
 800245a:	fba2 2303 	umull	r2, r3, r2, r3
 800245e:	0a9b      	lsrs	r3, r3, #10
 8002460:	617b      	str	r3, [r7, #20]
 8002462:	687b      	ldr	r3, [r7, #4]
 8002464:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002466:	613b      	str	r3, [r7, #16]
 8002468:	693b      	ldr	r3, [r7, #16]
 800246a:	681b      	ldr	r3, [r3, #0]
 800246c:	60fb      	str	r3, [r7, #12]
 800246e:	687b      	ldr	r3, [r7, #4]
 8002470:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002472:	2208      	movs	r2, #8
 8002474:	409a      	lsls	r2, r3
 8002476:	68fb      	ldr	r3, [r7, #12]
 8002478:	4013      	ands	r3, r2
 800247a:	2b00      	cmp	r3, #0
 800247c:	d01a      	beq.n	80024b4 <HAL_DMA_IRQHandler+0x6c>
 800247e:	687b      	ldr	r3, [r7, #4]
 8002480:	681b      	ldr	r3, [r3, #0]
 8002482:	681b      	ldr	r3, [r3, #0]
 8002484:	f003 0304 	and.w	r3, r3, #4
 8002488:	2b00      	cmp	r3, #0
 800248a:	d013      	beq.n	80024b4 <HAL_DMA_IRQHandler+0x6c>
 800248c:	687b      	ldr	r3, [r7, #4]
 800248e:	681b      	ldr	r3, [r3, #0]
 8002490:	681a      	ldr	r2, [r3, #0]
 8002492:	687b      	ldr	r3, [r7, #4]
 8002494:	681b      	ldr	r3, [r3, #0]
 8002496:	f022 0204 	bic.w	r2, r2, #4
 800249a:	601a      	str	r2, [r3, #0]
 800249c:	687b      	ldr	r3, [r7, #4]
 800249e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80024a0:	2208      	movs	r2, #8
 80024a2:	409a      	lsls	r2, r3
 80024a4:	693b      	ldr	r3, [r7, #16]
 80024a6:	609a      	str	r2, [r3, #8]
 80024a8:	687b      	ldr	r3, [r7, #4]
 80024aa:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80024ac:	f043 0201 	orr.w	r2, r3, #1
 80024b0:	687b      	ldr	r3, [r7, #4]
 80024b2:	655a      	str	r2, [r3, #84]	; 0x54
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80024b8:	2201      	movs	r2, #1
 80024ba:	409a      	lsls	r2, r3
 80024bc:	68fb      	ldr	r3, [r7, #12]
 80024be:	4013      	ands	r3, r2
 80024c0:	2b00      	cmp	r3, #0
 80024c2:	d012      	beq.n	80024ea <HAL_DMA_IRQHandler+0xa2>
 80024c4:	687b      	ldr	r3, [r7, #4]
 80024c6:	681b      	ldr	r3, [r3, #0]
 80024c8:	695b      	ldr	r3, [r3, #20]
 80024ca:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80024ce:	2b00      	cmp	r3, #0
 80024d0:	d00b      	beq.n	80024ea <HAL_DMA_IRQHandler+0xa2>
 80024d2:	687b      	ldr	r3, [r7, #4]
 80024d4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80024d6:	2201      	movs	r2, #1
 80024d8:	409a      	lsls	r2, r3
 80024da:	693b      	ldr	r3, [r7, #16]
 80024dc:	609a      	str	r2, [r3, #8]
 80024de:	687b      	ldr	r3, [r7, #4]
 80024e0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80024e2:	f043 0202 	orr.w	r2, r3, #2
 80024e6:	687b      	ldr	r3, [r7, #4]
 80024e8:	655a      	str	r2, [r3, #84]	; 0x54
 80024ea:	687b      	ldr	r3, [r7, #4]
 80024ec:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80024ee:	2204      	movs	r2, #4
 80024f0:	409a      	lsls	r2, r3
 80024f2:	68fb      	ldr	r3, [r7, #12]
 80024f4:	4013      	ands	r3, r2
 80024f6:	2b00      	cmp	r3, #0
 80024f8:	d012      	beq.n	8002520 <HAL_DMA_IRQHandler+0xd8>
 80024fa:	687b      	ldr	r3, [r7, #4]
 80024fc:	681b      	ldr	r3, [r3, #0]
 80024fe:	681b      	ldr	r3, [r3, #0]
 8002500:	f003 0302 	and.w	r3, r3, #2
 8002504:	2b00      	cmp	r3, #0
 8002506:	d00b      	beq.n	8002520 <HAL_DMA_IRQHandler+0xd8>
 8002508:	687b      	ldr	r3, [r7, #4]
 800250a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800250c:	2204      	movs	r2, #4
 800250e:	409a      	lsls	r2, r3
 8002510:	693b      	ldr	r3, [r7, #16]
 8002512:	609a      	str	r2, [r3, #8]
 8002514:	687b      	ldr	r3, [r7, #4]
 8002516:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002518:	f043 0204 	orr.w	r2, r3, #4
 800251c:	687b      	ldr	r3, [r7, #4]
 800251e:	655a      	str	r2, [r3, #84]	; 0x54
 8002520:	687b      	ldr	r3, [r7, #4]
 8002522:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002524:	2210      	movs	r2, #16
 8002526:	409a      	lsls	r2, r3
 8002528:	68fb      	ldr	r3, [r7, #12]
 800252a:	4013      	ands	r3, r2
 800252c:	2b00      	cmp	r3, #0
 800252e:	d043      	beq.n	80025b8 <HAL_DMA_IRQHandler+0x170>
 8002530:	687b      	ldr	r3, [r7, #4]
 8002532:	681b      	ldr	r3, [r3, #0]
 8002534:	681b      	ldr	r3, [r3, #0]
 8002536:	f003 0308 	and.w	r3, r3, #8
 800253a:	2b00      	cmp	r3, #0
 800253c:	d03c      	beq.n	80025b8 <HAL_DMA_IRQHandler+0x170>
 800253e:	687b      	ldr	r3, [r7, #4]
 8002540:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002542:	2210      	movs	r2, #16
 8002544:	409a      	lsls	r2, r3
 8002546:	693b      	ldr	r3, [r7, #16]
 8002548:	609a      	str	r2, [r3, #8]
 800254a:	687b      	ldr	r3, [r7, #4]
 800254c:	681b      	ldr	r3, [r3, #0]
 800254e:	681b      	ldr	r3, [r3, #0]
 8002550:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8002554:	2b00      	cmp	r3, #0
 8002556:	d018      	beq.n	800258a <HAL_DMA_IRQHandler+0x142>
 8002558:	687b      	ldr	r3, [r7, #4]
 800255a:	681b      	ldr	r3, [r3, #0]
 800255c:	681b      	ldr	r3, [r3, #0]
 800255e:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8002562:	2b00      	cmp	r3, #0
 8002564:	d108      	bne.n	8002578 <HAL_DMA_IRQHandler+0x130>
 8002566:	687b      	ldr	r3, [r7, #4]
 8002568:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800256a:	2b00      	cmp	r3, #0
 800256c:	d024      	beq.n	80025b8 <HAL_DMA_IRQHandler+0x170>
 800256e:	687b      	ldr	r3, [r7, #4]
 8002570:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002572:	6878      	ldr	r0, [r7, #4]
 8002574:	4798      	blx	r3
 8002576:	e01f      	b.n	80025b8 <HAL_DMA_IRQHandler+0x170>
 8002578:	687b      	ldr	r3, [r7, #4]
 800257a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800257c:	2b00      	cmp	r3, #0
 800257e:	d01b      	beq.n	80025b8 <HAL_DMA_IRQHandler+0x170>
 8002580:	687b      	ldr	r3, [r7, #4]
 8002582:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002584:	6878      	ldr	r0, [r7, #4]
 8002586:	4798      	blx	r3
 8002588:	e016      	b.n	80025b8 <HAL_DMA_IRQHandler+0x170>
 800258a:	687b      	ldr	r3, [r7, #4]
 800258c:	681b      	ldr	r3, [r3, #0]
 800258e:	681b      	ldr	r3, [r3, #0]
 8002590:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002594:	2b00      	cmp	r3, #0
 8002596:	d107      	bne.n	80025a8 <HAL_DMA_IRQHandler+0x160>
 8002598:	687b      	ldr	r3, [r7, #4]
 800259a:	681b      	ldr	r3, [r3, #0]
 800259c:	681a      	ldr	r2, [r3, #0]
 800259e:	687b      	ldr	r3, [r7, #4]
 80025a0:	681b      	ldr	r3, [r3, #0]
 80025a2:	f022 0208 	bic.w	r2, r2, #8
 80025a6:	601a      	str	r2, [r3, #0]
 80025a8:	687b      	ldr	r3, [r7, #4]
 80025aa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80025ac:	2b00      	cmp	r3, #0
 80025ae:	d003      	beq.n	80025b8 <HAL_DMA_IRQHandler+0x170>
 80025b0:	687b      	ldr	r3, [r7, #4]
 80025b2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80025b4:	6878      	ldr	r0, [r7, #4]
 80025b6:	4798      	blx	r3
 80025b8:	687b      	ldr	r3, [r7, #4]
 80025ba:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80025bc:	2220      	movs	r2, #32
 80025be:	409a      	lsls	r2, r3
 80025c0:	68fb      	ldr	r3, [r7, #12]
 80025c2:	4013      	ands	r3, r2
 80025c4:	2b00      	cmp	r3, #0
 80025c6:	f000 808f 	beq.w	80026e8 <HAL_DMA_IRQHandler+0x2a0>
 80025ca:	687b      	ldr	r3, [r7, #4]
 80025cc:	681b      	ldr	r3, [r3, #0]
 80025ce:	681b      	ldr	r3, [r3, #0]
 80025d0:	f003 0310 	and.w	r3, r3, #16
 80025d4:	2b00      	cmp	r3, #0
 80025d6:	f000 8087 	beq.w	80026e8 <HAL_DMA_IRQHandler+0x2a0>
 80025da:	687b      	ldr	r3, [r7, #4]
 80025dc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80025de:	2220      	movs	r2, #32
 80025e0:	409a      	lsls	r2, r3
 80025e2:	693b      	ldr	r3, [r7, #16]
 80025e4:	609a      	str	r2, [r3, #8]
 80025e6:	687b      	ldr	r3, [r7, #4]
 80025e8:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80025ec:	b2db      	uxtb	r3, r3
 80025ee:	2b05      	cmp	r3, #5
 80025f0:	d136      	bne.n	8002660 <HAL_DMA_IRQHandler+0x218>
 80025f2:	687b      	ldr	r3, [r7, #4]
 80025f4:	681b      	ldr	r3, [r3, #0]
 80025f6:	681a      	ldr	r2, [r3, #0]
 80025f8:	687b      	ldr	r3, [r7, #4]
 80025fa:	681b      	ldr	r3, [r3, #0]
 80025fc:	f022 0216 	bic.w	r2, r2, #22
 8002600:	601a      	str	r2, [r3, #0]
 8002602:	687b      	ldr	r3, [r7, #4]
 8002604:	681b      	ldr	r3, [r3, #0]
 8002606:	695a      	ldr	r2, [r3, #20]
 8002608:	687b      	ldr	r3, [r7, #4]
 800260a:	681b      	ldr	r3, [r3, #0]
 800260c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8002610:	615a      	str	r2, [r3, #20]
 8002612:	687b      	ldr	r3, [r7, #4]
 8002614:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002616:	2b00      	cmp	r3, #0
 8002618:	d103      	bne.n	8002622 <HAL_DMA_IRQHandler+0x1da>
 800261a:	687b      	ldr	r3, [r7, #4]
 800261c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800261e:	2b00      	cmp	r3, #0
 8002620:	d007      	beq.n	8002632 <HAL_DMA_IRQHandler+0x1ea>
 8002622:	687b      	ldr	r3, [r7, #4]
 8002624:	681b      	ldr	r3, [r3, #0]
 8002626:	681a      	ldr	r2, [r3, #0]
 8002628:	687b      	ldr	r3, [r7, #4]
 800262a:	681b      	ldr	r3, [r3, #0]
 800262c:	f022 0208 	bic.w	r2, r2, #8
 8002630:	601a      	str	r2, [r3, #0]
 8002632:	687b      	ldr	r3, [r7, #4]
 8002634:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002636:	223f      	movs	r2, #63	; 0x3f
 8002638:	409a      	lsls	r2, r3
 800263a:	693b      	ldr	r3, [r7, #16]
 800263c:	609a      	str	r2, [r3, #8]
 800263e:	687b      	ldr	r3, [r7, #4]
 8002640:	2201      	movs	r2, #1
 8002642:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002646:	687b      	ldr	r3, [r7, #4]
 8002648:	2200      	movs	r2, #0
 800264a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800264e:	687b      	ldr	r3, [r7, #4]
 8002650:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002652:	2b00      	cmp	r3, #0
 8002654:	d07e      	beq.n	8002754 <HAL_DMA_IRQHandler+0x30c>
 8002656:	687b      	ldr	r3, [r7, #4]
 8002658:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800265a:	6878      	ldr	r0, [r7, #4]
 800265c:	4798      	blx	r3
 800265e:	e079      	b.n	8002754 <HAL_DMA_IRQHandler+0x30c>
 8002660:	687b      	ldr	r3, [r7, #4]
 8002662:	681b      	ldr	r3, [r3, #0]
 8002664:	681b      	ldr	r3, [r3, #0]
 8002666:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800266a:	2b00      	cmp	r3, #0
 800266c:	d01d      	beq.n	80026aa <HAL_DMA_IRQHandler+0x262>
 800266e:	687b      	ldr	r3, [r7, #4]
 8002670:	681b      	ldr	r3, [r3, #0]
 8002672:	681b      	ldr	r3, [r3, #0]
 8002674:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8002678:	2b00      	cmp	r3, #0
 800267a:	d10d      	bne.n	8002698 <HAL_DMA_IRQHandler+0x250>
 800267c:	687b      	ldr	r3, [r7, #4]
 800267e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002680:	2b00      	cmp	r3, #0
 8002682:	d031      	beq.n	80026e8 <HAL_DMA_IRQHandler+0x2a0>
 8002684:	687b      	ldr	r3, [r7, #4]
 8002686:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002688:	6878      	ldr	r0, [r7, #4]
 800268a:	4798      	blx	r3
 800268c:	e02c      	b.n	80026e8 <HAL_DMA_IRQHandler+0x2a0>
 800268e:	bf00      	nop
 8002690:	20000000 	.word	0x20000000
 8002694:	1b4e81b5 	.word	0x1b4e81b5
 8002698:	687b      	ldr	r3, [r7, #4]
 800269a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800269c:	2b00      	cmp	r3, #0
 800269e:	d023      	beq.n	80026e8 <HAL_DMA_IRQHandler+0x2a0>
 80026a0:	687b      	ldr	r3, [r7, #4]
 80026a2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80026a4:	6878      	ldr	r0, [r7, #4]
 80026a6:	4798      	blx	r3
 80026a8:	e01e      	b.n	80026e8 <HAL_DMA_IRQHandler+0x2a0>
 80026aa:	687b      	ldr	r3, [r7, #4]
 80026ac:	681b      	ldr	r3, [r3, #0]
 80026ae:	681b      	ldr	r3, [r3, #0]
 80026b0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80026b4:	2b00      	cmp	r3, #0
 80026b6:	d10f      	bne.n	80026d8 <HAL_DMA_IRQHandler+0x290>
 80026b8:	687b      	ldr	r3, [r7, #4]
 80026ba:	681b      	ldr	r3, [r3, #0]
 80026bc:	681a      	ldr	r2, [r3, #0]
 80026be:	687b      	ldr	r3, [r7, #4]
 80026c0:	681b      	ldr	r3, [r3, #0]
 80026c2:	f022 0210 	bic.w	r2, r2, #16
 80026c6:	601a      	str	r2, [r3, #0]
 80026c8:	687b      	ldr	r3, [r7, #4]
 80026ca:	2201      	movs	r2, #1
 80026cc:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80026d0:	687b      	ldr	r3, [r7, #4]
 80026d2:	2200      	movs	r2, #0
 80026d4:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80026d8:	687b      	ldr	r3, [r7, #4]
 80026da:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80026dc:	2b00      	cmp	r3, #0
 80026de:	d003      	beq.n	80026e8 <HAL_DMA_IRQHandler+0x2a0>
 80026e0:	687b      	ldr	r3, [r7, #4]
 80026e2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80026e4:	6878      	ldr	r0, [r7, #4]
 80026e6:	4798      	blx	r3
 80026e8:	687b      	ldr	r3, [r7, #4]
 80026ea:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80026ec:	2b00      	cmp	r3, #0
 80026ee:	d032      	beq.n	8002756 <HAL_DMA_IRQHandler+0x30e>
 80026f0:	687b      	ldr	r3, [r7, #4]
 80026f2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80026f4:	f003 0301 	and.w	r3, r3, #1
 80026f8:	2b00      	cmp	r3, #0
 80026fa:	d022      	beq.n	8002742 <HAL_DMA_IRQHandler+0x2fa>
 80026fc:	687b      	ldr	r3, [r7, #4]
 80026fe:	2205      	movs	r2, #5
 8002700:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002704:	687b      	ldr	r3, [r7, #4]
 8002706:	681b      	ldr	r3, [r3, #0]
 8002708:	681a      	ldr	r2, [r3, #0]
 800270a:	687b      	ldr	r3, [r7, #4]
 800270c:	681b      	ldr	r3, [r3, #0]
 800270e:	f022 0201 	bic.w	r2, r2, #1
 8002712:	601a      	str	r2, [r3, #0]
 8002714:	68bb      	ldr	r3, [r7, #8]
 8002716:	3301      	adds	r3, #1
 8002718:	60bb      	str	r3, [r7, #8]
 800271a:	697a      	ldr	r2, [r7, #20]
 800271c:	429a      	cmp	r2, r3
 800271e:	d307      	bcc.n	8002730 <HAL_DMA_IRQHandler+0x2e8>
 8002720:	687b      	ldr	r3, [r7, #4]
 8002722:	681b      	ldr	r3, [r3, #0]
 8002724:	681b      	ldr	r3, [r3, #0]
 8002726:	f003 0301 	and.w	r3, r3, #1
 800272a:	2b00      	cmp	r3, #0
 800272c:	d1f2      	bne.n	8002714 <HAL_DMA_IRQHandler+0x2cc>
 800272e:	e000      	b.n	8002732 <HAL_DMA_IRQHandler+0x2ea>
 8002730:	bf00      	nop
 8002732:	687b      	ldr	r3, [r7, #4]
 8002734:	2201      	movs	r2, #1
 8002736:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800273a:	687b      	ldr	r3, [r7, #4]
 800273c:	2200      	movs	r2, #0
 800273e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8002742:	687b      	ldr	r3, [r7, #4]
 8002744:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002746:	2b00      	cmp	r3, #0
 8002748:	d005      	beq.n	8002756 <HAL_DMA_IRQHandler+0x30e>
 800274a:	687b      	ldr	r3, [r7, #4]
 800274c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800274e:	6878      	ldr	r0, [r7, #4]
 8002750:	4798      	blx	r3
 8002752:	e000      	b.n	8002756 <HAL_DMA_IRQHandler+0x30e>
 8002754:	bf00      	nop
 8002756:	3718      	adds	r7, #24
 8002758:	46bd      	mov	sp, r7
 800275a:	bd80      	pop	{r7, pc}

0800275c <DMA_CalcBaseAndBitshift>:
 800275c:	b480      	push	{r7}
 800275e:	b085      	sub	sp, #20
 8002760:	af00      	add	r7, sp, #0
 8002762:	6078      	str	r0, [r7, #4]
 8002764:	687b      	ldr	r3, [r7, #4]
 8002766:	681b      	ldr	r3, [r3, #0]
 8002768:	b2db      	uxtb	r3, r3
 800276a:	3b10      	subs	r3, #16
 800276c:	4a14      	ldr	r2, [pc, #80]	; (80027c0 <DMA_CalcBaseAndBitshift+0x64>)
 800276e:	fba2 2303 	umull	r2, r3, r2, r3
 8002772:	091b      	lsrs	r3, r3, #4
 8002774:	60fb      	str	r3, [r7, #12]
 8002776:	4a13      	ldr	r2, [pc, #76]	; (80027c4 <DMA_CalcBaseAndBitshift+0x68>)
 8002778:	68fb      	ldr	r3, [r7, #12]
 800277a:	4413      	add	r3, r2
 800277c:	781b      	ldrb	r3, [r3, #0]
 800277e:	461a      	mov	r2, r3
 8002780:	687b      	ldr	r3, [r7, #4]
 8002782:	65da      	str	r2, [r3, #92]	; 0x5c
 8002784:	68fb      	ldr	r3, [r7, #12]
 8002786:	2b03      	cmp	r3, #3
 8002788:	d909      	bls.n	800279e <DMA_CalcBaseAndBitshift+0x42>
 800278a:	687b      	ldr	r3, [r7, #4]
 800278c:	681b      	ldr	r3, [r3, #0]
 800278e:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8002792:	f023 0303 	bic.w	r3, r3, #3
 8002796:	1d1a      	adds	r2, r3, #4
 8002798:	687b      	ldr	r3, [r7, #4]
 800279a:	659a      	str	r2, [r3, #88]	; 0x58
 800279c:	e007      	b.n	80027ae <DMA_CalcBaseAndBitshift+0x52>
 800279e:	687b      	ldr	r3, [r7, #4]
 80027a0:	681b      	ldr	r3, [r3, #0]
 80027a2:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 80027a6:	f023 0303 	bic.w	r3, r3, #3
 80027aa:	687a      	ldr	r2, [r7, #4]
 80027ac:	6593      	str	r3, [r2, #88]	; 0x58
 80027ae:	687b      	ldr	r3, [r7, #4]
 80027b0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80027b2:	4618      	mov	r0, r3
 80027b4:	3714      	adds	r7, #20
 80027b6:	46bd      	mov	sp, r7
 80027b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027bc:	4770      	bx	lr
 80027be:	bf00      	nop
 80027c0:	aaaaaaab 	.word	0xaaaaaaab
 80027c4:	0800ad90 	.word	0x0800ad90

080027c8 <DMA_CheckFifoParam>:
 80027c8:	b480      	push	{r7}
 80027ca:	b085      	sub	sp, #20
 80027cc:	af00      	add	r7, sp, #0
 80027ce:	6078      	str	r0, [r7, #4]
 80027d0:	2300      	movs	r3, #0
 80027d2:	73fb      	strb	r3, [r7, #15]
 80027d4:	687b      	ldr	r3, [r7, #4]
 80027d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80027d8:	60bb      	str	r3, [r7, #8]
 80027da:	687b      	ldr	r3, [r7, #4]
 80027dc:	699b      	ldr	r3, [r3, #24]
 80027de:	2b00      	cmp	r3, #0
 80027e0:	d11f      	bne.n	8002822 <DMA_CheckFifoParam+0x5a>
 80027e2:	68bb      	ldr	r3, [r7, #8]
 80027e4:	2b03      	cmp	r3, #3
 80027e6:	d856      	bhi.n	8002896 <DMA_CheckFifoParam+0xce>
 80027e8:	a201      	add	r2, pc, #4	; (adr r2, 80027f0 <DMA_CheckFifoParam+0x28>)
 80027ea:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80027ee:	bf00      	nop
 80027f0:	08002801 	.word	0x08002801
 80027f4:	08002813 	.word	0x08002813
 80027f8:	08002801 	.word	0x08002801
 80027fc:	08002897 	.word	0x08002897
 8002800:	687b      	ldr	r3, [r7, #4]
 8002802:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002804:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8002808:	2b00      	cmp	r3, #0
 800280a:	d046      	beq.n	800289a <DMA_CheckFifoParam+0xd2>
 800280c:	2301      	movs	r3, #1
 800280e:	73fb      	strb	r3, [r7, #15]
 8002810:	e043      	b.n	800289a <DMA_CheckFifoParam+0xd2>
 8002812:	687b      	ldr	r3, [r7, #4]
 8002814:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002816:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 800281a:	d140      	bne.n	800289e <DMA_CheckFifoParam+0xd6>
 800281c:	2301      	movs	r3, #1
 800281e:	73fb      	strb	r3, [r7, #15]
 8002820:	e03d      	b.n	800289e <DMA_CheckFifoParam+0xd6>
 8002822:	687b      	ldr	r3, [r7, #4]
 8002824:	699b      	ldr	r3, [r3, #24]
 8002826:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800282a:	d121      	bne.n	8002870 <DMA_CheckFifoParam+0xa8>
 800282c:	68bb      	ldr	r3, [r7, #8]
 800282e:	2b03      	cmp	r3, #3
 8002830:	d837      	bhi.n	80028a2 <DMA_CheckFifoParam+0xda>
 8002832:	a201      	add	r2, pc, #4	; (adr r2, 8002838 <DMA_CheckFifoParam+0x70>)
 8002834:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002838:	08002849 	.word	0x08002849
 800283c:	0800284f 	.word	0x0800284f
 8002840:	08002849 	.word	0x08002849
 8002844:	08002861 	.word	0x08002861
 8002848:	2301      	movs	r3, #1
 800284a:	73fb      	strb	r3, [r7, #15]
 800284c:	e030      	b.n	80028b0 <DMA_CheckFifoParam+0xe8>
 800284e:	687b      	ldr	r3, [r7, #4]
 8002850:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002852:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8002856:	2b00      	cmp	r3, #0
 8002858:	d025      	beq.n	80028a6 <DMA_CheckFifoParam+0xde>
 800285a:	2301      	movs	r3, #1
 800285c:	73fb      	strb	r3, [r7, #15]
 800285e:	e022      	b.n	80028a6 <DMA_CheckFifoParam+0xde>
 8002860:	687b      	ldr	r3, [r7, #4]
 8002862:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002864:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8002868:	d11f      	bne.n	80028aa <DMA_CheckFifoParam+0xe2>
 800286a:	2301      	movs	r3, #1
 800286c:	73fb      	strb	r3, [r7, #15]
 800286e:	e01c      	b.n	80028aa <DMA_CheckFifoParam+0xe2>
 8002870:	68bb      	ldr	r3, [r7, #8]
 8002872:	2b02      	cmp	r3, #2
 8002874:	d903      	bls.n	800287e <DMA_CheckFifoParam+0xb6>
 8002876:	68bb      	ldr	r3, [r7, #8]
 8002878:	2b03      	cmp	r3, #3
 800287a:	d003      	beq.n	8002884 <DMA_CheckFifoParam+0xbc>
 800287c:	e018      	b.n	80028b0 <DMA_CheckFifoParam+0xe8>
 800287e:	2301      	movs	r3, #1
 8002880:	73fb      	strb	r3, [r7, #15]
 8002882:	e015      	b.n	80028b0 <DMA_CheckFifoParam+0xe8>
 8002884:	687b      	ldr	r3, [r7, #4]
 8002886:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002888:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800288c:	2b00      	cmp	r3, #0
 800288e:	d00e      	beq.n	80028ae <DMA_CheckFifoParam+0xe6>
 8002890:	2301      	movs	r3, #1
 8002892:	73fb      	strb	r3, [r7, #15]
 8002894:	e00b      	b.n	80028ae <DMA_CheckFifoParam+0xe6>
 8002896:	bf00      	nop
 8002898:	e00a      	b.n	80028b0 <DMA_CheckFifoParam+0xe8>
 800289a:	bf00      	nop
 800289c:	e008      	b.n	80028b0 <DMA_CheckFifoParam+0xe8>
 800289e:	bf00      	nop
 80028a0:	e006      	b.n	80028b0 <DMA_CheckFifoParam+0xe8>
 80028a2:	bf00      	nop
 80028a4:	e004      	b.n	80028b0 <DMA_CheckFifoParam+0xe8>
 80028a6:	bf00      	nop
 80028a8:	e002      	b.n	80028b0 <DMA_CheckFifoParam+0xe8>
 80028aa:	bf00      	nop
 80028ac:	e000      	b.n	80028b0 <DMA_CheckFifoParam+0xe8>
 80028ae:	bf00      	nop
 80028b0:	7bfb      	ldrb	r3, [r7, #15]
 80028b2:	4618      	mov	r0, r3
 80028b4:	3714      	adds	r7, #20
 80028b6:	46bd      	mov	sp, r7
 80028b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028bc:	4770      	bx	lr
 80028be:	bf00      	nop

080028c0 <HAL_ETH_Init>:
 80028c0:	b580      	push	{r7, lr}
 80028c2:	b084      	sub	sp, #16
 80028c4:	af00      	add	r7, sp, #0
 80028c6:	6078      	str	r0, [r7, #4]
 80028c8:	687b      	ldr	r3, [r7, #4]
 80028ca:	2b00      	cmp	r3, #0
 80028cc:	d101      	bne.n	80028d2 <HAL_ETH_Init+0x12>
 80028ce:	2301      	movs	r3, #1
 80028d0:	e06c      	b.n	80029ac <HAL_ETH_Init+0xec>
 80028d2:	687b      	ldr	r3, [r7, #4]
 80028d4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80028d8:	2b00      	cmp	r3, #0
 80028da:	d106      	bne.n	80028ea <HAL_ETH_Init+0x2a>
 80028dc:	687b      	ldr	r3, [r7, #4]
 80028de:	2223      	movs	r2, #35	; 0x23
 80028e0:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 80028e4:	6878      	ldr	r0, [r7, #4]
 80028e6:	f7fe fc49 	bl	800117c <HAL_ETH_MspInit>
 80028ea:	2300      	movs	r3, #0
 80028ec:	60bb      	str	r3, [r7, #8]
 80028ee:	4b31      	ldr	r3, [pc, #196]	; (80029b4 <HAL_ETH_Init+0xf4>)
 80028f0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80028f2:	4a30      	ldr	r2, [pc, #192]	; (80029b4 <HAL_ETH_Init+0xf4>)
 80028f4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80028f8:	6453      	str	r3, [r2, #68]	; 0x44
 80028fa:	4b2e      	ldr	r3, [pc, #184]	; (80029b4 <HAL_ETH_Init+0xf4>)
 80028fc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80028fe:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002902:	60bb      	str	r3, [r7, #8]
 8002904:	68bb      	ldr	r3, [r7, #8]
 8002906:	4b2c      	ldr	r3, [pc, #176]	; (80029b8 <HAL_ETH_Init+0xf8>)
 8002908:	685b      	ldr	r3, [r3, #4]
 800290a:	4a2b      	ldr	r2, [pc, #172]	; (80029b8 <HAL_ETH_Init+0xf8>)
 800290c:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8002910:	6053      	str	r3, [r2, #4]
 8002912:	4b29      	ldr	r3, [pc, #164]	; (80029b8 <HAL_ETH_Init+0xf8>)
 8002914:	685a      	ldr	r2, [r3, #4]
 8002916:	687b      	ldr	r3, [r7, #4]
 8002918:	689b      	ldr	r3, [r3, #8]
 800291a:	4927      	ldr	r1, [pc, #156]	; (80029b8 <HAL_ETH_Init+0xf8>)
 800291c:	4313      	orrs	r3, r2
 800291e:	604b      	str	r3, [r1, #4]
 8002920:	4b25      	ldr	r3, [pc, #148]	; (80029b8 <HAL_ETH_Init+0xf8>)
 8002922:	685b      	ldr	r3, [r3, #4]
 8002924:	687b      	ldr	r3, [r7, #4]
 8002926:	681b      	ldr	r3, [r3, #0]
 8002928:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800292c:	681b      	ldr	r3, [r3, #0]
 800292e:	687a      	ldr	r2, [r7, #4]
 8002930:	6812      	ldr	r2, [r2, #0]
 8002932:	f043 0301 	orr.w	r3, r3, #1
 8002936:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 800293a:	6013      	str	r3, [r2, #0]
 800293c:	f7ff fb02 	bl	8001f44 <HAL_GetTick>
 8002940:	60f8      	str	r0, [r7, #12]
 8002942:	e011      	b.n	8002968 <HAL_ETH_Init+0xa8>
 8002944:	f7ff fafe 	bl	8001f44 <HAL_GetTick>
 8002948:	4602      	mov	r2, r0
 800294a:	68fb      	ldr	r3, [r7, #12]
 800294c:	1ad3      	subs	r3, r2, r3
 800294e:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8002952:	d909      	bls.n	8002968 <HAL_ETH_Init+0xa8>
 8002954:	687b      	ldr	r3, [r7, #4]
 8002956:	2204      	movs	r2, #4
 8002958:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800295c:	687b      	ldr	r3, [r7, #4]
 800295e:	22e0      	movs	r2, #224	; 0xe0
 8002960:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8002964:	2301      	movs	r3, #1
 8002966:	e021      	b.n	80029ac <HAL_ETH_Init+0xec>
 8002968:	687b      	ldr	r3, [r7, #4]
 800296a:	681b      	ldr	r3, [r3, #0]
 800296c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8002970:	681b      	ldr	r3, [r3, #0]
 8002972:	f003 0301 	and.w	r3, r3, #1
 8002976:	2b00      	cmp	r3, #0
 8002978:	d1e4      	bne.n	8002944 <HAL_ETH_Init+0x84>
 800297a:	6878      	ldr	r0, [r7, #4]
 800297c:	f000 f958 	bl	8002c30 <ETH_MACDMAConfig>
 8002980:	6878      	ldr	r0, [r7, #4]
 8002982:	f000 f9ff 	bl	8002d84 <ETH_DMATxDescListInit>
 8002986:	6878      	ldr	r0, [r7, #4]
 8002988:	f000 fa55 	bl	8002e36 <ETH_DMARxDescListInit>
 800298c:	687b      	ldr	r3, [r7, #4]
 800298e:	685b      	ldr	r3, [r3, #4]
 8002990:	461a      	mov	r2, r3
 8002992:	2100      	movs	r1, #0
 8002994:	6878      	ldr	r0, [r7, #4]
 8002996:	f000 f9bd 	bl	8002d14 <ETH_MACAddressConfig>
 800299a:	687b      	ldr	r3, [r7, #4]
 800299c:	2200      	movs	r2, #0
 800299e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 80029a2:	687b      	ldr	r3, [r7, #4]
 80029a4:	2210      	movs	r2, #16
 80029a6:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 80029aa:	2300      	movs	r3, #0
 80029ac:	4618      	mov	r0, r3
 80029ae:	3710      	adds	r7, #16
 80029b0:	46bd      	mov	sp, r7
 80029b2:	bd80      	pop	{r7, pc}
 80029b4:	40023800 	.word	0x40023800
 80029b8:	40013800 	.word	0x40013800

080029bc <ETH_SetMACConfig>:
 80029bc:	b580      	push	{r7, lr}
 80029be:	b084      	sub	sp, #16
 80029c0:	af00      	add	r7, sp, #0
 80029c2:	6078      	str	r0, [r7, #4]
 80029c4:	6039      	str	r1, [r7, #0]
 80029c6:	687b      	ldr	r3, [r7, #4]
 80029c8:	681b      	ldr	r3, [r3, #0]
 80029ca:	681b      	ldr	r3, [r3, #0]
 80029cc:	60fb      	str	r3, [r7, #12]
 80029ce:	68fa      	ldr	r2, [r7, #12]
 80029d0:	4b51      	ldr	r3, [pc, #324]	; (8002b18 <ETH_SetMACConfig+0x15c>)
 80029d2:	4013      	ands	r3, r2
 80029d4:	60fb      	str	r3, [r7, #12]
 80029d6:	683b      	ldr	r3, [r7, #0]
 80029d8:	7c1b      	ldrb	r3, [r3, #16]
 80029da:	2b00      	cmp	r3, #0
 80029dc:	d102      	bne.n	80029e4 <ETH_SetMACConfig+0x28>
 80029de:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
 80029e2:	e000      	b.n	80029e6 <ETH_SetMACConfig+0x2a>
 80029e4:	2200      	movs	r2, #0
 80029e6:	683b      	ldr	r3, [r7, #0]
 80029e8:	7c5b      	ldrb	r3, [r3, #17]
 80029ea:	2b00      	cmp	r3, #0
 80029ec:	d102      	bne.n	80029f4 <ETH_SetMACConfig+0x38>
 80029ee:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 80029f2:	e000      	b.n	80029f6 <ETH_SetMACConfig+0x3a>
 80029f4:	2300      	movs	r3, #0
 80029f6:	431a      	orrs	r2, r3
 80029f8:	683b      	ldr	r3, [r7, #0]
 80029fa:	689b      	ldr	r3, [r3, #8]
 80029fc:	431a      	orrs	r2, r3
 80029fe:	683b      	ldr	r3, [r7, #0]
 8002a00:	7fdb      	ldrb	r3, [r3, #31]
 8002a02:	041b      	lsls	r3, r3, #16
 8002a04:	431a      	orrs	r2, r3
 8002a06:	683b      	ldr	r3, [r7, #0]
 8002a08:	695b      	ldr	r3, [r3, #20]
 8002a0a:	4313      	orrs	r3, r2
 8002a0c:	683a      	ldr	r2, [r7, #0]
 8002a0e:	7f92      	ldrb	r2, [r2, #30]
 8002a10:	2a00      	cmp	r2, #0
 8002a12:	d102      	bne.n	8002a1a <ETH_SetMACConfig+0x5e>
 8002a14:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8002a18:	e000      	b.n	8002a1c <ETH_SetMACConfig+0x60>
 8002a1a:	2200      	movs	r2, #0
 8002a1c:	431a      	orrs	r2, r3
 8002a1e:	683b      	ldr	r3, [r7, #0]
 8002a20:	7f1b      	ldrb	r3, [r3, #28]
 8002a22:	031b      	lsls	r3, r3, #12
 8002a24:	431a      	orrs	r2, r3
 8002a26:	683b      	ldr	r3, [r7, #0]
 8002a28:	699b      	ldr	r3, [r3, #24]
 8002a2a:	431a      	orrs	r2, r3
 8002a2c:	683b      	ldr	r3, [r7, #0]
 8002a2e:	791b      	ldrb	r3, [r3, #4]
 8002a30:	029b      	lsls	r3, r3, #10
 8002a32:	4313      	orrs	r3, r2
 8002a34:	683a      	ldr	r2, [r7, #0]
 8002a36:	f892 2020 	ldrb.w	r2, [r2, #32]
 8002a3a:	2a00      	cmp	r2, #0
 8002a3c:	d102      	bne.n	8002a44 <ETH_SetMACConfig+0x88>
 8002a3e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002a42:	e000      	b.n	8002a46 <ETH_SetMACConfig+0x8a>
 8002a44:	2200      	movs	r2, #0
 8002a46:	431a      	orrs	r2, r3
 8002a48:	683b      	ldr	r3, [r7, #0]
 8002a4a:	7bdb      	ldrb	r3, [r3, #15]
 8002a4c:	01db      	lsls	r3, r3, #7
 8002a4e:	431a      	orrs	r2, r3
 8002a50:	683b      	ldr	r3, [r7, #0]
 8002a52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a54:	431a      	orrs	r2, r3
 8002a56:	683b      	ldr	r3, [r7, #0]
 8002a58:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8002a5c:	011b      	lsls	r3, r3, #4
 8002a5e:	4313      	orrs	r3, r2
 8002a60:	68fa      	ldr	r2, [r7, #12]
 8002a62:	4313      	orrs	r3, r2
 8002a64:	60fb      	str	r3, [r7, #12]
 8002a66:	687b      	ldr	r3, [r7, #4]
 8002a68:	681b      	ldr	r3, [r3, #0]
 8002a6a:	68fa      	ldr	r2, [r7, #12]
 8002a6c:	601a      	str	r2, [r3, #0]
 8002a6e:	687b      	ldr	r3, [r7, #4]
 8002a70:	681b      	ldr	r3, [r3, #0]
 8002a72:	681b      	ldr	r3, [r3, #0]
 8002a74:	60fb      	str	r3, [r7, #12]
 8002a76:	2001      	movs	r0, #1
 8002a78:	f7ff fa70 	bl	8001f5c <HAL_Delay>
 8002a7c:	687b      	ldr	r3, [r7, #4]
 8002a7e:	681b      	ldr	r3, [r3, #0]
 8002a80:	68fa      	ldr	r2, [r7, #12]
 8002a82:	601a      	str	r2, [r3, #0]
 8002a84:	687b      	ldr	r3, [r7, #4]
 8002a86:	681b      	ldr	r3, [r3, #0]
 8002a88:	699b      	ldr	r3, [r3, #24]
 8002a8a:	60fb      	str	r3, [r7, #12]
 8002a8c:	68fa      	ldr	r2, [r7, #12]
 8002a8e:	f64f 7341 	movw	r3, #65345	; 0xff41
 8002a92:	4013      	ands	r3, r2
 8002a94:	60fb      	str	r3, [r7, #12]
 8002a96:	683b      	ldr	r3, [r7, #0]
 8002a98:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002a9a:	041b      	lsls	r3, r3, #16
 8002a9c:	683a      	ldr	r2, [r7, #0]
 8002a9e:	f892 204c 	ldrb.w	r2, [r2, #76]	; 0x4c
 8002aa2:	2a00      	cmp	r2, #0
 8002aa4:	d101      	bne.n	8002aaa <ETH_SetMACConfig+0xee>
 8002aa6:	2280      	movs	r2, #128	; 0x80
 8002aa8:	e000      	b.n	8002aac <ETH_SetMACConfig+0xf0>
 8002aaa:	2200      	movs	r2, #0
 8002aac:	431a      	orrs	r2, r3
 8002aae:	683b      	ldr	r3, [r7, #0]
 8002ab0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002ab2:	4313      	orrs	r3, r2
 8002ab4:	683a      	ldr	r2, [r7, #0]
 8002ab6:	f892 2055 	ldrb.w	r2, [r2, #85]	; 0x55
 8002aba:	2a01      	cmp	r2, #1
 8002abc:	d101      	bne.n	8002ac2 <ETH_SetMACConfig+0x106>
 8002abe:	2208      	movs	r2, #8
 8002ac0:	e000      	b.n	8002ac4 <ETH_SetMACConfig+0x108>
 8002ac2:	2200      	movs	r2, #0
 8002ac4:	4313      	orrs	r3, r2
 8002ac6:	683a      	ldr	r2, [r7, #0]
 8002ac8:	f892 2056 	ldrb.w	r2, [r2, #86]	; 0x56
 8002acc:	2a01      	cmp	r2, #1
 8002ace:	d101      	bne.n	8002ad4 <ETH_SetMACConfig+0x118>
 8002ad0:	2204      	movs	r2, #4
 8002ad2:	e000      	b.n	8002ad6 <ETH_SetMACConfig+0x11a>
 8002ad4:	2200      	movs	r2, #0
 8002ad6:	4313      	orrs	r3, r2
 8002ad8:	683a      	ldr	r2, [r7, #0]
 8002ada:	f892 2054 	ldrb.w	r2, [r2, #84]	; 0x54
 8002ade:	2a01      	cmp	r2, #1
 8002ae0:	d101      	bne.n	8002ae6 <ETH_SetMACConfig+0x12a>
 8002ae2:	2202      	movs	r2, #2
 8002ae4:	e000      	b.n	8002ae8 <ETH_SetMACConfig+0x12c>
 8002ae6:	2200      	movs	r2, #0
 8002ae8:	4313      	orrs	r3, r2
 8002aea:	68fa      	ldr	r2, [r7, #12]
 8002aec:	4313      	orrs	r3, r2
 8002aee:	60fb      	str	r3, [r7, #12]
 8002af0:	687b      	ldr	r3, [r7, #4]
 8002af2:	681b      	ldr	r3, [r3, #0]
 8002af4:	68fa      	ldr	r2, [r7, #12]
 8002af6:	619a      	str	r2, [r3, #24]
 8002af8:	687b      	ldr	r3, [r7, #4]
 8002afa:	681b      	ldr	r3, [r3, #0]
 8002afc:	699b      	ldr	r3, [r3, #24]
 8002afe:	60fb      	str	r3, [r7, #12]
 8002b00:	2001      	movs	r0, #1
 8002b02:	f7ff fa2b 	bl	8001f5c <HAL_Delay>
 8002b06:	687b      	ldr	r3, [r7, #4]
 8002b08:	681b      	ldr	r3, [r3, #0]
 8002b0a:	68fa      	ldr	r2, [r7, #12]
 8002b0c:	619a      	str	r2, [r3, #24]
 8002b0e:	bf00      	nop
 8002b10:	3710      	adds	r7, #16
 8002b12:	46bd      	mov	sp, r7
 8002b14:	bd80      	pop	{r7, pc}
 8002b16:	bf00      	nop
 8002b18:	ff20810f 	.word	0xff20810f

08002b1c <ETH_SetDMAConfig>:
 8002b1c:	b580      	push	{r7, lr}
 8002b1e:	b084      	sub	sp, #16
 8002b20:	af00      	add	r7, sp, #0
 8002b22:	6078      	str	r0, [r7, #4]
 8002b24:	6039      	str	r1, [r7, #0]
 8002b26:	687b      	ldr	r3, [r7, #4]
 8002b28:	681b      	ldr	r3, [r3, #0]
 8002b2a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8002b2e:	699b      	ldr	r3, [r3, #24]
 8002b30:	60fb      	str	r3, [r7, #12]
 8002b32:	68fa      	ldr	r2, [r7, #12]
 8002b34:	4b3d      	ldr	r3, [pc, #244]	; (8002c2c <ETH_SetDMAConfig+0x110>)
 8002b36:	4013      	ands	r3, r2
 8002b38:	60fb      	str	r3, [r7, #12]
 8002b3a:	683b      	ldr	r3, [r7, #0]
 8002b3c:	7b1b      	ldrb	r3, [r3, #12]
 8002b3e:	2b00      	cmp	r3, #0
 8002b40:	d102      	bne.n	8002b48 <ETH_SetDMAConfig+0x2c>
 8002b42:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8002b46:	e000      	b.n	8002b4a <ETH_SetDMAConfig+0x2e>
 8002b48:	2200      	movs	r2, #0
 8002b4a:	683b      	ldr	r3, [r7, #0]
 8002b4c:	7b5b      	ldrb	r3, [r3, #13]
 8002b4e:	065b      	lsls	r3, r3, #25
 8002b50:	4313      	orrs	r3, r2
 8002b52:	683a      	ldr	r2, [r7, #0]
 8002b54:	7f52      	ldrb	r2, [r2, #29]
 8002b56:	2a00      	cmp	r2, #0
 8002b58:	d102      	bne.n	8002b60 <ETH_SetDMAConfig+0x44>
 8002b5a:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 8002b5e:	e000      	b.n	8002b62 <ETH_SetDMAConfig+0x46>
 8002b60:	2200      	movs	r2, #0
 8002b62:	431a      	orrs	r2, r3
 8002b64:	683b      	ldr	r3, [r7, #0]
 8002b66:	7b9b      	ldrb	r3, [r3, #14]
 8002b68:	055b      	lsls	r3, r3, #21
 8002b6a:	431a      	orrs	r2, r3
 8002b6c:	683b      	ldr	r3, [r7, #0]
 8002b6e:	695b      	ldr	r3, [r3, #20]
 8002b70:	431a      	orrs	r2, r3
 8002b72:	683b      	ldr	r3, [r7, #0]
 8002b74:	7f1b      	ldrb	r3, [r3, #28]
 8002b76:	01db      	lsls	r3, r3, #7
 8002b78:	431a      	orrs	r2, r3
 8002b7a:	683b      	ldr	r3, [r7, #0]
 8002b7c:	7f9b      	ldrb	r3, [r3, #30]
 8002b7e:	019b      	lsls	r3, r3, #6
 8002b80:	431a      	orrs	r2, r3
 8002b82:	683b      	ldr	r3, [r7, #0]
 8002b84:	6a1b      	ldr	r3, [r3, #32]
 8002b86:	431a      	orrs	r2, r3
 8002b88:	683b      	ldr	r3, [r7, #0]
 8002b8a:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 8002b8e:	009b      	lsls	r3, r3, #2
 8002b90:	4313      	orrs	r3, r2
 8002b92:	68fa      	ldr	r2, [r7, #12]
 8002b94:	4313      	orrs	r3, r2
 8002b96:	60fb      	str	r3, [r7, #12]
 8002b98:	687b      	ldr	r3, [r7, #4]
 8002b9a:	681b      	ldr	r3, [r3, #0]
 8002b9c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8002ba0:	461a      	mov	r2, r3
 8002ba2:	68fb      	ldr	r3, [r7, #12]
 8002ba4:	6193      	str	r3, [r2, #24]
 8002ba6:	687b      	ldr	r3, [r7, #4]
 8002ba8:	681b      	ldr	r3, [r3, #0]
 8002baa:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8002bae:	699b      	ldr	r3, [r3, #24]
 8002bb0:	60fb      	str	r3, [r7, #12]
 8002bb2:	2001      	movs	r0, #1
 8002bb4:	f7ff f9d2 	bl	8001f5c <HAL_Delay>
 8002bb8:	687b      	ldr	r3, [r7, #4]
 8002bba:	681b      	ldr	r3, [r3, #0]
 8002bbc:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8002bc0:	461a      	mov	r2, r3
 8002bc2:	68fb      	ldr	r3, [r7, #12]
 8002bc4:	6193      	str	r3, [r2, #24]
 8002bc6:	683b      	ldr	r3, [r7, #0]
 8002bc8:	791b      	ldrb	r3, [r3, #4]
 8002bca:	065a      	lsls	r2, r3, #25
 8002bcc:	683b      	ldr	r3, [r7, #0]
 8002bce:	689b      	ldr	r3, [r3, #8]
 8002bd0:	431a      	orrs	r2, r3
 8002bd2:	683b      	ldr	r3, [r7, #0]
 8002bd4:	699b      	ldr	r3, [r3, #24]
 8002bd6:	431a      	orrs	r2, r3
 8002bd8:	683b      	ldr	r3, [r7, #0]
 8002bda:	691b      	ldr	r3, [r3, #16]
 8002bdc:	431a      	orrs	r2, r3
 8002bde:	683b      	ldr	r3, [r7, #0]
 8002be0:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 8002be4:	01db      	lsls	r3, r3, #7
 8002be6:	431a      	orrs	r2, r3
 8002be8:	683b      	ldr	r3, [r7, #0]
 8002bea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002bec:	009b      	lsls	r3, r3, #2
 8002bee:	431a      	orrs	r2, r3
 8002bf0:	683b      	ldr	r3, [r7, #0]
 8002bf2:	681b      	ldr	r3, [r3, #0]
 8002bf4:	4313      	orrs	r3, r2
 8002bf6:	687a      	ldr	r2, [r7, #4]
 8002bf8:	6812      	ldr	r2, [r2, #0]
 8002bfa:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002bfe:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8002c02:	6013      	str	r3, [r2, #0]
 8002c04:	687b      	ldr	r3, [r7, #4]
 8002c06:	681b      	ldr	r3, [r3, #0]
 8002c08:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8002c0c:	681b      	ldr	r3, [r3, #0]
 8002c0e:	60fb      	str	r3, [r7, #12]
 8002c10:	2001      	movs	r0, #1
 8002c12:	f7ff f9a3 	bl	8001f5c <HAL_Delay>
 8002c16:	687b      	ldr	r3, [r7, #4]
 8002c18:	681b      	ldr	r3, [r3, #0]
 8002c1a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8002c1e:	461a      	mov	r2, r3
 8002c20:	68fb      	ldr	r3, [r7, #12]
 8002c22:	6013      	str	r3, [r2, #0]
 8002c24:	bf00      	nop
 8002c26:	3710      	adds	r7, #16
 8002c28:	46bd      	mov	sp, r7
 8002c2a:	bd80      	pop	{r7, pc}
 8002c2c:	f8de3f23 	.word	0xf8de3f23

08002c30 <ETH_MACDMAConfig>:
 8002c30:	b580      	push	{r7, lr}
 8002c32:	b0a6      	sub	sp, #152	; 0x98
 8002c34:	af00      	add	r7, sp, #0
 8002c36:	6078      	str	r0, [r7, #4]
 8002c38:	2301      	movs	r3, #1
 8002c3a:	f887 3044 	strb.w	r3, [r7, #68]	; 0x44
 8002c3e:	2301      	movs	r3, #1
 8002c40:	f887 3045 	strb.w	r3, [r7, #69]	; 0x45
 8002c44:	2300      	movs	r3, #0
 8002c46:	63fb      	str	r3, [r7, #60]	; 0x3c
 8002c48:	2300      	movs	r3, #0
 8002c4a:	f887 3053 	strb.w	r3, [r7, #83]	; 0x53
 8002c4e:	2301      	movs	r3, #1
 8002c50:	f887 3052 	strb.w	r3, [r7, #82]	; 0x52
 8002c54:	2300      	movs	r3, #0
 8002c56:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 8002c5a:	2301      	movs	r3, #1
 8002c5c:	f887 3038 	strb.w	r3, [r7, #56]	; 0x38
 8002c60:	2300      	movs	r3, #0
 8002c62:	f887 3054 	strb.w	r3, [r7, #84]	; 0x54
 8002c66:	2300      	movs	r3, #0
 8002c68:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8002c6c:	2300      	movs	r3, #0
 8002c6e:	65bb      	str	r3, [r7, #88]	; 0x58
 8002c70:	2300      	movs	r3, #0
 8002c72:	f887 305c 	strb.w	r3, [r7, #92]	; 0x5c
 8002c76:	2300      	movs	r3, #0
 8002c78:	67fb      	str	r3, [r7, #124]	; 0x7c
 8002c7a:	2300      	movs	r3, #0
 8002c7c:	f887 3080 	strb.w	r3, [r7, #128]	; 0x80
 8002c80:	2300      	movs	r3, #0
 8002c82:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8002c86:	2300      	movs	r3, #0
 8002c88:	f887 308a 	strb.w	r3, [r7, #138]	; 0x8a
 8002c8c:	2300      	movs	r3, #0
 8002c8e:	f887 3088 	strb.w	r3, [r7, #136]	; 0x88
 8002c92:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8002c96:	64bb      	str	r3, [r7, #72]	; 0x48
 8002c98:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8002c9c:	64fb      	str	r3, [r7, #76]	; 0x4c
 8002c9e:	2300      	movs	r3, #0
 8002ca0:	f887 3089 	strb.w	r3, [r7, #137]	; 0x89
 8002ca4:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8002ca8:	4619      	mov	r1, r3
 8002caa:	6878      	ldr	r0, [r7, #4]
 8002cac:	f7ff fe86 	bl	80029bc <ETH_SetMACConfig>
 8002cb0:	2301      	movs	r3, #1
 8002cb2:	753b      	strb	r3, [r7, #20]
 8002cb4:	2301      	movs	r3, #1
 8002cb6:	757b      	strb	r3, [r7, #21]
 8002cb8:	2301      	movs	r3, #1
 8002cba:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
 8002cbe:	2301      	movs	r3, #1
 8002cc0:	75bb      	strb	r3, [r7, #22]
 8002cc2:	2300      	movs	r3, #0
 8002cc4:	61fb      	str	r3, [r7, #28]
 8002cc6:	2300      	movs	r3, #0
 8002cc8:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
 8002ccc:	2300      	movs	r3, #0
 8002cce:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 8002cd2:	2300      	movs	r3, #0
 8002cd4:	62bb      	str	r3, [r7, #40]	; 0x28
 8002cd6:	2301      	movs	r3, #1
 8002cd8:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
 8002cdc:	2301      	movs	r3, #1
 8002cde:	733b      	strb	r3, [r7, #12]
 8002ce0:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8002ce4:	613b      	str	r3, [r7, #16]
 8002ce6:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8002cea:	623b      	str	r3, [r7, #32]
 8002cec:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002cf0:	61bb      	str	r3, [r7, #24]
 8002cf2:	2301      	movs	r3, #1
 8002cf4:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
 8002cf8:	2300      	movs	r3, #0
 8002cfa:	633b      	str	r3, [r7, #48]	; 0x30
 8002cfc:	2300      	movs	r3, #0
 8002cfe:	60bb      	str	r3, [r7, #8]
 8002d00:	f107 0308 	add.w	r3, r7, #8
 8002d04:	4619      	mov	r1, r3
 8002d06:	6878      	ldr	r0, [r7, #4]
 8002d08:	f7ff ff08 	bl	8002b1c <ETH_SetDMAConfig>
 8002d0c:	bf00      	nop
 8002d0e:	3798      	adds	r7, #152	; 0x98
 8002d10:	46bd      	mov	sp, r7
 8002d12:	bd80      	pop	{r7, pc}

08002d14 <ETH_MACAddressConfig>:
 8002d14:	b480      	push	{r7}
 8002d16:	b087      	sub	sp, #28
 8002d18:	af00      	add	r7, sp, #0
 8002d1a:	60f8      	str	r0, [r7, #12]
 8002d1c:	60b9      	str	r1, [r7, #8]
 8002d1e:	607a      	str	r2, [r7, #4]
 8002d20:	687b      	ldr	r3, [r7, #4]
 8002d22:	3305      	adds	r3, #5
 8002d24:	781b      	ldrb	r3, [r3, #0]
 8002d26:	021b      	lsls	r3, r3, #8
 8002d28:	687a      	ldr	r2, [r7, #4]
 8002d2a:	3204      	adds	r2, #4
 8002d2c:	7812      	ldrb	r2, [r2, #0]
 8002d2e:	4313      	orrs	r3, r2
 8002d30:	617b      	str	r3, [r7, #20]
 8002d32:	68ba      	ldr	r2, [r7, #8]
 8002d34:	4b11      	ldr	r3, [pc, #68]	; (8002d7c <ETH_MACAddressConfig+0x68>)
 8002d36:	4413      	add	r3, r2
 8002d38:	461a      	mov	r2, r3
 8002d3a:	697b      	ldr	r3, [r7, #20]
 8002d3c:	6013      	str	r3, [r2, #0]
 8002d3e:	687b      	ldr	r3, [r7, #4]
 8002d40:	3303      	adds	r3, #3
 8002d42:	781b      	ldrb	r3, [r3, #0]
 8002d44:	061a      	lsls	r2, r3, #24
 8002d46:	687b      	ldr	r3, [r7, #4]
 8002d48:	3302      	adds	r3, #2
 8002d4a:	781b      	ldrb	r3, [r3, #0]
 8002d4c:	041b      	lsls	r3, r3, #16
 8002d4e:	431a      	orrs	r2, r3
 8002d50:	687b      	ldr	r3, [r7, #4]
 8002d52:	3301      	adds	r3, #1
 8002d54:	781b      	ldrb	r3, [r3, #0]
 8002d56:	021b      	lsls	r3, r3, #8
 8002d58:	4313      	orrs	r3, r2
 8002d5a:	687a      	ldr	r2, [r7, #4]
 8002d5c:	7812      	ldrb	r2, [r2, #0]
 8002d5e:	4313      	orrs	r3, r2
 8002d60:	617b      	str	r3, [r7, #20]
 8002d62:	68ba      	ldr	r2, [r7, #8]
 8002d64:	4b06      	ldr	r3, [pc, #24]	; (8002d80 <ETH_MACAddressConfig+0x6c>)
 8002d66:	4413      	add	r3, r2
 8002d68:	461a      	mov	r2, r3
 8002d6a:	697b      	ldr	r3, [r7, #20]
 8002d6c:	6013      	str	r3, [r2, #0]
 8002d6e:	bf00      	nop
 8002d70:	371c      	adds	r7, #28
 8002d72:	46bd      	mov	sp, r7
 8002d74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d78:	4770      	bx	lr
 8002d7a:	bf00      	nop
 8002d7c:	40028040 	.word	0x40028040
 8002d80:	40028044 	.word	0x40028044

08002d84 <ETH_DMATxDescListInit>:
 8002d84:	b480      	push	{r7}
 8002d86:	b085      	sub	sp, #20
 8002d88:	af00      	add	r7, sp, #0
 8002d8a:	6078      	str	r0, [r7, #4]
 8002d8c:	2300      	movs	r3, #0
 8002d8e:	60fb      	str	r3, [r7, #12]
 8002d90:	e03e      	b.n	8002e10 <ETH_DMATxDescListInit+0x8c>
 8002d92:	687b      	ldr	r3, [r7, #4]
 8002d94:	68d9      	ldr	r1, [r3, #12]
 8002d96:	68fa      	ldr	r2, [r7, #12]
 8002d98:	4613      	mov	r3, r2
 8002d9a:	009b      	lsls	r3, r3, #2
 8002d9c:	4413      	add	r3, r2
 8002d9e:	00db      	lsls	r3, r3, #3
 8002da0:	440b      	add	r3, r1
 8002da2:	60bb      	str	r3, [r7, #8]
 8002da4:	68bb      	ldr	r3, [r7, #8]
 8002da6:	2200      	movs	r2, #0
 8002da8:	601a      	str	r2, [r3, #0]
 8002daa:	68bb      	ldr	r3, [r7, #8]
 8002dac:	2200      	movs	r2, #0
 8002dae:	605a      	str	r2, [r3, #4]
 8002db0:	68bb      	ldr	r3, [r7, #8]
 8002db2:	2200      	movs	r2, #0
 8002db4:	609a      	str	r2, [r3, #8]
 8002db6:	68bb      	ldr	r3, [r7, #8]
 8002db8:	2200      	movs	r2, #0
 8002dba:	60da      	str	r2, [r3, #12]
 8002dbc:	68b9      	ldr	r1, [r7, #8]
 8002dbe:	687b      	ldr	r3, [r7, #4]
 8002dc0:	68fa      	ldr	r2, [r7, #12]
 8002dc2:	3206      	adds	r2, #6
 8002dc4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002dc8:	68bb      	ldr	r3, [r7, #8]
 8002dca:	681b      	ldr	r3, [r3, #0]
 8002dcc:	f443 1280 	orr.w	r2, r3, #1048576	; 0x100000
 8002dd0:	68bb      	ldr	r3, [r7, #8]
 8002dd2:	601a      	str	r2, [r3, #0]
 8002dd4:	68fb      	ldr	r3, [r7, #12]
 8002dd6:	2b02      	cmp	r3, #2
 8002dd8:	d80c      	bhi.n	8002df4 <ETH_DMATxDescListInit+0x70>
 8002dda:	687b      	ldr	r3, [r7, #4]
 8002ddc:	68d9      	ldr	r1, [r3, #12]
 8002dde:	68fb      	ldr	r3, [r7, #12]
 8002de0:	1c5a      	adds	r2, r3, #1
 8002de2:	4613      	mov	r3, r2
 8002de4:	009b      	lsls	r3, r3, #2
 8002de6:	4413      	add	r3, r2
 8002de8:	00db      	lsls	r3, r3, #3
 8002dea:	440b      	add	r3, r1
 8002dec:	461a      	mov	r2, r3
 8002dee:	68bb      	ldr	r3, [r7, #8]
 8002df0:	60da      	str	r2, [r3, #12]
 8002df2:	e004      	b.n	8002dfe <ETH_DMATxDescListInit+0x7a>
 8002df4:	687b      	ldr	r3, [r7, #4]
 8002df6:	68db      	ldr	r3, [r3, #12]
 8002df8:	461a      	mov	r2, r3
 8002dfa:	68bb      	ldr	r3, [r7, #8]
 8002dfc:	60da      	str	r2, [r3, #12]
 8002dfe:	68bb      	ldr	r3, [r7, #8]
 8002e00:	681b      	ldr	r3, [r3, #0]
 8002e02:	f443 0240 	orr.w	r2, r3, #12582912	; 0xc00000
 8002e06:	68bb      	ldr	r3, [r7, #8]
 8002e08:	601a      	str	r2, [r3, #0]
 8002e0a:	68fb      	ldr	r3, [r7, #12]
 8002e0c:	3301      	adds	r3, #1
 8002e0e:	60fb      	str	r3, [r7, #12]
 8002e10:	68fb      	ldr	r3, [r7, #12]
 8002e12:	2b03      	cmp	r3, #3
 8002e14:	d9bd      	bls.n	8002d92 <ETH_DMATxDescListInit+0xe>
 8002e16:	687b      	ldr	r3, [r7, #4]
 8002e18:	2200      	movs	r2, #0
 8002e1a:	629a      	str	r2, [r3, #40]	; 0x28
 8002e1c:	687b      	ldr	r3, [r7, #4]
 8002e1e:	68da      	ldr	r2, [r3, #12]
 8002e20:	687b      	ldr	r3, [r7, #4]
 8002e22:	681b      	ldr	r3, [r3, #0]
 8002e24:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8002e28:	611a      	str	r2, [r3, #16]
 8002e2a:	bf00      	nop
 8002e2c:	3714      	adds	r7, #20
 8002e2e:	46bd      	mov	sp, r7
 8002e30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e34:	4770      	bx	lr

08002e36 <ETH_DMARxDescListInit>:
 8002e36:	b480      	push	{r7}
 8002e38:	b085      	sub	sp, #20
 8002e3a:	af00      	add	r7, sp, #0
 8002e3c:	6078      	str	r0, [r7, #4]
 8002e3e:	2300      	movs	r3, #0
 8002e40:	60fb      	str	r3, [r7, #12]
 8002e42:	e046      	b.n	8002ed2 <ETH_DMARxDescListInit+0x9c>
 8002e44:	687b      	ldr	r3, [r7, #4]
 8002e46:	6919      	ldr	r1, [r3, #16]
 8002e48:	68fa      	ldr	r2, [r7, #12]
 8002e4a:	4613      	mov	r3, r2
 8002e4c:	009b      	lsls	r3, r3, #2
 8002e4e:	4413      	add	r3, r2
 8002e50:	00db      	lsls	r3, r3, #3
 8002e52:	440b      	add	r3, r1
 8002e54:	60bb      	str	r3, [r7, #8]
 8002e56:	68bb      	ldr	r3, [r7, #8]
 8002e58:	2200      	movs	r2, #0
 8002e5a:	601a      	str	r2, [r3, #0]
 8002e5c:	68bb      	ldr	r3, [r7, #8]
 8002e5e:	2200      	movs	r2, #0
 8002e60:	605a      	str	r2, [r3, #4]
 8002e62:	68bb      	ldr	r3, [r7, #8]
 8002e64:	2200      	movs	r2, #0
 8002e66:	609a      	str	r2, [r3, #8]
 8002e68:	68bb      	ldr	r3, [r7, #8]
 8002e6a:	2200      	movs	r2, #0
 8002e6c:	60da      	str	r2, [r3, #12]
 8002e6e:	68bb      	ldr	r3, [r7, #8]
 8002e70:	2200      	movs	r2, #0
 8002e72:	621a      	str	r2, [r3, #32]
 8002e74:	68bb      	ldr	r3, [r7, #8]
 8002e76:	2200      	movs	r2, #0
 8002e78:	625a      	str	r2, [r3, #36]	; 0x24
 8002e7a:	68bb      	ldr	r3, [r7, #8]
 8002e7c:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8002e80:	601a      	str	r2, [r3, #0]
 8002e82:	68bb      	ldr	r3, [r7, #8]
 8002e84:	f244 52f4 	movw	r2, #17908	; 0x45f4
 8002e88:	605a      	str	r2, [r3, #4]
 8002e8a:	68bb      	ldr	r3, [r7, #8]
 8002e8c:	685b      	ldr	r3, [r3, #4]
 8002e8e:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 8002e92:	68bb      	ldr	r3, [r7, #8]
 8002e94:	605a      	str	r2, [r3, #4]
 8002e96:	68b9      	ldr	r1, [r7, #8]
 8002e98:	687b      	ldr	r3, [r7, #4]
 8002e9a:	68fa      	ldr	r2, [r7, #12]
 8002e9c:	3212      	adds	r2, #18
 8002e9e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002ea2:	68fb      	ldr	r3, [r7, #12]
 8002ea4:	2b02      	cmp	r3, #2
 8002ea6:	d80c      	bhi.n	8002ec2 <ETH_DMARxDescListInit+0x8c>
 8002ea8:	687b      	ldr	r3, [r7, #4]
 8002eaa:	6919      	ldr	r1, [r3, #16]
 8002eac:	68fb      	ldr	r3, [r7, #12]
 8002eae:	1c5a      	adds	r2, r3, #1
 8002eb0:	4613      	mov	r3, r2
 8002eb2:	009b      	lsls	r3, r3, #2
 8002eb4:	4413      	add	r3, r2
 8002eb6:	00db      	lsls	r3, r3, #3
 8002eb8:	440b      	add	r3, r1
 8002eba:	461a      	mov	r2, r3
 8002ebc:	68bb      	ldr	r3, [r7, #8]
 8002ebe:	60da      	str	r2, [r3, #12]
 8002ec0:	e004      	b.n	8002ecc <ETH_DMARxDescListInit+0x96>
 8002ec2:	687b      	ldr	r3, [r7, #4]
 8002ec4:	691b      	ldr	r3, [r3, #16]
 8002ec6:	461a      	mov	r2, r3
 8002ec8:	68bb      	ldr	r3, [r7, #8]
 8002eca:	60da      	str	r2, [r3, #12]
 8002ecc:	68fb      	ldr	r3, [r7, #12]
 8002ece:	3301      	adds	r3, #1
 8002ed0:	60fb      	str	r3, [r7, #12]
 8002ed2:	68fb      	ldr	r3, [r7, #12]
 8002ed4:	2b03      	cmp	r3, #3
 8002ed6:	d9b5      	bls.n	8002e44 <ETH_DMARxDescListInit+0xe>
 8002ed8:	687b      	ldr	r3, [r7, #4]
 8002eda:	2200      	movs	r2, #0
 8002edc:	65da      	str	r2, [r3, #92]	; 0x5c
 8002ede:	687b      	ldr	r3, [r7, #4]
 8002ee0:	2200      	movs	r2, #0
 8002ee2:	661a      	str	r2, [r3, #96]	; 0x60
 8002ee4:	687b      	ldr	r3, [r7, #4]
 8002ee6:	2200      	movs	r2, #0
 8002ee8:	669a      	str	r2, [r3, #104]	; 0x68
 8002eea:	687b      	ldr	r3, [r7, #4]
 8002eec:	2200      	movs	r2, #0
 8002eee:	66da      	str	r2, [r3, #108]	; 0x6c
 8002ef0:	687b      	ldr	r3, [r7, #4]
 8002ef2:	2200      	movs	r2, #0
 8002ef4:	659a      	str	r2, [r3, #88]	; 0x58
 8002ef6:	687b      	ldr	r3, [r7, #4]
 8002ef8:	691a      	ldr	r2, [r3, #16]
 8002efa:	687b      	ldr	r3, [r7, #4]
 8002efc:	681b      	ldr	r3, [r3, #0]
 8002efe:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8002f02:	60da      	str	r2, [r3, #12]
 8002f04:	bf00      	nop
 8002f06:	3714      	adds	r7, #20
 8002f08:	46bd      	mov	sp, r7
 8002f0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f0e:	4770      	bx	lr

08002f10 <HAL_GPIO_Init>:
 8002f10:	b480      	push	{r7}
 8002f12:	b089      	sub	sp, #36	; 0x24
 8002f14:	af00      	add	r7, sp, #0
 8002f16:	6078      	str	r0, [r7, #4]
 8002f18:	6039      	str	r1, [r7, #0]
 8002f1a:	2300      	movs	r3, #0
 8002f1c:	617b      	str	r3, [r7, #20]
 8002f1e:	2300      	movs	r3, #0
 8002f20:	613b      	str	r3, [r7, #16]
 8002f22:	2300      	movs	r3, #0
 8002f24:	61bb      	str	r3, [r7, #24]
 8002f26:	2300      	movs	r3, #0
 8002f28:	61fb      	str	r3, [r7, #28]
 8002f2a:	e177      	b.n	800321c <HAL_GPIO_Init+0x30c>
 8002f2c:	2201      	movs	r2, #1
 8002f2e:	69fb      	ldr	r3, [r7, #28]
 8002f30:	fa02 f303 	lsl.w	r3, r2, r3
 8002f34:	617b      	str	r3, [r7, #20]
 8002f36:	683b      	ldr	r3, [r7, #0]
 8002f38:	681b      	ldr	r3, [r3, #0]
 8002f3a:	697a      	ldr	r2, [r7, #20]
 8002f3c:	4013      	ands	r3, r2
 8002f3e:	613b      	str	r3, [r7, #16]
 8002f40:	693a      	ldr	r2, [r7, #16]
 8002f42:	697b      	ldr	r3, [r7, #20]
 8002f44:	429a      	cmp	r2, r3
 8002f46:	f040 8166 	bne.w	8003216 <HAL_GPIO_Init+0x306>
 8002f4a:	683b      	ldr	r3, [r7, #0]
 8002f4c:	685b      	ldr	r3, [r3, #4]
 8002f4e:	f003 0303 	and.w	r3, r3, #3
 8002f52:	2b01      	cmp	r3, #1
 8002f54:	d005      	beq.n	8002f62 <HAL_GPIO_Init+0x52>
 8002f56:	683b      	ldr	r3, [r7, #0]
 8002f58:	685b      	ldr	r3, [r3, #4]
 8002f5a:	f003 0303 	and.w	r3, r3, #3
 8002f5e:	2b02      	cmp	r3, #2
 8002f60:	d130      	bne.n	8002fc4 <HAL_GPIO_Init+0xb4>
 8002f62:	687b      	ldr	r3, [r7, #4]
 8002f64:	689b      	ldr	r3, [r3, #8]
 8002f66:	61bb      	str	r3, [r7, #24]
 8002f68:	69fb      	ldr	r3, [r7, #28]
 8002f6a:	005b      	lsls	r3, r3, #1
 8002f6c:	2203      	movs	r2, #3
 8002f6e:	fa02 f303 	lsl.w	r3, r2, r3
 8002f72:	43db      	mvns	r3, r3
 8002f74:	69ba      	ldr	r2, [r7, #24]
 8002f76:	4013      	ands	r3, r2
 8002f78:	61bb      	str	r3, [r7, #24]
 8002f7a:	683b      	ldr	r3, [r7, #0]
 8002f7c:	68da      	ldr	r2, [r3, #12]
 8002f7e:	69fb      	ldr	r3, [r7, #28]
 8002f80:	005b      	lsls	r3, r3, #1
 8002f82:	fa02 f303 	lsl.w	r3, r2, r3
 8002f86:	69ba      	ldr	r2, [r7, #24]
 8002f88:	4313      	orrs	r3, r2
 8002f8a:	61bb      	str	r3, [r7, #24]
 8002f8c:	687b      	ldr	r3, [r7, #4]
 8002f8e:	69ba      	ldr	r2, [r7, #24]
 8002f90:	609a      	str	r2, [r3, #8]
 8002f92:	687b      	ldr	r3, [r7, #4]
 8002f94:	685b      	ldr	r3, [r3, #4]
 8002f96:	61bb      	str	r3, [r7, #24]
 8002f98:	2201      	movs	r2, #1
 8002f9a:	69fb      	ldr	r3, [r7, #28]
 8002f9c:	fa02 f303 	lsl.w	r3, r2, r3
 8002fa0:	43db      	mvns	r3, r3
 8002fa2:	69ba      	ldr	r2, [r7, #24]
 8002fa4:	4013      	ands	r3, r2
 8002fa6:	61bb      	str	r3, [r7, #24]
 8002fa8:	683b      	ldr	r3, [r7, #0]
 8002faa:	685b      	ldr	r3, [r3, #4]
 8002fac:	091b      	lsrs	r3, r3, #4
 8002fae:	f003 0201 	and.w	r2, r3, #1
 8002fb2:	69fb      	ldr	r3, [r7, #28]
 8002fb4:	fa02 f303 	lsl.w	r3, r2, r3
 8002fb8:	69ba      	ldr	r2, [r7, #24]
 8002fba:	4313      	orrs	r3, r2
 8002fbc:	61bb      	str	r3, [r7, #24]
 8002fbe:	687b      	ldr	r3, [r7, #4]
 8002fc0:	69ba      	ldr	r2, [r7, #24]
 8002fc2:	605a      	str	r2, [r3, #4]
 8002fc4:	683b      	ldr	r3, [r7, #0]
 8002fc6:	685b      	ldr	r3, [r3, #4]
 8002fc8:	f003 0303 	and.w	r3, r3, #3
 8002fcc:	2b03      	cmp	r3, #3
 8002fce:	d017      	beq.n	8003000 <HAL_GPIO_Init+0xf0>
 8002fd0:	687b      	ldr	r3, [r7, #4]
 8002fd2:	68db      	ldr	r3, [r3, #12]
 8002fd4:	61bb      	str	r3, [r7, #24]
 8002fd6:	69fb      	ldr	r3, [r7, #28]
 8002fd8:	005b      	lsls	r3, r3, #1
 8002fda:	2203      	movs	r2, #3
 8002fdc:	fa02 f303 	lsl.w	r3, r2, r3
 8002fe0:	43db      	mvns	r3, r3
 8002fe2:	69ba      	ldr	r2, [r7, #24]
 8002fe4:	4013      	ands	r3, r2
 8002fe6:	61bb      	str	r3, [r7, #24]
 8002fe8:	683b      	ldr	r3, [r7, #0]
 8002fea:	689a      	ldr	r2, [r3, #8]
 8002fec:	69fb      	ldr	r3, [r7, #28]
 8002fee:	005b      	lsls	r3, r3, #1
 8002ff0:	fa02 f303 	lsl.w	r3, r2, r3
 8002ff4:	69ba      	ldr	r2, [r7, #24]
 8002ff6:	4313      	orrs	r3, r2
 8002ff8:	61bb      	str	r3, [r7, #24]
 8002ffa:	687b      	ldr	r3, [r7, #4]
 8002ffc:	69ba      	ldr	r2, [r7, #24]
 8002ffe:	60da      	str	r2, [r3, #12]
 8003000:	683b      	ldr	r3, [r7, #0]
 8003002:	685b      	ldr	r3, [r3, #4]
 8003004:	f003 0303 	and.w	r3, r3, #3
 8003008:	2b02      	cmp	r3, #2
 800300a:	d123      	bne.n	8003054 <HAL_GPIO_Init+0x144>
 800300c:	69fb      	ldr	r3, [r7, #28]
 800300e:	08da      	lsrs	r2, r3, #3
 8003010:	687b      	ldr	r3, [r7, #4]
 8003012:	3208      	adds	r2, #8
 8003014:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003018:	61bb      	str	r3, [r7, #24]
 800301a:	69fb      	ldr	r3, [r7, #28]
 800301c:	f003 0307 	and.w	r3, r3, #7
 8003020:	009b      	lsls	r3, r3, #2
 8003022:	220f      	movs	r2, #15
 8003024:	fa02 f303 	lsl.w	r3, r2, r3
 8003028:	43db      	mvns	r3, r3
 800302a:	69ba      	ldr	r2, [r7, #24]
 800302c:	4013      	ands	r3, r2
 800302e:	61bb      	str	r3, [r7, #24]
 8003030:	683b      	ldr	r3, [r7, #0]
 8003032:	691a      	ldr	r2, [r3, #16]
 8003034:	69fb      	ldr	r3, [r7, #28]
 8003036:	f003 0307 	and.w	r3, r3, #7
 800303a:	009b      	lsls	r3, r3, #2
 800303c:	fa02 f303 	lsl.w	r3, r2, r3
 8003040:	69ba      	ldr	r2, [r7, #24]
 8003042:	4313      	orrs	r3, r2
 8003044:	61bb      	str	r3, [r7, #24]
 8003046:	69fb      	ldr	r3, [r7, #28]
 8003048:	08da      	lsrs	r2, r3, #3
 800304a:	687b      	ldr	r3, [r7, #4]
 800304c:	3208      	adds	r2, #8
 800304e:	69b9      	ldr	r1, [r7, #24]
 8003050:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	681b      	ldr	r3, [r3, #0]
 8003058:	61bb      	str	r3, [r7, #24]
 800305a:	69fb      	ldr	r3, [r7, #28]
 800305c:	005b      	lsls	r3, r3, #1
 800305e:	2203      	movs	r2, #3
 8003060:	fa02 f303 	lsl.w	r3, r2, r3
 8003064:	43db      	mvns	r3, r3
 8003066:	69ba      	ldr	r2, [r7, #24]
 8003068:	4013      	ands	r3, r2
 800306a:	61bb      	str	r3, [r7, #24]
 800306c:	683b      	ldr	r3, [r7, #0]
 800306e:	685b      	ldr	r3, [r3, #4]
 8003070:	f003 0203 	and.w	r2, r3, #3
 8003074:	69fb      	ldr	r3, [r7, #28]
 8003076:	005b      	lsls	r3, r3, #1
 8003078:	fa02 f303 	lsl.w	r3, r2, r3
 800307c:	69ba      	ldr	r2, [r7, #24]
 800307e:	4313      	orrs	r3, r2
 8003080:	61bb      	str	r3, [r7, #24]
 8003082:	687b      	ldr	r3, [r7, #4]
 8003084:	69ba      	ldr	r2, [r7, #24]
 8003086:	601a      	str	r2, [r3, #0]
 8003088:	683b      	ldr	r3, [r7, #0]
 800308a:	685b      	ldr	r3, [r3, #4]
 800308c:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003090:	2b00      	cmp	r3, #0
 8003092:	f000 80c0 	beq.w	8003216 <HAL_GPIO_Init+0x306>
 8003096:	2300      	movs	r3, #0
 8003098:	60fb      	str	r3, [r7, #12]
 800309a:	4b66      	ldr	r3, [pc, #408]	; (8003234 <HAL_GPIO_Init+0x324>)
 800309c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800309e:	4a65      	ldr	r2, [pc, #404]	; (8003234 <HAL_GPIO_Init+0x324>)
 80030a0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80030a4:	6453      	str	r3, [r2, #68]	; 0x44
 80030a6:	4b63      	ldr	r3, [pc, #396]	; (8003234 <HAL_GPIO_Init+0x324>)
 80030a8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80030aa:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80030ae:	60fb      	str	r3, [r7, #12]
 80030b0:	68fb      	ldr	r3, [r7, #12]
 80030b2:	4a61      	ldr	r2, [pc, #388]	; (8003238 <HAL_GPIO_Init+0x328>)
 80030b4:	69fb      	ldr	r3, [r7, #28]
 80030b6:	089b      	lsrs	r3, r3, #2
 80030b8:	3302      	adds	r3, #2
 80030ba:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80030be:	61bb      	str	r3, [r7, #24]
 80030c0:	69fb      	ldr	r3, [r7, #28]
 80030c2:	f003 0303 	and.w	r3, r3, #3
 80030c6:	009b      	lsls	r3, r3, #2
 80030c8:	220f      	movs	r2, #15
 80030ca:	fa02 f303 	lsl.w	r3, r2, r3
 80030ce:	43db      	mvns	r3, r3
 80030d0:	69ba      	ldr	r2, [r7, #24]
 80030d2:	4013      	ands	r3, r2
 80030d4:	61bb      	str	r3, [r7, #24]
 80030d6:	687b      	ldr	r3, [r7, #4]
 80030d8:	4a58      	ldr	r2, [pc, #352]	; (800323c <HAL_GPIO_Init+0x32c>)
 80030da:	4293      	cmp	r3, r2
 80030dc:	d037      	beq.n	800314e <HAL_GPIO_Init+0x23e>
 80030de:	687b      	ldr	r3, [r7, #4]
 80030e0:	4a57      	ldr	r2, [pc, #348]	; (8003240 <HAL_GPIO_Init+0x330>)
 80030e2:	4293      	cmp	r3, r2
 80030e4:	d031      	beq.n	800314a <HAL_GPIO_Init+0x23a>
 80030e6:	687b      	ldr	r3, [r7, #4]
 80030e8:	4a56      	ldr	r2, [pc, #344]	; (8003244 <HAL_GPIO_Init+0x334>)
 80030ea:	4293      	cmp	r3, r2
 80030ec:	d02b      	beq.n	8003146 <HAL_GPIO_Init+0x236>
 80030ee:	687b      	ldr	r3, [r7, #4]
 80030f0:	4a55      	ldr	r2, [pc, #340]	; (8003248 <HAL_GPIO_Init+0x338>)
 80030f2:	4293      	cmp	r3, r2
 80030f4:	d025      	beq.n	8003142 <HAL_GPIO_Init+0x232>
 80030f6:	687b      	ldr	r3, [r7, #4]
 80030f8:	4a54      	ldr	r2, [pc, #336]	; (800324c <HAL_GPIO_Init+0x33c>)
 80030fa:	4293      	cmp	r3, r2
 80030fc:	d01f      	beq.n	800313e <HAL_GPIO_Init+0x22e>
 80030fe:	687b      	ldr	r3, [r7, #4]
 8003100:	4a53      	ldr	r2, [pc, #332]	; (8003250 <HAL_GPIO_Init+0x340>)
 8003102:	4293      	cmp	r3, r2
 8003104:	d019      	beq.n	800313a <HAL_GPIO_Init+0x22a>
 8003106:	687b      	ldr	r3, [r7, #4]
 8003108:	4a52      	ldr	r2, [pc, #328]	; (8003254 <HAL_GPIO_Init+0x344>)
 800310a:	4293      	cmp	r3, r2
 800310c:	d013      	beq.n	8003136 <HAL_GPIO_Init+0x226>
 800310e:	687b      	ldr	r3, [r7, #4]
 8003110:	4a51      	ldr	r2, [pc, #324]	; (8003258 <HAL_GPIO_Init+0x348>)
 8003112:	4293      	cmp	r3, r2
 8003114:	d00d      	beq.n	8003132 <HAL_GPIO_Init+0x222>
 8003116:	687b      	ldr	r3, [r7, #4]
 8003118:	4a50      	ldr	r2, [pc, #320]	; (800325c <HAL_GPIO_Init+0x34c>)
 800311a:	4293      	cmp	r3, r2
 800311c:	d007      	beq.n	800312e <HAL_GPIO_Init+0x21e>
 800311e:	687b      	ldr	r3, [r7, #4]
 8003120:	4a4f      	ldr	r2, [pc, #316]	; (8003260 <HAL_GPIO_Init+0x350>)
 8003122:	4293      	cmp	r3, r2
 8003124:	d101      	bne.n	800312a <HAL_GPIO_Init+0x21a>
 8003126:	2309      	movs	r3, #9
 8003128:	e012      	b.n	8003150 <HAL_GPIO_Init+0x240>
 800312a:	230a      	movs	r3, #10
 800312c:	e010      	b.n	8003150 <HAL_GPIO_Init+0x240>
 800312e:	2308      	movs	r3, #8
 8003130:	e00e      	b.n	8003150 <HAL_GPIO_Init+0x240>
 8003132:	2307      	movs	r3, #7
 8003134:	e00c      	b.n	8003150 <HAL_GPIO_Init+0x240>
 8003136:	2306      	movs	r3, #6
 8003138:	e00a      	b.n	8003150 <HAL_GPIO_Init+0x240>
 800313a:	2305      	movs	r3, #5
 800313c:	e008      	b.n	8003150 <HAL_GPIO_Init+0x240>
 800313e:	2304      	movs	r3, #4
 8003140:	e006      	b.n	8003150 <HAL_GPIO_Init+0x240>
 8003142:	2303      	movs	r3, #3
 8003144:	e004      	b.n	8003150 <HAL_GPIO_Init+0x240>
 8003146:	2302      	movs	r3, #2
 8003148:	e002      	b.n	8003150 <HAL_GPIO_Init+0x240>
 800314a:	2301      	movs	r3, #1
 800314c:	e000      	b.n	8003150 <HAL_GPIO_Init+0x240>
 800314e:	2300      	movs	r3, #0
 8003150:	69fa      	ldr	r2, [r7, #28]
 8003152:	f002 0203 	and.w	r2, r2, #3
 8003156:	0092      	lsls	r2, r2, #2
 8003158:	4093      	lsls	r3, r2
 800315a:	69ba      	ldr	r2, [r7, #24]
 800315c:	4313      	orrs	r3, r2
 800315e:	61bb      	str	r3, [r7, #24]
 8003160:	4935      	ldr	r1, [pc, #212]	; (8003238 <HAL_GPIO_Init+0x328>)
 8003162:	69fb      	ldr	r3, [r7, #28]
 8003164:	089b      	lsrs	r3, r3, #2
 8003166:	3302      	adds	r3, #2
 8003168:	69ba      	ldr	r2, [r7, #24]
 800316a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800316e:	4b3d      	ldr	r3, [pc, #244]	; (8003264 <HAL_GPIO_Init+0x354>)
 8003170:	689b      	ldr	r3, [r3, #8]
 8003172:	61bb      	str	r3, [r7, #24]
 8003174:	693b      	ldr	r3, [r7, #16]
 8003176:	43db      	mvns	r3, r3
 8003178:	69ba      	ldr	r2, [r7, #24]
 800317a:	4013      	ands	r3, r2
 800317c:	61bb      	str	r3, [r7, #24]
 800317e:	683b      	ldr	r3, [r7, #0]
 8003180:	685b      	ldr	r3, [r3, #4]
 8003182:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8003186:	2b00      	cmp	r3, #0
 8003188:	d003      	beq.n	8003192 <HAL_GPIO_Init+0x282>
 800318a:	69ba      	ldr	r2, [r7, #24]
 800318c:	693b      	ldr	r3, [r7, #16]
 800318e:	4313      	orrs	r3, r2
 8003190:	61bb      	str	r3, [r7, #24]
 8003192:	4a34      	ldr	r2, [pc, #208]	; (8003264 <HAL_GPIO_Init+0x354>)
 8003194:	69bb      	ldr	r3, [r7, #24]
 8003196:	6093      	str	r3, [r2, #8]
 8003198:	4b32      	ldr	r3, [pc, #200]	; (8003264 <HAL_GPIO_Init+0x354>)
 800319a:	68db      	ldr	r3, [r3, #12]
 800319c:	61bb      	str	r3, [r7, #24]
 800319e:	693b      	ldr	r3, [r7, #16]
 80031a0:	43db      	mvns	r3, r3
 80031a2:	69ba      	ldr	r2, [r7, #24]
 80031a4:	4013      	ands	r3, r2
 80031a6:	61bb      	str	r3, [r7, #24]
 80031a8:	683b      	ldr	r3, [r7, #0]
 80031aa:	685b      	ldr	r3, [r3, #4]
 80031ac:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80031b0:	2b00      	cmp	r3, #0
 80031b2:	d003      	beq.n	80031bc <HAL_GPIO_Init+0x2ac>
 80031b4:	69ba      	ldr	r2, [r7, #24]
 80031b6:	693b      	ldr	r3, [r7, #16]
 80031b8:	4313      	orrs	r3, r2
 80031ba:	61bb      	str	r3, [r7, #24]
 80031bc:	4a29      	ldr	r2, [pc, #164]	; (8003264 <HAL_GPIO_Init+0x354>)
 80031be:	69bb      	ldr	r3, [r7, #24]
 80031c0:	60d3      	str	r3, [r2, #12]
 80031c2:	4b28      	ldr	r3, [pc, #160]	; (8003264 <HAL_GPIO_Init+0x354>)
 80031c4:	685b      	ldr	r3, [r3, #4]
 80031c6:	61bb      	str	r3, [r7, #24]
 80031c8:	693b      	ldr	r3, [r7, #16]
 80031ca:	43db      	mvns	r3, r3
 80031cc:	69ba      	ldr	r2, [r7, #24]
 80031ce:	4013      	ands	r3, r2
 80031d0:	61bb      	str	r3, [r7, #24]
 80031d2:	683b      	ldr	r3, [r7, #0]
 80031d4:	685b      	ldr	r3, [r3, #4]
 80031d6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80031da:	2b00      	cmp	r3, #0
 80031dc:	d003      	beq.n	80031e6 <HAL_GPIO_Init+0x2d6>
 80031de:	69ba      	ldr	r2, [r7, #24]
 80031e0:	693b      	ldr	r3, [r7, #16]
 80031e2:	4313      	orrs	r3, r2
 80031e4:	61bb      	str	r3, [r7, #24]
 80031e6:	4a1f      	ldr	r2, [pc, #124]	; (8003264 <HAL_GPIO_Init+0x354>)
 80031e8:	69bb      	ldr	r3, [r7, #24]
 80031ea:	6053      	str	r3, [r2, #4]
 80031ec:	4b1d      	ldr	r3, [pc, #116]	; (8003264 <HAL_GPIO_Init+0x354>)
 80031ee:	681b      	ldr	r3, [r3, #0]
 80031f0:	61bb      	str	r3, [r7, #24]
 80031f2:	693b      	ldr	r3, [r7, #16]
 80031f4:	43db      	mvns	r3, r3
 80031f6:	69ba      	ldr	r2, [r7, #24]
 80031f8:	4013      	ands	r3, r2
 80031fa:	61bb      	str	r3, [r7, #24]
 80031fc:	683b      	ldr	r3, [r7, #0]
 80031fe:	685b      	ldr	r3, [r3, #4]
 8003200:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003204:	2b00      	cmp	r3, #0
 8003206:	d003      	beq.n	8003210 <HAL_GPIO_Init+0x300>
 8003208:	69ba      	ldr	r2, [r7, #24]
 800320a:	693b      	ldr	r3, [r7, #16]
 800320c:	4313      	orrs	r3, r2
 800320e:	61bb      	str	r3, [r7, #24]
 8003210:	4a14      	ldr	r2, [pc, #80]	; (8003264 <HAL_GPIO_Init+0x354>)
 8003212:	69bb      	ldr	r3, [r7, #24]
 8003214:	6013      	str	r3, [r2, #0]
 8003216:	69fb      	ldr	r3, [r7, #28]
 8003218:	3301      	adds	r3, #1
 800321a:	61fb      	str	r3, [r7, #28]
 800321c:	69fb      	ldr	r3, [r7, #28]
 800321e:	2b0f      	cmp	r3, #15
 8003220:	f67f ae84 	bls.w	8002f2c <HAL_GPIO_Init+0x1c>
 8003224:	bf00      	nop
 8003226:	bf00      	nop
 8003228:	3724      	adds	r7, #36	; 0x24
 800322a:	46bd      	mov	sp, r7
 800322c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003230:	4770      	bx	lr
 8003232:	bf00      	nop
 8003234:	40023800 	.word	0x40023800
 8003238:	40013800 	.word	0x40013800
 800323c:	40020000 	.word	0x40020000
 8003240:	40020400 	.word	0x40020400
 8003244:	40020800 	.word	0x40020800
 8003248:	40020c00 	.word	0x40020c00
 800324c:	40021000 	.word	0x40021000
 8003250:	40021400 	.word	0x40021400
 8003254:	40021800 	.word	0x40021800
 8003258:	40021c00 	.word	0x40021c00
 800325c:	40022000 	.word	0x40022000
 8003260:	40022400 	.word	0x40022400
 8003264:	40013c00 	.word	0x40013c00

08003268 <HAL_GPIO_WritePin>:
 8003268:	b480      	push	{r7}
 800326a:	b083      	sub	sp, #12
 800326c:	af00      	add	r7, sp, #0
 800326e:	6078      	str	r0, [r7, #4]
 8003270:	460b      	mov	r3, r1
 8003272:	807b      	strh	r3, [r7, #2]
 8003274:	4613      	mov	r3, r2
 8003276:	707b      	strb	r3, [r7, #1]
 8003278:	787b      	ldrb	r3, [r7, #1]
 800327a:	2b00      	cmp	r3, #0
 800327c:	d003      	beq.n	8003286 <HAL_GPIO_WritePin+0x1e>
 800327e:	887a      	ldrh	r2, [r7, #2]
 8003280:	687b      	ldr	r3, [r7, #4]
 8003282:	619a      	str	r2, [r3, #24]
 8003284:	e003      	b.n	800328e <HAL_GPIO_WritePin+0x26>
 8003286:	887b      	ldrh	r3, [r7, #2]
 8003288:	041a      	lsls	r2, r3, #16
 800328a:	687b      	ldr	r3, [r7, #4]
 800328c:	619a      	str	r2, [r3, #24]
 800328e:	bf00      	nop
 8003290:	370c      	adds	r7, #12
 8003292:	46bd      	mov	sp, r7
 8003294:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003298:	4770      	bx	lr

0800329a <HAL_PCD_Init>:
 800329a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800329c:	b08f      	sub	sp, #60	; 0x3c
 800329e:	af0a      	add	r7, sp, #40	; 0x28
 80032a0:	6078      	str	r0, [r7, #4]
 80032a2:	687b      	ldr	r3, [r7, #4]
 80032a4:	2b00      	cmp	r3, #0
 80032a6:	d101      	bne.n	80032ac <HAL_PCD_Init+0x12>
 80032a8:	2301      	movs	r3, #1
 80032aa:	e10f      	b.n	80034cc <HAL_PCD_Init+0x232>
 80032ac:	687b      	ldr	r3, [r7, #4]
 80032ae:	681b      	ldr	r3, [r3, #0]
 80032b0:	60bb      	str	r3, [r7, #8]
 80032b2:	687b      	ldr	r3, [r7, #4]
 80032b4:	f893 34bd 	ldrb.w	r3, [r3, #1213]	; 0x4bd
 80032b8:	b2db      	uxtb	r3, r3
 80032ba:	2b00      	cmp	r3, #0
 80032bc:	d106      	bne.n	80032cc <HAL_PCD_Init+0x32>
 80032be:	687b      	ldr	r3, [r7, #4]
 80032c0:	2200      	movs	r2, #0
 80032c2:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 80032c6:	6878      	ldr	r0, [r7, #4]
 80032c8:	f7fe f96c 	bl	80015a4 <HAL_PCD_MspInit>
 80032cc:	687b      	ldr	r3, [r7, #4]
 80032ce:	2203      	movs	r2, #3
 80032d0:	f883 24bd 	strb.w	r2, [r3, #1213]	; 0x4bd
 80032d4:	68bb      	ldr	r3, [r7, #8]
 80032d6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80032d8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80032dc:	2b00      	cmp	r3, #0
 80032de:	d102      	bne.n	80032e6 <HAL_PCD_Init+0x4c>
 80032e0:	687b      	ldr	r3, [r7, #4]
 80032e2:	2200      	movs	r2, #0
 80032e4:	611a      	str	r2, [r3, #16]
 80032e6:	687b      	ldr	r3, [r7, #4]
 80032e8:	681b      	ldr	r3, [r3, #0]
 80032ea:	4618      	mov	r0, r3
 80032ec:	f002 fce9 	bl	8005cc2 <USB_DisableGlobalInt>
 80032f0:	687b      	ldr	r3, [r7, #4]
 80032f2:	681b      	ldr	r3, [r3, #0]
 80032f4:	603b      	str	r3, [r7, #0]
 80032f6:	687e      	ldr	r6, [r7, #4]
 80032f8:	466d      	mov	r5, sp
 80032fa:	f106 0410 	add.w	r4, r6, #16
 80032fe:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003300:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8003302:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003304:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8003306:	e894 0003 	ldmia.w	r4, {r0, r1}
 800330a:	e885 0003 	stmia.w	r5, {r0, r1}
 800330e:	1d33      	adds	r3, r6, #4
 8003310:	cb0e      	ldmia	r3, {r1, r2, r3}
 8003312:	6838      	ldr	r0, [r7, #0]
 8003314:	f002 fc74 	bl	8005c00 <USB_CoreInit>
 8003318:	4603      	mov	r3, r0
 800331a:	2b00      	cmp	r3, #0
 800331c:	d005      	beq.n	800332a <HAL_PCD_Init+0x90>
 800331e:	687b      	ldr	r3, [r7, #4]
 8003320:	2202      	movs	r2, #2
 8003322:	f883 24bd 	strb.w	r2, [r3, #1213]	; 0x4bd
 8003326:	2301      	movs	r3, #1
 8003328:	e0d0      	b.n	80034cc <HAL_PCD_Init+0x232>
 800332a:	687b      	ldr	r3, [r7, #4]
 800332c:	681b      	ldr	r3, [r3, #0]
 800332e:	2100      	movs	r1, #0
 8003330:	4618      	mov	r0, r3
 8003332:	f002 fcd7 	bl	8005ce4 <USB_SetCurrentMode>
 8003336:	2300      	movs	r3, #0
 8003338:	73fb      	strb	r3, [r7, #15]
 800333a:	e04a      	b.n	80033d2 <HAL_PCD_Init+0x138>
 800333c:	7bfa      	ldrb	r2, [r7, #15]
 800333e:	6879      	ldr	r1, [r7, #4]
 8003340:	4613      	mov	r3, r2
 8003342:	00db      	lsls	r3, r3, #3
 8003344:	4413      	add	r3, r2
 8003346:	009b      	lsls	r3, r3, #2
 8003348:	440b      	add	r3, r1
 800334a:	333d      	adds	r3, #61	; 0x3d
 800334c:	2201      	movs	r2, #1
 800334e:	701a      	strb	r2, [r3, #0]
 8003350:	7bfa      	ldrb	r2, [r7, #15]
 8003352:	6879      	ldr	r1, [r7, #4]
 8003354:	4613      	mov	r3, r2
 8003356:	00db      	lsls	r3, r3, #3
 8003358:	4413      	add	r3, r2
 800335a:	009b      	lsls	r3, r3, #2
 800335c:	440b      	add	r3, r1
 800335e:	333c      	adds	r3, #60	; 0x3c
 8003360:	7bfa      	ldrb	r2, [r7, #15]
 8003362:	701a      	strb	r2, [r3, #0]
 8003364:	7bfa      	ldrb	r2, [r7, #15]
 8003366:	7bfb      	ldrb	r3, [r7, #15]
 8003368:	b298      	uxth	r0, r3
 800336a:	6879      	ldr	r1, [r7, #4]
 800336c:	4613      	mov	r3, r2
 800336e:	00db      	lsls	r3, r3, #3
 8003370:	4413      	add	r3, r2
 8003372:	009b      	lsls	r3, r3, #2
 8003374:	440b      	add	r3, r1
 8003376:	3344      	adds	r3, #68	; 0x44
 8003378:	4602      	mov	r2, r0
 800337a:	801a      	strh	r2, [r3, #0]
 800337c:	7bfa      	ldrb	r2, [r7, #15]
 800337e:	6879      	ldr	r1, [r7, #4]
 8003380:	4613      	mov	r3, r2
 8003382:	00db      	lsls	r3, r3, #3
 8003384:	4413      	add	r3, r2
 8003386:	009b      	lsls	r3, r3, #2
 8003388:	440b      	add	r3, r1
 800338a:	3340      	adds	r3, #64	; 0x40
 800338c:	2200      	movs	r2, #0
 800338e:	701a      	strb	r2, [r3, #0]
 8003390:	7bfa      	ldrb	r2, [r7, #15]
 8003392:	6879      	ldr	r1, [r7, #4]
 8003394:	4613      	mov	r3, r2
 8003396:	00db      	lsls	r3, r3, #3
 8003398:	4413      	add	r3, r2
 800339a:	009b      	lsls	r3, r3, #2
 800339c:	440b      	add	r3, r1
 800339e:	3348      	adds	r3, #72	; 0x48
 80033a0:	2200      	movs	r2, #0
 80033a2:	601a      	str	r2, [r3, #0]
 80033a4:	7bfa      	ldrb	r2, [r7, #15]
 80033a6:	6879      	ldr	r1, [r7, #4]
 80033a8:	4613      	mov	r3, r2
 80033aa:	00db      	lsls	r3, r3, #3
 80033ac:	4413      	add	r3, r2
 80033ae:	009b      	lsls	r3, r3, #2
 80033b0:	440b      	add	r3, r1
 80033b2:	334c      	adds	r3, #76	; 0x4c
 80033b4:	2200      	movs	r2, #0
 80033b6:	601a      	str	r2, [r3, #0]
 80033b8:	7bfa      	ldrb	r2, [r7, #15]
 80033ba:	6879      	ldr	r1, [r7, #4]
 80033bc:	4613      	mov	r3, r2
 80033be:	00db      	lsls	r3, r3, #3
 80033c0:	4413      	add	r3, r2
 80033c2:	009b      	lsls	r3, r3, #2
 80033c4:	440b      	add	r3, r1
 80033c6:	3354      	adds	r3, #84	; 0x54
 80033c8:	2200      	movs	r2, #0
 80033ca:	601a      	str	r2, [r3, #0]
 80033cc:	7bfb      	ldrb	r3, [r7, #15]
 80033ce:	3301      	adds	r3, #1
 80033d0:	73fb      	strb	r3, [r7, #15]
 80033d2:	7bfa      	ldrb	r2, [r7, #15]
 80033d4:	687b      	ldr	r3, [r7, #4]
 80033d6:	685b      	ldr	r3, [r3, #4]
 80033d8:	429a      	cmp	r2, r3
 80033da:	d3af      	bcc.n	800333c <HAL_PCD_Init+0xa2>
 80033dc:	2300      	movs	r3, #0
 80033de:	73fb      	strb	r3, [r7, #15]
 80033e0:	e044      	b.n	800346c <HAL_PCD_Init+0x1d2>
 80033e2:	7bfa      	ldrb	r2, [r7, #15]
 80033e4:	6879      	ldr	r1, [r7, #4]
 80033e6:	4613      	mov	r3, r2
 80033e8:	00db      	lsls	r3, r3, #3
 80033ea:	4413      	add	r3, r2
 80033ec:	009b      	lsls	r3, r3, #2
 80033ee:	440b      	add	r3, r1
 80033f0:	f203 237d 	addw	r3, r3, #637	; 0x27d
 80033f4:	2200      	movs	r2, #0
 80033f6:	701a      	strb	r2, [r3, #0]
 80033f8:	7bfa      	ldrb	r2, [r7, #15]
 80033fa:	6879      	ldr	r1, [r7, #4]
 80033fc:	4613      	mov	r3, r2
 80033fe:	00db      	lsls	r3, r3, #3
 8003400:	4413      	add	r3, r2
 8003402:	009b      	lsls	r3, r3, #2
 8003404:	440b      	add	r3, r1
 8003406:	f503 731f 	add.w	r3, r3, #636	; 0x27c
 800340a:	7bfa      	ldrb	r2, [r7, #15]
 800340c:	701a      	strb	r2, [r3, #0]
 800340e:	7bfa      	ldrb	r2, [r7, #15]
 8003410:	6879      	ldr	r1, [r7, #4]
 8003412:	4613      	mov	r3, r2
 8003414:	00db      	lsls	r3, r3, #3
 8003416:	4413      	add	r3, r2
 8003418:	009b      	lsls	r3, r3, #2
 800341a:	440b      	add	r3, r1
 800341c:	f503 7320 	add.w	r3, r3, #640	; 0x280
 8003420:	2200      	movs	r2, #0
 8003422:	701a      	strb	r2, [r3, #0]
 8003424:	7bfa      	ldrb	r2, [r7, #15]
 8003426:	6879      	ldr	r1, [r7, #4]
 8003428:	4613      	mov	r3, r2
 800342a:	00db      	lsls	r3, r3, #3
 800342c:	4413      	add	r3, r2
 800342e:	009b      	lsls	r3, r3, #2
 8003430:	440b      	add	r3, r1
 8003432:	f503 7322 	add.w	r3, r3, #648	; 0x288
 8003436:	2200      	movs	r2, #0
 8003438:	601a      	str	r2, [r3, #0]
 800343a:	7bfa      	ldrb	r2, [r7, #15]
 800343c:	6879      	ldr	r1, [r7, #4]
 800343e:	4613      	mov	r3, r2
 8003440:	00db      	lsls	r3, r3, #3
 8003442:	4413      	add	r3, r2
 8003444:	009b      	lsls	r3, r3, #2
 8003446:	440b      	add	r3, r1
 8003448:	f503 7323 	add.w	r3, r3, #652	; 0x28c
 800344c:	2200      	movs	r2, #0
 800344e:	601a      	str	r2, [r3, #0]
 8003450:	7bfa      	ldrb	r2, [r7, #15]
 8003452:	6879      	ldr	r1, [r7, #4]
 8003454:	4613      	mov	r3, r2
 8003456:	00db      	lsls	r3, r3, #3
 8003458:	4413      	add	r3, r2
 800345a:	009b      	lsls	r3, r3, #2
 800345c:	440b      	add	r3, r1
 800345e:	f503 7325 	add.w	r3, r3, #660	; 0x294
 8003462:	2200      	movs	r2, #0
 8003464:	601a      	str	r2, [r3, #0]
 8003466:	7bfb      	ldrb	r3, [r7, #15]
 8003468:	3301      	adds	r3, #1
 800346a:	73fb      	strb	r3, [r7, #15]
 800346c:	7bfa      	ldrb	r2, [r7, #15]
 800346e:	687b      	ldr	r3, [r7, #4]
 8003470:	685b      	ldr	r3, [r3, #4]
 8003472:	429a      	cmp	r2, r3
 8003474:	d3b5      	bcc.n	80033e2 <HAL_PCD_Init+0x148>
 8003476:	687b      	ldr	r3, [r7, #4]
 8003478:	681b      	ldr	r3, [r3, #0]
 800347a:	603b      	str	r3, [r7, #0]
 800347c:	687e      	ldr	r6, [r7, #4]
 800347e:	466d      	mov	r5, sp
 8003480:	f106 0410 	add.w	r4, r6, #16
 8003484:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003486:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8003488:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800348a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800348c:	e894 0003 	ldmia.w	r4, {r0, r1}
 8003490:	e885 0003 	stmia.w	r5, {r0, r1}
 8003494:	1d33      	adds	r3, r6, #4
 8003496:	cb0e      	ldmia	r3, {r1, r2, r3}
 8003498:	6838      	ldr	r0, [r7, #0]
 800349a:	f002 fc6f 	bl	8005d7c <USB_DevInit>
 800349e:	4603      	mov	r3, r0
 80034a0:	2b00      	cmp	r3, #0
 80034a2:	d005      	beq.n	80034b0 <HAL_PCD_Init+0x216>
 80034a4:	687b      	ldr	r3, [r7, #4]
 80034a6:	2202      	movs	r2, #2
 80034a8:	f883 24bd 	strb.w	r2, [r3, #1213]	; 0x4bd
 80034ac:	2301      	movs	r3, #1
 80034ae:	e00d      	b.n	80034cc <HAL_PCD_Init+0x232>
 80034b0:	687b      	ldr	r3, [r7, #4]
 80034b2:	2200      	movs	r2, #0
 80034b4:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80034b8:	687b      	ldr	r3, [r7, #4]
 80034ba:	2201      	movs	r2, #1
 80034bc:	f883 24bd 	strb.w	r2, [r3, #1213]	; 0x4bd
 80034c0:	687b      	ldr	r3, [r7, #4]
 80034c2:	681b      	ldr	r3, [r3, #0]
 80034c4:	4618      	mov	r0, r3
 80034c6:	f002 fe3a 	bl	800613e <USB_DevDisconnect>
 80034ca:	2300      	movs	r3, #0
 80034cc:	4618      	mov	r0, r3
 80034ce:	3714      	adds	r7, #20
 80034d0:	46bd      	mov	sp, r7
 80034d2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080034d4 <HAL_RCC_OscConfig>:
 80034d4:	b580      	push	{r7, lr}
 80034d6:	b086      	sub	sp, #24
 80034d8:	af00      	add	r7, sp, #0
 80034da:	6078      	str	r0, [r7, #4]
 80034dc:	687b      	ldr	r3, [r7, #4]
 80034de:	2b00      	cmp	r3, #0
 80034e0:	d101      	bne.n	80034e6 <HAL_RCC_OscConfig+0x12>
 80034e2:	2301      	movs	r3, #1
 80034e4:	e267      	b.n	80039b6 <HAL_RCC_OscConfig+0x4e2>
 80034e6:	687b      	ldr	r3, [r7, #4]
 80034e8:	681b      	ldr	r3, [r3, #0]
 80034ea:	f003 0301 	and.w	r3, r3, #1
 80034ee:	2b00      	cmp	r3, #0
 80034f0:	d075      	beq.n	80035de <HAL_RCC_OscConfig+0x10a>
 80034f2:	4b88      	ldr	r3, [pc, #544]	; (8003714 <HAL_RCC_OscConfig+0x240>)
 80034f4:	689b      	ldr	r3, [r3, #8]
 80034f6:	f003 030c 	and.w	r3, r3, #12
 80034fa:	2b04      	cmp	r3, #4
 80034fc:	d00c      	beq.n	8003518 <HAL_RCC_OscConfig+0x44>
 80034fe:	4b85      	ldr	r3, [pc, #532]	; (8003714 <HAL_RCC_OscConfig+0x240>)
 8003500:	689b      	ldr	r3, [r3, #8]
 8003502:	f003 030c 	and.w	r3, r3, #12
 8003506:	2b08      	cmp	r3, #8
 8003508:	d112      	bne.n	8003530 <HAL_RCC_OscConfig+0x5c>
 800350a:	4b82      	ldr	r3, [pc, #520]	; (8003714 <HAL_RCC_OscConfig+0x240>)
 800350c:	685b      	ldr	r3, [r3, #4]
 800350e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8003512:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8003516:	d10b      	bne.n	8003530 <HAL_RCC_OscConfig+0x5c>
 8003518:	4b7e      	ldr	r3, [pc, #504]	; (8003714 <HAL_RCC_OscConfig+0x240>)
 800351a:	681b      	ldr	r3, [r3, #0]
 800351c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003520:	2b00      	cmp	r3, #0
 8003522:	d05b      	beq.n	80035dc <HAL_RCC_OscConfig+0x108>
 8003524:	687b      	ldr	r3, [r7, #4]
 8003526:	685b      	ldr	r3, [r3, #4]
 8003528:	2b00      	cmp	r3, #0
 800352a:	d157      	bne.n	80035dc <HAL_RCC_OscConfig+0x108>
 800352c:	2301      	movs	r3, #1
 800352e:	e242      	b.n	80039b6 <HAL_RCC_OscConfig+0x4e2>
 8003530:	687b      	ldr	r3, [r7, #4]
 8003532:	685b      	ldr	r3, [r3, #4]
 8003534:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003538:	d106      	bne.n	8003548 <HAL_RCC_OscConfig+0x74>
 800353a:	4b76      	ldr	r3, [pc, #472]	; (8003714 <HAL_RCC_OscConfig+0x240>)
 800353c:	681b      	ldr	r3, [r3, #0]
 800353e:	4a75      	ldr	r2, [pc, #468]	; (8003714 <HAL_RCC_OscConfig+0x240>)
 8003540:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003544:	6013      	str	r3, [r2, #0]
 8003546:	e01d      	b.n	8003584 <HAL_RCC_OscConfig+0xb0>
 8003548:	687b      	ldr	r3, [r7, #4]
 800354a:	685b      	ldr	r3, [r3, #4]
 800354c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8003550:	d10c      	bne.n	800356c <HAL_RCC_OscConfig+0x98>
 8003552:	4b70      	ldr	r3, [pc, #448]	; (8003714 <HAL_RCC_OscConfig+0x240>)
 8003554:	681b      	ldr	r3, [r3, #0]
 8003556:	4a6f      	ldr	r2, [pc, #444]	; (8003714 <HAL_RCC_OscConfig+0x240>)
 8003558:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800355c:	6013      	str	r3, [r2, #0]
 800355e:	4b6d      	ldr	r3, [pc, #436]	; (8003714 <HAL_RCC_OscConfig+0x240>)
 8003560:	681b      	ldr	r3, [r3, #0]
 8003562:	4a6c      	ldr	r2, [pc, #432]	; (8003714 <HAL_RCC_OscConfig+0x240>)
 8003564:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003568:	6013      	str	r3, [r2, #0]
 800356a:	e00b      	b.n	8003584 <HAL_RCC_OscConfig+0xb0>
 800356c:	4b69      	ldr	r3, [pc, #420]	; (8003714 <HAL_RCC_OscConfig+0x240>)
 800356e:	681b      	ldr	r3, [r3, #0]
 8003570:	4a68      	ldr	r2, [pc, #416]	; (8003714 <HAL_RCC_OscConfig+0x240>)
 8003572:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003576:	6013      	str	r3, [r2, #0]
 8003578:	4b66      	ldr	r3, [pc, #408]	; (8003714 <HAL_RCC_OscConfig+0x240>)
 800357a:	681b      	ldr	r3, [r3, #0]
 800357c:	4a65      	ldr	r2, [pc, #404]	; (8003714 <HAL_RCC_OscConfig+0x240>)
 800357e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003582:	6013      	str	r3, [r2, #0]
 8003584:	687b      	ldr	r3, [r7, #4]
 8003586:	685b      	ldr	r3, [r3, #4]
 8003588:	2b00      	cmp	r3, #0
 800358a:	d013      	beq.n	80035b4 <HAL_RCC_OscConfig+0xe0>
 800358c:	f7fe fcda 	bl	8001f44 <HAL_GetTick>
 8003590:	6138      	str	r0, [r7, #16]
 8003592:	e008      	b.n	80035a6 <HAL_RCC_OscConfig+0xd2>
 8003594:	f7fe fcd6 	bl	8001f44 <HAL_GetTick>
 8003598:	4602      	mov	r2, r0
 800359a:	693b      	ldr	r3, [r7, #16]
 800359c:	1ad3      	subs	r3, r2, r3
 800359e:	2b64      	cmp	r3, #100	; 0x64
 80035a0:	d901      	bls.n	80035a6 <HAL_RCC_OscConfig+0xd2>
 80035a2:	2303      	movs	r3, #3
 80035a4:	e207      	b.n	80039b6 <HAL_RCC_OscConfig+0x4e2>
 80035a6:	4b5b      	ldr	r3, [pc, #364]	; (8003714 <HAL_RCC_OscConfig+0x240>)
 80035a8:	681b      	ldr	r3, [r3, #0]
 80035aa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80035ae:	2b00      	cmp	r3, #0
 80035b0:	d0f0      	beq.n	8003594 <HAL_RCC_OscConfig+0xc0>
 80035b2:	e014      	b.n	80035de <HAL_RCC_OscConfig+0x10a>
 80035b4:	f7fe fcc6 	bl	8001f44 <HAL_GetTick>
 80035b8:	6138      	str	r0, [r7, #16]
 80035ba:	e008      	b.n	80035ce <HAL_RCC_OscConfig+0xfa>
 80035bc:	f7fe fcc2 	bl	8001f44 <HAL_GetTick>
 80035c0:	4602      	mov	r2, r0
 80035c2:	693b      	ldr	r3, [r7, #16]
 80035c4:	1ad3      	subs	r3, r2, r3
 80035c6:	2b64      	cmp	r3, #100	; 0x64
 80035c8:	d901      	bls.n	80035ce <HAL_RCC_OscConfig+0xfa>
 80035ca:	2303      	movs	r3, #3
 80035cc:	e1f3      	b.n	80039b6 <HAL_RCC_OscConfig+0x4e2>
 80035ce:	4b51      	ldr	r3, [pc, #324]	; (8003714 <HAL_RCC_OscConfig+0x240>)
 80035d0:	681b      	ldr	r3, [r3, #0]
 80035d2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80035d6:	2b00      	cmp	r3, #0
 80035d8:	d1f0      	bne.n	80035bc <HAL_RCC_OscConfig+0xe8>
 80035da:	e000      	b.n	80035de <HAL_RCC_OscConfig+0x10a>
 80035dc:	bf00      	nop
 80035de:	687b      	ldr	r3, [r7, #4]
 80035e0:	681b      	ldr	r3, [r3, #0]
 80035e2:	f003 0302 	and.w	r3, r3, #2
 80035e6:	2b00      	cmp	r3, #0
 80035e8:	d063      	beq.n	80036b2 <HAL_RCC_OscConfig+0x1de>
 80035ea:	4b4a      	ldr	r3, [pc, #296]	; (8003714 <HAL_RCC_OscConfig+0x240>)
 80035ec:	689b      	ldr	r3, [r3, #8]
 80035ee:	f003 030c 	and.w	r3, r3, #12
 80035f2:	2b00      	cmp	r3, #0
 80035f4:	d00b      	beq.n	800360e <HAL_RCC_OscConfig+0x13a>
 80035f6:	4b47      	ldr	r3, [pc, #284]	; (8003714 <HAL_RCC_OscConfig+0x240>)
 80035f8:	689b      	ldr	r3, [r3, #8]
 80035fa:	f003 030c 	and.w	r3, r3, #12
 80035fe:	2b08      	cmp	r3, #8
 8003600:	d11c      	bne.n	800363c <HAL_RCC_OscConfig+0x168>
 8003602:	4b44      	ldr	r3, [pc, #272]	; (8003714 <HAL_RCC_OscConfig+0x240>)
 8003604:	685b      	ldr	r3, [r3, #4]
 8003606:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800360a:	2b00      	cmp	r3, #0
 800360c:	d116      	bne.n	800363c <HAL_RCC_OscConfig+0x168>
 800360e:	4b41      	ldr	r3, [pc, #260]	; (8003714 <HAL_RCC_OscConfig+0x240>)
 8003610:	681b      	ldr	r3, [r3, #0]
 8003612:	f003 0302 	and.w	r3, r3, #2
 8003616:	2b00      	cmp	r3, #0
 8003618:	d005      	beq.n	8003626 <HAL_RCC_OscConfig+0x152>
 800361a:	687b      	ldr	r3, [r7, #4]
 800361c:	68db      	ldr	r3, [r3, #12]
 800361e:	2b01      	cmp	r3, #1
 8003620:	d001      	beq.n	8003626 <HAL_RCC_OscConfig+0x152>
 8003622:	2301      	movs	r3, #1
 8003624:	e1c7      	b.n	80039b6 <HAL_RCC_OscConfig+0x4e2>
 8003626:	4b3b      	ldr	r3, [pc, #236]	; (8003714 <HAL_RCC_OscConfig+0x240>)
 8003628:	681b      	ldr	r3, [r3, #0]
 800362a:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800362e:	687b      	ldr	r3, [r7, #4]
 8003630:	691b      	ldr	r3, [r3, #16]
 8003632:	00db      	lsls	r3, r3, #3
 8003634:	4937      	ldr	r1, [pc, #220]	; (8003714 <HAL_RCC_OscConfig+0x240>)
 8003636:	4313      	orrs	r3, r2
 8003638:	600b      	str	r3, [r1, #0]
 800363a:	e03a      	b.n	80036b2 <HAL_RCC_OscConfig+0x1de>
 800363c:	687b      	ldr	r3, [r7, #4]
 800363e:	68db      	ldr	r3, [r3, #12]
 8003640:	2b00      	cmp	r3, #0
 8003642:	d020      	beq.n	8003686 <HAL_RCC_OscConfig+0x1b2>
 8003644:	4b34      	ldr	r3, [pc, #208]	; (8003718 <HAL_RCC_OscConfig+0x244>)
 8003646:	2201      	movs	r2, #1
 8003648:	601a      	str	r2, [r3, #0]
 800364a:	f7fe fc7b 	bl	8001f44 <HAL_GetTick>
 800364e:	6138      	str	r0, [r7, #16]
 8003650:	e008      	b.n	8003664 <HAL_RCC_OscConfig+0x190>
 8003652:	f7fe fc77 	bl	8001f44 <HAL_GetTick>
 8003656:	4602      	mov	r2, r0
 8003658:	693b      	ldr	r3, [r7, #16]
 800365a:	1ad3      	subs	r3, r2, r3
 800365c:	2b02      	cmp	r3, #2
 800365e:	d901      	bls.n	8003664 <HAL_RCC_OscConfig+0x190>
 8003660:	2303      	movs	r3, #3
 8003662:	e1a8      	b.n	80039b6 <HAL_RCC_OscConfig+0x4e2>
 8003664:	4b2b      	ldr	r3, [pc, #172]	; (8003714 <HAL_RCC_OscConfig+0x240>)
 8003666:	681b      	ldr	r3, [r3, #0]
 8003668:	f003 0302 	and.w	r3, r3, #2
 800366c:	2b00      	cmp	r3, #0
 800366e:	d0f0      	beq.n	8003652 <HAL_RCC_OscConfig+0x17e>
 8003670:	4b28      	ldr	r3, [pc, #160]	; (8003714 <HAL_RCC_OscConfig+0x240>)
 8003672:	681b      	ldr	r3, [r3, #0]
 8003674:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8003678:	687b      	ldr	r3, [r7, #4]
 800367a:	691b      	ldr	r3, [r3, #16]
 800367c:	00db      	lsls	r3, r3, #3
 800367e:	4925      	ldr	r1, [pc, #148]	; (8003714 <HAL_RCC_OscConfig+0x240>)
 8003680:	4313      	orrs	r3, r2
 8003682:	600b      	str	r3, [r1, #0]
 8003684:	e015      	b.n	80036b2 <HAL_RCC_OscConfig+0x1de>
 8003686:	4b24      	ldr	r3, [pc, #144]	; (8003718 <HAL_RCC_OscConfig+0x244>)
 8003688:	2200      	movs	r2, #0
 800368a:	601a      	str	r2, [r3, #0]
 800368c:	f7fe fc5a 	bl	8001f44 <HAL_GetTick>
 8003690:	6138      	str	r0, [r7, #16]
 8003692:	e008      	b.n	80036a6 <HAL_RCC_OscConfig+0x1d2>
 8003694:	f7fe fc56 	bl	8001f44 <HAL_GetTick>
 8003698:	4602      	mov	r2, r0
 800369a:	693b      	ldr	r3, [r7, #16]
 800369c:	1ad3      	subs	r3, r2, r3
 800369e:	2b02      	cmp	r3, #2
 80036a0:	d901      	bls.n	80036a6 <HAL_RCC_OscConfig+0x1d2>
 80036a2:	2303      	movs	r3, #3
 80036a4:	e187      	b.n	80039b6 <HAL_RCC_OscConfig+0x4e2>
 80036a6:	4b1b      	ldr	r3, [pc, #108]	; (8003714 <HAL_RCC_OscConfig+0x240>)
 80036a8:	681b      	ldr	r3, [r3, #0]
 80036aa:	f003 0302 	and.w	r3, r3, #2
 80036ae:	2b00      	cmp	r3, #0
 80036b0:	d1f0      	bne.n	8003694 <HAL_RCC_OscConfig+0x1c0>
 80036b2:	687b      	ldr	r3, [r7, #4]
 80036b4:	681b      	ldr	r3, [r3, #0]
 80036b6:	f003 0308 	and.w	r3, r3, #8
 80036ba:	2b00      	cmp	r3, #0
 80036bc:	d036      	beq.n	800372c <HAL_RCC_OscConfig+0x258>
 80036be:	687b      	ldr	r3, [r7, #4]
 80036c0:	695b      	ldr	r3, [r3, #20]
 80036c2:	2b00      	cmp	r3, #0
 80036c4:	d016      	beq.n	80036f4 <HAL_RCC_OscConfig+0x220>
 80036c6:	4b15      	ldr	r3, [pc, #84]	; (800371c <HAL_RCC_OscConfig+0x248>)
 80036c8:	2201      	movs	r2, #1
 80036ca:	601a      	str	r2, [r3, #0]
 80036cc:	f7fe fc3a 	bl	8001f44 <HAL_GetTick>
 80036d0:	6138      	str	r0, [r7, #16]
 80036d2:	e008      	b.n	80036e6 <HAL_RCC_OscConfig+0x212>
 80036d4:	f7fe fc36 	bl	8001f44 <HAL_GetTick>
 80036d8:	4602      	mov	r2, r0
 80036da:	693b      	ldr	r3, [r7, #16]
 80036dc:	1ad3      	subs	r3, r2, r3
 80036de:	2b02      	cmp	r3, #2
 80036e0:	d901      	bls.n	80036e6 <HAL_RCC_OscConfig+0x212>
 80036e2:	2303      	movs	r3, #3
 80036e4:	e167      	b.n	80039b6 <HAL_RCC_OscConfig+0x4e2>
 80036e6:	4b0b      	ldr	r3, [pc, #44]	; (8003714 <HAL_RCC_OscConfig+0x240>)
 80036e8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80036ea:	f003 0302 	and.w	r3, r3, #2
 80036ee:	2b00      	cmp	r3, #0
 80036f0:	d0f0      	beq.n	80036d4 <HAL_RCC_OscConfig+0x200>
 80036f2:	e01b      	b.n	800372c <HAL_RCC_OscConfig+0x258>
 80036f4:	4b09      	ldr	r3, [pc, #36]	; (800371c <HAL_RCC_OscConfig+0x248>)
 80036f6:	2200      	movs	r2, #0
 80036f8:	601a      	str	r2, [r3, #0]
 80036fa:	f7fe fc23 	bl	8001f44 <HAL_GetTick>
 80036fe:	6138      	str	r0, [r7, #16]
 8003700:	e00e      	b.n	8003720 <HAL_RCC_OscConfig+0x24c>
 8003702:	f7fe fc1f 	bl	8001f44 <HAL_GetTick>
 8003706:	4602      	mov	r2, r0
 8003708:	693b      	ldr	r3, [r7, #16]
 800370a:	1ad3      	subs	r3, r2, r3
 800370c:	2b02      	cmp	r3, #2
 800370e:	d907      	bls.n	8003720 <HAL_RCC_OscConfig+0x24c>
 8003710:	2303      	movs	r3, #3
 8003712:	e150      	b.n	80039b6 <HAL_RCC_OscConfig+0x4e2>
 8003714:	40023800 	.word	0x40023800
 8003718:	42470000 	.word	0x42470000
 800371c:	42470e80 	.word	0x42470e80
 8003720:	4b88      	ldr	r3, [pc, #544]	; (8003944 <HAL_RCC_OscConfig+0x470>)
 8003722:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8003724:	f003 0302 	and.w	r3, r3, #2
 8003728:	2b00      	cmp	r3, #0
 800372a:	d1ea      	bne.n	8003702 <HAL_RCC_OscConfig+0x22e>
 800372c:	687b      	ldr	r3, [r7, #4]
 800372e:	681b      	ldr	r3, [r3, #0]
 8003730:	f003 0304 	and.w	r3, r3, #4
 8003734:	2b00      	cmp	r3, #0
 8003736:	f000 8097 	beq.w	8003868 <HAL_RCC_OscConfig+0x394>
 800373a:	2300      	movs	r3, #0
 800373c:	75fb      	strb	r3, [r7, #23]
 800373e:	4b81      	ldr	r3, [pc, #516]	; (8003944 <HAL_RCC_OscConfig+0x470>)
 8003740:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003742:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003746:	2b00      	cmp	r3, #0
 8003748:	d10f      	bne.n	800376a <HAL_RCC_OscConfig+0x296>
 800374a:	2300      	movs	r3, #0
 800374c:	60bb      	str	r3, [r7, #8]
 800374e:	4b7d      	ldr	r3, [pc, #500]	; (8003944 <HAL_RCC_OscConfig+0x470>)
 8003750:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003752:	4a7c      	ldr	r2, [pc, #496]	; (8003944 <HAL_RCC_OscConfig+0x470>)
 8003754:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003758:	6413      	str	r3, [r2, #64]	; 0x40
 800375a:	4b7a      	ldr	r3, [pc, #488]	; (8003944 <HAL_RCC_OscConfig+0x470>)
 800375c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800375e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003762:	60bb      	str	r3, [r7, #8]
 8003764:	68bb      	ldr	r3, [r7, #8]
 8003766:	2301      	movs	r3, #1
 8003768:	75fb      	strb	r3, [r7, #23]
 800376a:	4b77      	ldr	r3, [pc, #476]	; (8003948 <HAL_RCC_OscConfig+0x474>)
 800376c:	681b      	ldr	r3, [r3, #0]
 800376e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003772:	2b00      	cmp	r3, #0
 8003774:	d118      	bne.n	80037a8 <HAL_RCC_OscConfig+0x2d4>
 8003776:	4b74      	ldr	r3, [pc, #464]	; (8003948 <HAL_RCC_OscConfig+0x474>)
 8003778:	681b      	ldr	r3, [r3, #0]
 800377a:	4a73      	ldr	r2, [pc, #460]	; (8003948 <HAL_RCC_OscConfig+0x474>)
 800377c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003780:	6013      	str	r3, [r2, #0]
 8003782:	f7fe fbdf 	bl	8001f44 <HAL_GetTick>
 8003786:	6138      	str	r0, [r7, #16]
 8003788:	e008      	b.n	800379c <HAL_RCC_OscConfig+0x2c8>
 800378a:	f7fe fbdb 	bl	8001f44 <HAL_GetTick>
 800378e:	4602      	mov	r2, r0
 8003790:	693b      	ldr	r3, [r7, #16]
 8003792:	1ad3      	subs	r3, r2, r3
 8003794:	2b02      	cmp	r3, #2
 8003796:	d901      	bls.n	800379c <HAL_RCC_OscConfig+0x2c8>
 8003798:	2303      	movs	r3, #3
 800379a:	e10c      	b.n	80039b6 <HAL_RCC_OscConfig+0x4e2>
 800379c:	4b6a      	ldr	r3, [pc, #424]	; (8003948 <HAL_RCC_OscConfig+0x474>)
 800379e:	681b      	ldr	r3, [r3, #0]
 80037a0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80037a4:	2b00      	cmp	r3, #0
 80037a6:	d0f0      	beq.n	800378a <HAL_RCC_OscConfig+0x2b6>
 80037a8:	687b      	ldr	r3, [r7, #4]
 80037aa:	689b      	ldr	r3, [r3, #8]
 80037ac:	2b01      	cmp	r3, #1
 80037ae:	d106      	bne.n	80037be <HAL_RCC_OscConfig+0x2ea>
 80037b0:	4b64      	ldr	r3, [pc, #400]	; (8003944 <HAL_RCC_OscConfig+0x470>)
 80037b2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80037b4:	4a63      	ldr	r2, [pc, #396]	; (8003944 <HAL_RCC_OscConfig+0x470>)
 80037b6:	f043 0301 	orr.w	r3, r3, #1
 80037ba:	6713      	str	r3, [r2, #112]	; 0x70
 80037bc:	e01c      	b.n	80037f8 <HAL_RCC_OscConfig+0x324>
 80037be:	687b      	ldr	r3, [r7, #4]
 80037c0:	689b      	ldr	r3, [r3, #8]
 80037c2:	2b05      	cmp	r3, #5
 80037c4:	d10c      	bne.n	80037e0 <HAL_RCC_OscConfig+0x30c>
 80037c6:	4b5f      	ldr	r3, [pc, #380]	; (8003944 <HAL_RCC_OscConfig+0x470>)
 80037c8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80037ca:	4a5e      	ldr	r2, [pc, #376]	; (8003944 <HAL_RCC_OscConfig+0x470>)
 80037cc:	f043 0304 	orr.w	r3, r3, #4
 80037d0:	6713      	str	r3, [r2, #112]	; 0x70
 80037d2:	4b5c      	ldr	r3, [pc, #368]	; (8003944 <HAL_RCC_OscConfig+0x470>)
 80037d4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80037d6:	4a5b      	ldr	r2, [pc, #364]	; (8003944 <HAL_RCC_OscConfig+0x470>)
 80037d8:	f043 0301 	orr.w	r3, r3, #1
 80037dc:	6713      	str	r3, [r2, #112]	; 0x70
 80037de:	e00b      	b.n	80037f8 <HAL_RCC_OscConfig+0x324>
 80037e0:	4b58      	ldr	r3, [pc, #352]	; (8003944 <HAL_RCC_OscConfig+0x470>)
 80037e2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80037e4:	4a57      	ldr	r2, [pc, #348]	; (8003944 <HAL_RCC_OscConfig+0x470>)
 80037e6:	f023 0301 	bic.w	r3, r3, #1
 80037ea:	6713      	str	r3, [r2, #112]	; 0x70
 80037ec:	4b55      	ldr	r3, [pc, #340]	; (8003944 <HAL_RCC_OscConfig+0x470>)
 80037ee:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80037f0:	4a54      	ldr	r2, [pc, #336]	; (8003944 <HAL_RCC_OscConfig+0x470>)
 80037f2:	f023 0304 	bic.w	r3, r3, #4
 80037f6:	6713      	str	r3, [r2, #112]	; 0x70
 80037f8:	687b      	ldr	r3, [r7, #4]
 80037fa:	689b      	ldr	r3, [r3, #8]
 80037fc:	2b00      	cmp	r3, #0
 80037fe:	d015      	beq.n	800382c <HAL_RCC_OscConfig+0x358>
 8003800:	f7fe fba0 	bl	8001f44 <HAL_GetTick>
 8003804:	6138      	str	r0, [r7, #16]
 8003806:	e00a      	b.n	800381e <HAL_RCC_OscConfig+0x34a>
 8003808:	f7fe fb9c 	bl	8001f44 <HAL_GetTick>
 800380c:	4602      	mov	r2, r0
 800380e:	693b      	ldr	r3, [r7, #16]
 8003810:	1ad3      	subs	r3, r2, r3
 8003812:	f241 3288 	movw	r2, #5000	; 0x1388
 8003816:	4293      	cmp	r3, r2
 8003818:	d901      	bls.n	800381e <HAL_RCC_OscConfig+0x34a>
 800381a:	2303      	movs	r3, #3
 800381c:	e0cb      	b.n	80039b6 <HAL_RCC_OscConfig+0x4e2>
 800381e:	4b49      	ldr	r3, [pc, #292]	; (8003944 <HAL_RCC_OscConfig+0x470>)
 8003820:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003822:	f003 0302 	and.w	r3, r3, #2
 8003826:	2b00      	cmp	r3, #0
 8003828:	d0ee      	beq.n	8003808 <HAL_RCC_OscConfig+0x334>
 800382a:	e014      	b.n	8003856 <HAL_RCC_OscConfig+0x382>
 800382c:	f7fe fb8a 	bl	8001f44 <HAL_GetTick>
 8003830:	6138      	str	r0, [r7, #16]
 8003832:	e00a      	b.n	800384a <HAL_RCC_OscConfig+0x376>
 8003834:	f7fe fb86 	bl	8001f44 <HAL_GetTick>
 8003838:	4602      	mov	r2, r0
 800383a:	693b      	ldr	r3, [r7, #16]
 800383c:	1ad3      	subs	r3, r2, r3
 800383e:	f241 3288 	movw	r2, #5000	; 0x1388
 8003842:	4293      	cmp	r3, r2
 8003844:	d901      	bls.n	800384a <HAL_RCC_OscConfig+0x376>
 8003846:	2303      	movs	r3, #3
 8003848:	e0b5      	b.n	80039b6 <HAL_RCC_OscConfig+0x4e2>
 800384a:	4b3e      	ldr	r3, [pc, #248]	; (8003944 <HAL_RCC_OscConfig+0x470>)
 800384c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800384e:	f003 0302 	and.w	r3, r3, #2
 8003852:	2b00      	cmp	r3, #0
 8003854:	d1ee      	bne.n	8003834 <HAL_RCC_OscConfig+0x360>
 8003856:	7dfb      	ldrb	r3, [r7, #23]
 8003858:	2b01      	cmp	r3, #1
 800385a:	d105      	bne.n	8003868 <HAL_RCC_OscConfig+0x394>
 800385c:	4b39      	ldr	r3, [pc, #228]	; (8003944 <HAL_RCC_OscConfig+0x470>)
 800385e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003860:	4a38      	ldr	r2, [pc, #224]	; (8003944 <HAL_RCC_OscConfig+0x470>)
 8003862:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8003866:	6413      	str	r3, [r2, #64]	; 0x40
 8003868:	687b      	ldr	r3, [r7, #4]
 800386a:	699b      	ldr	r3, [r3, #24]
 800386c:	2b00      	cmp	r3, #0
 800386e:	f000 80a1 	beq.w	80039b4 <HAL_RCC_OscConfig+0x4e0>
 8003872:	4b34      	ldr	r3, [pc, #208]	; (8003944 <HAL_RCC_OscConfig+0x470>)
 8003874:	689b      	ldr	r3, [r3, #8]
 8003876:	f003 030c 	and.w	r3, r3, #12
 800387a:	2b08      	cmp	r3, #8
 800387c:	d05c      	beq.n	8003938 <HAL_RCC_OscConfig+0x464>
 800387e:	687b      	ldr	r3, [r7, #4]
 8003880:	699b      	ldr	r3, [r3, #24]
 8003882:	2b02      	cmp	r3, #2
 8003884:	d141      	bne.n	800390a <HAL_RCC_OscConfig+0x436>
 8003886:	4b31      	ldr	r3, [pc, #196]	; (800394c <HAL_RCC_OscConfig+0x478>)
 8003888:	2200      	movs	r2, #0
 800388a:	601a      	str	r2, [r3, #0]
 800388c:	f7fe fb5a 	bl	8001f44 <HAL_GetTick>
 8003890:	6138      	str	r0, [r7, #16]
 8003892:	e008      	b.n	80038a6 <HAL_RCC_OscConfig+0x3d2>
 8003894:	f7fe fb56 	bl	8001f44 <HAL_GetTick>
 8003898:	4602      	mov	r2, r0
 800389a:	693b      	ldr	r3, [r7, #16]
 800389c:	1ad3      	subs	r3, r2, r3
 800389e:	2b02      	cmp	r3, #2
 80038a0:	d901      	bls.n	80038a6 <HAL_RCC_OscConfig+0x3d2>
 80038a2:	2303      	movs	r3, #3
 80038a4:	e087      	b.n	80039b6 <HAL_RCC_OscConfig+0x4e2>
 80038a6:	4b27      	ldr	r3, [pc, #156]	; (8003944 <HAL_RCC_OscConfig+0x470>)
 80038a8:	681b      	ldr	r3, [r3, #0]
 80038aa:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80038ae:	2b00      	cmp	r3, #0
 80038b0:	d1f0      	bne.n	8003894 <HAL_RCC_OscConfig+0x3c0>
 80038b2:	687b      	ldr	r3, [r7, #4]
 80038b4:	69da      	ldr	r2, [r3, #28]
 80038b6:	687b      	ldr	r3, [r7, #4]
 80038b8:	6a1b      	ldr	r3, [r3, #32]
 80038ba:	431a      	orrs	r2, r3
 80038bc:	687b      	ldr	r3, [r7, #4]
 80038be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038c0:	019b      	lsls	r3, r3, #6
 80038c2:	431a      	orrs	r2, r3
 80038c4:	687b      	ldr	r3, [r7, #4]
 80038c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80038c8:	085b      	lsrs	r3, r3, #1
 80038ca:	3b01      	subs	r3, #1
 80038cc:	041b      	lsls	r3, r3, #16
 80038ce:	431a      	orrs	r2, r3
 80038d0:	687b      	ldr	r3, [r7, #4]
 80038d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80038d4:	061b      	lsls	r3, r3, #24
 80038d6:	491b      	ldr	r1, [pc, #108]	; (8003944 <HAL_RCC_OscConfig+0x470>)
 80038d8:	4313      	orrs	r3, r2
 80038da:	604b      	str	r3, [r1, #4]
 80038dc:	4b1b      	ldr	r3, [pc, #108]	; (800394c <HAL_RCC_OscConfig+0x478>)
 80038de:	2201      	movs	r2, #1
 80038e0:	601a      	str	r2, [r3, #0]
 80038e2:	f7fe fb2f 	bl	8001f44 <HAL_GetTick>
 80038e6:	6138      	str	r0, [r7, #16]
 80038e8:	e008      	b.n	80038fc <HAL_RCC_OscConfig+0x428>
 80038ea:	f7fe fb2b 	bl	8001f44 <HAL_GetTick>
 80038ee:	4602      	mov	r2, r0
 80038f0:	693b      	ldr	r3, [r7, #16]
 80038f2:	1ad3      	subs	r3, r2, r3
 80038f4:	2b02      	cmp	r3, #2
 80038f6:	d901      	bls.n	80038fc <HAL_RCC_OscConfig+0x428>
 80038f8:	2303      	movs	r3, #3
 80038fa:	e05c      	b.n	80039b6 <HAL_RCC_OscConfig+0x4e2>
 80038fc:	4b11      	ldr	r3, [pc, #68]	; (8003944 <HAL_RCC_OscConfig+0x470>)
 80038fe:	681b      	ldr	r3, [r3, #0]
 8003900:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003904:	2b00      	cmp	r3, #0
 8003906:	d0f0      	beq.n	80038ea <HAL_RCC_OscConfig+0x416>
 8003908:	e054      	b.n	80039b4 <HAL_RCC_OscConfig+0x4e0>
 800390a:	4b10      	ldr	r3, [pc, #64]	; (800394c <HAL_RCC_OscConfig+0x478>)
 800390c:	2200      	movs	r2, #0
 800390e:	601a      	str	r2, [r3, #0]
 8003910:	f7fe fb18 	bl	8001f44 <HAL_GetTick>
 8003914:	6138      	str	r0, [r7, #16]
 8003916:	e008      	b.n	800392a <HAL_RCC_OscConfig+0x456>
 8003918:	f7fe fb14 	bl	8001f44 <HAL_GetTick>
 800391c:	4602      	mov	r2, r0
 800391e:	693b      	ldr	r3, [r7, #16]
 8003920:	1ad3      	subs	r3, r2, r3
 8003922:	2b02      	cmp	r3, #2
 8003924:	d901      	bls.n	800392a <HAL_RCC_OscConfig+0x456>
 8003926:	2303      	movs	r3, #3
 8003928:	e045      	b.n	80039b6 <HAL_RCC_OscConfig+0x4e2>
 800392a:	4b06      	ldr	r3, [pc, #24]	; (8003944 <HAL_RCC_OscConfig+0x470>)
 800392c:	681b      	ldr	r3, [r3, #0]
 800392e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003932:	2b00      	cmp	r3, #0
 8003934:	d1f0      	bne.n	8003918 <HAL_RCC_OscConfig+0x444>
 8003936:	e03d      	b.n	80039b4 <HAL_RCC_OscConfig+0x4e0>
 8003938:	687b      	ldr	r3, [r7, #4]
 800393a:	699b      	ldr	r3, [r3, #24]
 800393c:	2b01      	cmp	r3, #1
 800393e:	d107      	bne.n	8003950 <HAL_RCC_OscConfig+0x47c>
 8003940:	2301      	movs	r3, #1
 8003942:	e038      	b.n	80039b6 <HAL_RCC_OscConfig+0x4e2>
 8003944:	40023800 	.word	0x40023800
 8003948:	40007000 	.word	0x40007000
 800394c:	42470060 	.word	0x42470060
 8003950:	4b1b      	ldr	r3, [pc, #108]	; (80039c0 <HAL_RCC_OscConfig+0x4ec>)
 8003952:	685b      	ldr	r3, [r3, #4]
 8003954:	60fb      	str	r3, [r7, #12]
 8003956:	687b      	ldr	r3, [r7, #4]
 8003958:	699b      	ldr	r3, [r3, #24]
 800395a:	2b01      	cmp	r3, #1
 800395c:	d028      	beq.n	80039b0 <HAL_RCC_OscConfig+0x4dc>
 800395e:	68fb      	ldr	r3, [r7, #12]
 8003960:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8003964:	687b      	ldr	r3, [r7, #4]
 8003966:	69db      	ldr	r3, [r3, #28]
 8003968:	429a      	cmp	r2, r3
 800396a:	d121      	bne.n	80039b0 <HAL_RCC_OscConfig+0x4dc>
 800396c:	68fb      	ldr	r3, [r7, #12]
 800396e:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8003972:	687b      	ldr	r3, [r7, #4]
 8003974:	6a1b      	ldr	r3, [r3, #32]
 8003976:	429a      	cmp	r2, r3
 8003978:	d11a      	bne.n	80039b0 <HAL_RCC_OscConfig+0x4dc>
 800397a:	68fa      	ldr	r2, [r7, #12]
 800397c:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8003980:	4013      	ands	r3, r2
 8003982:	687a      	ldr	r2, [r7, #4]
 8003984:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8003986:	0192      	lsls	r2, r2, #6
 8003988:	4293      	cmp	r3, r2
 800398a:	d111      	bne.n	80039b0 <HAL_RCC_OscConfig+0x4dc>
 800398c:	68fb      	ldr	r3, [r7, #12]
 800398e:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8003992:	687b      	ldr	r3, [r7, #4]
 8003994:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003996:	085b      	lsrs	r3, r3, #1
 8003998:	3b01      	subs	r3, #1
 800399a:	041b      	lsls	r3, r3, #16
 800399c:	429a      	cmp	r2, r3
 800399e:	d107      	bne.n	80039b0 <HAL_RCC_OscConfig+0x4dc>
 80039a0:	68fb      	ldr	r3, [r7, #12]
 80039a2:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 80039a6:	687b      	ldr	r3, [r7, #4]
 80039a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80039aa:	061b      	lsls	r3, r3, #24
 80039ac:	429a      	cmp	r2, r3
 80039ae:	d001      	beq.n	80039b4 <HAL_RCC_OscConfig+0x4e0>
 80039b0:	2301      	movs	r3, #1
 80039b2:	e000      	b.n	80039b6 <HAL_RCC_OscConfig+0x4e2>
 80039b4:	2300      	movs	r3, #0
 80039b6:	4618      	mov	r0, r3
 80039b8:	3718      	adds	r7, #24
 80039ba:	46bd      	mov	sp, r7
 80039bc:	bd80      	pop	{r7, pc}
 80039be:	bf00      	nop
 80039c0:	40023800 	.word	0x40023800

080039c4 <HAL_RCC_ClockConfig>:
 80039c4:	b580      	push	{r7, lr}
 80039c6:	b084      	sub	sp, #16
 80039c8:	af00      	add	r7, sp, #0
 80039ca:	6078      	str	r0, [r7, #4]
 80039cc:	6039      	str	r1, [r7, #0]
 80039ce:	687b      	ldr	r3, [r7, #4]
 80039d0:	2b00      	cmp	r3, #0
 80039d2:	d101      	bne.n	80039d8 <HAL_RCC_ClockConfig+0x14>
 80039d4:	2301      	movs	r3, #1
 80039d6:	e0cc      	b.n	8003b72 <HAL_RCC_ClockConfig+0x1ae>
 80039d8:	4b68      	ldr	r3, [pc, #416]	; (8003b7c <HAL_RCC_ClockConfig+0x1b8>)
 80039da:	681b      	ldr	r3, [r3, #0]
 80039dc:	f003 030f 	and.w	r3, r3, #15
 80039e0:	683a      	ldr	r2, [r7, #0]
 80039e2:	429a      	cmp	r2, r3
 80039e4:	d90c      	bls.n	8003a00 <HAL_RCC_ClockConfig+0x3c>
 80039e6:	4b65      	ldr	r3, [pc, #404]	; (8003b7c <HAL_RCC_ClockConfig+0x1b8>)
 80039e8:	683a      	ldr	r2, [r7, #0]
 80039ea:	b2d2      	uxtb	r2, r2
 80039ec:	701a      	strb	r2, [r3, #0]
 80039ee:	4b63      	ldr	r3, [pc, #396]	; (8003b7c <HAL_RCC_ClockConfig+0x1b8>)
 80039f0:	681b      	ldr	r3, [r3, #0]
 80039f2:	f003 030f 	and.w	r3, r3, #15
 80039f6:	683a      	ldr	r2, [r7, #0]
 80039f8:	429a      	cmp	r2, r3
 80039fa:	d001      	beq.n	8003a00 <HAL_RCC_ClockConfig+0x3c>
 80039fc:	2301      	movs	r3, #1
 80039fe:	e0b8      	b.n	8003b72 <HAL_RCC_ClockConfig+0x1ae>
 8003a00:	687b      	ldr	r3, [r7, #4]
 8003a02:	681b      	ldr	r3, [r3, #0]
 8003a04:	f003 0302 	and.w	r3, r3, #2
 8003a08:	2b00      	cmp	r3, #0
 8003a0a:	d020      	beq.n	8003a4e <HAL_RCC_ClockConfig+0x8a>
 8003a0c:	687b      	ldr	r3, [r7, #4]
 8003a0e:	681b      	ldr	r3, [r3, #0]
 8003a10:	f003 0304 	and.w	r3, r3, #4
 8003a14:	2b00      	cmp	r3, #0
 8003a16:	d005      	beq.n	8003a24 <HAL_RCC_ClockConfig+0x60>
 8003a18:	4b59      	ldr	r3, [pc, #356]	; (8003b80 <HAL_RCC_ClockConfig+0x1bc>)
 8003a1a:	689b      	ldr	r3, [r3, #8]
 8003a1c:	4a58      	ldr	r2, [pc, #352]	; (8003b80 <HAL_RCC_ClockConfig+0x1bc>)
 8003a1e:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8003a22:	6093      	str	r3, [r2, #8]
 8003a24:	687b      	ldr	r3, [r7, #4]
 8003a26:	681b      	ldr	r3, [r3, #0]
 8003a28:	f003 0308 	and.w	r3, r3, #8
 8003a2c:	2b00      	cmp	r3, #0
 8003a2e:	d005      	beq.n	8003a3c <HAL_RCC_ClockConfig+0x78>
 8003a30:	4b53      	ldr	r3, [pc, #332]	; (8003b80 <HAL_RCC_ClockConfig+0x1bc>)
 8003a32:	689b      	ldr	r3, [r3, #8]
 8003a34:	4a52      	ldr	r2, [pc, #328]	; (8003b80 <HAL_RCC_ClockConfig+0x1bc>)
 8003a36:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8003a3a:	6093      	str	r3, [r2, #8]
 8003a3c:	4b50      	ldr	r3, [pc, #320]	; (8003b80 <HAL_RCC_ClockConfig+0x1bc>)
 8003a3e:	689b      	ldr	r3, [r3, #8]
 8003a40:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8003a44:	687b      	ldr	r3, [r7, #4]
 8003a46:	689b      	ldr	r3, [r3, #8]
 8003a48:	494d      	ldr	r1, [pc, #308]	; (8003b80 <HAL_RCC_ClockConfig+0x1bc>)
 8003a4a:	4313      	orrs	r3, r2
 8003a4c:	608b      	str	r3, [r1, #8]
 8003a4e:	687b      	ldr	r3, [r7, #4]
 8003a50:	681b      	ldr	r3, [r3, #0]
 8003a52:	f003 0301 	and.w	r3, r3, #1
 8003a56:	2b00      	cmp	r3, #0
 8003a58:	d044      	beq.n	8003ae4 <HAL_RCC_ClockConfig+0x120>
 8003a5a:	687b      	ldr	r3, [r7, #4]
 8003a5c:	685b      	ldr	r3, [r3, #4]
 8003a5e:	2b01      	cmp	r3, #1
 8003a60:	d107      	bne.n	8003a72 <HAL_RCC_ClockConfig+0xae>
 8003a62:	4b47      	ldr	r3, [pc, #284]	; (8003b80 <HAL_RCC_ClockConfig+0x1bc>)
 8003a64:	681b      	ldr	r3, [r3, #0]
 8003a66:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003a6a:	2b00      	cmp	r3, #0
 8003a6c:	d119      	bne.n	8003aa2 <HAL_RCC_ClockConfig+0xde>
 8003a6e:	2301      	movs	r3, #1
 8003a70:	e07f      	b.n	8003b72 <HAL_RCC_ClockConfig+0x1ae>
 8003a72:	687b      	ldr	r3, [r7, #4]
 8003a74:	685b      	ldr	r3, [r3, #4]
 8003a76:	2b02      	cmp	r3, #2
 8003a78:	d003      	beq.n	8003a82 <HAL_RCC_ClockConfig+0xbe>
 8003a7a:	687b      	ldr	r3, [r7, #4]
 8003a7c:	685b      	ldr	r3, [r3, #4]
 8003a7e:	2b03      	cmp	r3, #3
 8003a80:	d107      	bne.n	8003a92 <HAL_RCC_ClockConfig+0xce>
 8003a82:	4b3f      	ldr	r3, [pc, #252]	; (8003b80 <HAL_RCC_ClockConfig+0x1bc>)
 8003a84:	681b      	ldr	r3, [r3, #0]
 8003a86:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003a8a:	2b00      	cmp	r3, #0
 8003a8c:	d109      	bne.n	8003aa2 <HAL_RCC_ClockConfig+0xde>
 8003a8e:	2301      	movs	r3, #1
 8003a90:	e06f      	b.n	8003b72 <HAL_RCC_ClockConfig+0x1ae>
 8003a92:	4b3b      	ldr	r3, [pc, #236]	; (8003b80 <HAL_RCC_ClockConfig+0x1bc>)
 8003a94:	681b      	ldr	r3, [r3, #0]
 8003a96:	f003 0302 	and.w	r3, r3, #2
 8003a9a:	2b00      	cmp	r3, #0
 8003a9c:	d101      	bne.n	8003aa2 <HAL_RCC_ClockConfig+0xde>
 8003a9e:	2301      	movs	r3, #1
 8003aa0:	e067      	b.n	8003b72 <HAL_RCC_ClockConfig+0x1ae>
 8003aa2:	4b37      	ldr	r3, [pc, #220]	; (8003b80 <HAL_RCC_ClockConfig+0x1bc>)
 8003aa4:	689b      	ldr	r3, [r3, #8]
 8003aa6:	f023 0203 	bic.w	r2, r3, #3
 8003aaa:	687b      	ldr	r3, [r7, #4]
 8003aac:	685b      	ldr	r3, [r3, #4]
 8003aae:	4934      	ldr	r1, [pc, #208]	; (8003b80 <HAL_RCC_ClockConfig+0x1bc>)
 8003ab0:	4313      	orrs	r3, r2
 8003ab2:	608b      	str	r3, [r1, #8]
 8003ab4:	f7fe fa46 	bl	8001f44 <HAL_GetTick>
 8003ab8:	60f8      	str	r0, [r7, #12]
 8003aba:	e00a      	b.n	8003ad2 <HAL_RCC_ClockConfig+0x10e>
 8003abc:	f7fe fa42 	bl	8001f44 <HAL_GetTick>
 8003ac0:	4602      	mov	r2, r0
 8003ac2:	68fb      	ldr	r3, [r7, #12]
 8003ac4:	1ad3      	subs	r3, r2, r3
 8003ac6:	f241 3288 	movw	r2, #5000	; 0x1388
 8003aca:	4293      	cmp	r3, r2
 8003acc:	d901      	bls.n	8003ad2 <HAL_RCC_ClockConfig+0x10e>
 8003ace:	2303      	movs	r3, #3
 8003ad0:	e04f      	b.n	8003b72 <HAL_RCC_ClockConfig+0x1ae>
 8003ad2:	4b2b      	ldr	r3, [pc, #172]	; (8003b80 <HAL_RCC_ClockConfig+0x1bc>)
 8003ad4:	689b      	ldr	r3, [r3, #8]
 8003ad6:	f003 020c 	and.w	r2, r3, #12
 8003ada:	687b      	ldr	r3, [r7, #4]
 8003adc:	685b      	ldr	r3, [r3, #4]
 8003ade:	009b      	lsls	r3, r3, #2
 8003ae0:	429a      	cmp	r2, r3
 8003ae2:	d1eb      	bne.n	8003abc <HAL_RCC_ClockConfig+0xf8>
 8003ae4:	4b25      	ldr	r3, [pc, #148]	; (8003b7c <HAL_RCC_ClockConfig+0x1b8>)
 8003ae6:	681b      	ldr	r3, [r3, #0]
 8003ae8:	f003 030f 	and.w	r3, r3, #15
 8003aec:	683a      	ldr	r2, [r7, #0]
 8003aee:	429a      	cmp	r2, r3
 8003af0:	d20c      	bcs.n	8003b0c <HAL_RCC_ClockConfig+0x148>
 8003af2:	4b22      	ldr	r3, [pc, #136]	; (8003b7c <HAL_RCC_ClockConfig+0x1b8>)
 8003af4:	683a      	ldr	r2, [r7, #0]
 8003af6:	b2d2      	uxtb	r2, r2
 8003af8:	701a      	strb	r2, [r3, #0]
 8003afa:	4b20      	ldr	r3, [pc, #128]	; (8003b7c <HAL_RCC_ClockConfig+0x1b8>)
 8003afc:	681b      	ldr	r3, [r3, #0]
 8003afe:	f003 030f 	and.w	r3, r3, #15
 8003b02:	683a      	ldr	r2, [r7, #0]
 8003b04:	429a      	cmp	r2, r3
 8003b06:	d001      	beq.n	8003b0c <HAL_RCC_ClockConfig+0x148>
 8003b08:	2301      	movs	r3, #1
 8003b0a:	e032      	b.n	8003b72 <HAL_RCC_ClockConfig+0x1ae>
 8003b0c:	687b      	ldr	r3, [r7, #4]
 8003b0e:	681b      	ldr	r3, [r3, #0]
 8003b10:	f003 0304 	and.w	r3, r3, #4
 8003b14:	2b00      	cmp	r3, #0
 8003b16:	d008      	beq.n	8003b2a <HAL_RCC_ClockConfig+0x166>
 8003b18:	4b19      	ldr	r3, [pc, #100]	; (8003b80 <HAL_RCC_ClockConfig+0x1bc>)
 8003b1a:	689b      	ldr	r3, [r3, #8]
 8003b1c:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8003b20:	687b      	ldr	r3, [r7, #4]
 8003b22:	68db      	ldr	r3, [r3, #12]
 8003b24:	4916      	ldr	r1, [pc, #88]	; (8003b80 <HAL_RCC_ClockConfig+0x1bc>)
 8003b26:	4313      	orrs	r3, r2
 8003b28:	608b      	str	r3, [r1, #8]
 8003b2a:	687b      	ldr	r3, [r7, #4]
 8003b2c:	681b      	ldr	r3, [r3, #0]
 8003b2e:	f003 0308 	and.w	r3, r3, #8
 8003b32:	2b00      	cmp	r3, #0
 8003b34:	d009      	beq.n	8003b4a <HAL_RCC_ClockConfig+0x186>
 8003b36:	4b12      	ldr	r3, [pc, #72]	; (8003b80 <HAL_RCC_ClockConfig+0x1bc>)
 8003b38:	689b      	ldr	r3, [r3, #8]
 8003b3a:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8003b3e:	687b      	ldr	r3, [r7, #4]
 8003b40:	691b      	ldr	r3, [r3, #16]
 8003b42:	00db      	lsls	r3, r3, #3
 8003b44:	490e      	ldr	r1, [pc, #56]	; (8003b80 <HAL_RCC_ClockConfig+0x1bc>)
 8003b46:	4313      	orrs	r3, r2
 8003b48:	608b      	str	r3, [r1, #8]
 8003b4a:	f000 f821 	bl	8003b90 <HAL_RCC_GetSysClockFreq>
 8003b4e:	4602      	mov	r2, r0
 8003b50:	4b0b      	ldr	r3, [pc, #44]	; (8003b80 <HAL_RCC_ClockConfig+0x1bc>)
 8003b52:	689b      	ldr	r3, [r3, #8]
 8003b54:	091b      	lsrs	r3, r3, #4
 8003b56:	f003 030f 	and.w	r3, r3, #15
 8003b5a:	490a      	ldr	r1, [pc, #40]	; (8003b84 <HAL_RCC_ClockConfig+0x1c0>)
 8003b5c:	5ccb      	ldrb	r3, [r1, r3]
 8003b5e:	fa22 f303 	lsr.w	r3, r2, r3
 8003b62:	4a09      	ldr	r2, [pc, #36]	; (8003b88 <HAL_RCC_ClockConfig+0x1c4>)
 8003b64:	6013      	str	r3, [r2, #0]
 8003b66:	4b09      	ldr	r3, [pc, #36]	; (8003b8c <HAL_RCC_ClockConfig+0x1c8>)
 8003b68:	681b      	ldr	r3, [r3, #0]
 8003b6a:	4618      	mov	r0, r3
 8003b6c:	f7fe f9a6 	bl	8001ebc <HAL_InitTick>
 8003b70:	2300      	movs	r3, #0
 8003b72:	4618      	mov	r0, r3
 8003b74:	3710      	adds	r7, #16
 8003b76:	46bd      	mov	sp, r7
 8003b78:	bd80      	pop	{r7, pc}
 8003b7a:	bf00      	nop
 8003b7c:	40023c00 	.word	0x40023c00
 8003b80:	40023800 	.word	0x40023800
 8003b84:	0800ad48 	.word	0x0800ad48
 8003b88:	20000000 	.word	0x20000000
 8003b8c:	20000004 	.word	0x20000004

08003b90 <HAL_RCC_GetSysClockFreq>:
 8003b90:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8003b94:	b094      	sub	sp, #80	; 0x50
 8003b96:	af00      	add	r7, sp, #0
 8003b98:	2300      	movs	r3, #0
 8003b9a:	647b      	str	r3, [r7, #68]	; 0x44
 8003b9c:	2300      	movs	r3, #0
 8003b9e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003ba0:	2300      	movs	r3, #0
 8003ba2:	643b      	str	r3, [r7, #64]	; 0x40
 8003ba4:	2300      	movs	r3, #0
 8003ba6:	64bb      	str	r3, [r7, #72]	; 0x48
 8003ba8:	4b79      	ldr	r3, [pc, #484]	; (8003d90 <HAL_RCC_GetSysClockFreq+0x200>)
 8003baa:	689b      	ldr	r3, [r3, #8]
 8003bac:	f003 030c 	and.w	r3, r3, #12
 8003bb0:	2b08      	cmp	r3, #8
 8003bb2:	d00d      	beq.n	8003bd0 <HAL_RCC_GetSysClockFreq+0x40>
 8003bb4:	2b08      	cmp	r3, #8
 8003bb6:	f200 80e1 	bhi.w	8003d7c <HAL_RCC_GetSysClockFreq+0x1ec>
 8003bba:	2b00      	cmp	r3, #0
 8003bbc:	d002      	beq.n	8003bc4 <HAL_RCC_GetSysClockFreq+0x34>
 8003bbe:	2b04      	cmp	r3, #4
 8003bc0:	d003      	beq.n	8003bca <HAL_RCC_GetSysClockFreq+0x3a>
 8003bc2:	e0db      	b.n	8003d7c <HAL_RCC_GetSysClockFreq+0x1ec>
 8003bc4:	4b73      	ldr	r3, [pc, #460]	; (8003d94 <HAL_RCC_GetSysClockFreq+0x204>)
 8003bc6:	64bb      	str	r3, [r7, #72]	; 0x48
 8003bc8:	e0db      	b.n	8003d82 <HAL_RCC_GetSysClockFreq+0x1f2>
 8003bca:	4b73      	ldr	r3, [pc, #460]	; (8003d98 <HAL_RCC_GetSysClockFreq+0x208>)
 8003bcc:	64bb      	str	r3, [r7, #72]	; 0x48
 8003bce:	e0d8      	b.n	8003d82 <HAL_RCC_GetSysClockFreq+0x1f2>
 8003bd0:	4b6f      	ldr	r3, [pc, #444]	; (8003d90 <HAL_RCC_GetSysClockFreq+0x200>)
 8003bd2:	685b      	ldr	r3, [r3, #4]
 8003bd4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8003bd8:	647b      	str	r3, [r7, #68]	; 0x44
 8003bda:	4b6d      	ldr	r3, [pc, #436]	; (8003d90 <HAL_RCC_GetSysClockFreq+0x200>)
 8003bdc:	685b      	ldr	r3, [r3, #4]
 8003bde:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8003be2:	2b00      	cmp	r3, #0
 8003be4:	d063      	beq.n	8003cae <HAL_RCC_GetSysClockFreq+0x11e>
 8003be6:	4b6a      	ldr	r3, [pc, #424]	; (8003d90 <HAL_RCC_GetSysClockFreq+0x200>)
 8003be8:	685b      	ldr	r3, [r3, #4]
 8003bea:	099b      	lsrs	r3, r3, #6
 8003bec:	2200      	movs	r2, #0
 8003bee:	63bb      	str	r3, [r7, #56]	; 0x38
 8003bf0:	63fa      	str	r2, [r7, #60]	; 0x3c
 8003bf2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003bf4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003bf8:	633b      	str	r3, [r7, #48]	; 0x30
 8003bfa:	2300      	movs	r3, #0
 8003bfc:	637b      	str	r3, [r7, #52]	; 0x34
 8003bfe:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 8003c02:	4622      	mov	r2, r4
 8003c04:	462b      	mov	r3, r5
 8003c06:	f04f 0000 	mov.w	r0, #0
 8003c0a:	f04f 0100 	mov.w	r1, #0
 8003c0e:	0159      	lsls	r1, r3, #5
 8003c10:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003c14:	0150      	lsls	r0, r2, #5
 8003c16:	4602      	mov	r2, r0
 8003c18:	460b      	mov	r3, r1
 8003c1a:	4621      	mov	r1, r4
 8003c1c:	1a51      	subs	r1, r2, r1
 8003c1e:	6139      	str	r1, [r7, #16]
 8003c20:	4629      	mov	r1, r5
 8003c22:	eb63 0301 	sbc.w	r3, r3, r1
 8003c26:	617b      	str	r3, [r7, #20]
 8003c28:	f04f 0200 	mov.w	r2, #0
 8003c2c:	f04f 0300 	mov.w	r3, #0
 8003c30:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8003c34:	4659      	mov	r1, fp
 8003c36:	018b      	lsls	r3, r1, #6
 8003c38:	4651      	mov	r1, sl
 8003c3a:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8003c3e:	4651      	mov	r1, sl
 8003c40:	018a      	lsls	r2, r1, #6
 8003c42:	4651      	mov	r1, sl
 8003c44:	ebb2 0801 	subs.w	r8, r2, r1
 8003c48:	4659      	mov	r1, fp
 8003c4a:	eb63 0901 	sbc.w	r9, r3, r1
 8003c4e:	f04f 0200 	mov.w	r2, #0
 8003c52:	f04f 0300 	mov.w	r3, #0
 8003c56:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8003c5a:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8003c5e:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8003c62:	4690      	mov	r8, r2
 8003c64:	4699      	mov	r9, r3
 8003c66:	4623      	mov	r3, r4
 8003c68:	eb18 0303 	adds.w	r3, r8, r3
 8003c6c:	60bb      	str	r3, [r7, #8]
 8003c6e:	462b      	mov	r3, r5
 8003c70:	eb49 0303 	adc.w	r3, r9, r3
 8003c74:	60fb      	str	r3, [r7, #12]
 8003c76:	f04f 0200 	mov.w	r2, #0
 8003c7a:	f04f 0300 	mov.w	r3, #0
 8003c7e:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8003c82:	4629      	mov	r1, r5
 8003c84:	024b      	lsls	r3, r1, #9
 8003c86:	4621      	mov	r1, r4
 8003c88:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8003c8c:	4621      	mov	r1, r4
 8003c8e:	024a      	lsls	r2, r1, #9
 8003c90:	4610      	mov	r0, r2
 8003c92:	4619      	mov	r1, r3
 8003c94:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003c96:	2200      	movs	r2, #0
 8003c98:	62bb      	str	r3, [r7, #40]	; 0x28
 8003c9a:	62fa      	str	r2, [r7, #44]	; 0x2c
 8003c9c:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8003ca0:	f7fc fb0e 	bl	80002c0 <__aeabi_uldivmod>
 8003ca4:	4602      	mov	r2, r0
 8003ca6:	460b      	mov	r3, r1
 8003ca8:	4613      	mov	r3, r2
 8003caa:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003cac:	e058      	b.n	8003d60 <HAL_RCC_GetSysClockFreq+0x1d0>
 8003cae:	4b38      	ldr	r3, [pc, #224]	; (8003d90 <HAL_RCC_GetSysClockFreq+0x200>)
 8003cb0:	685b      	ldr	r3, [r3, #4]
 8003cb2:	099b      	lsrs	r3, r3, #6
 8003cb4:	2200      	movs	r2, #0
 8003cb6:	4618      	mov	r0, r3
 8003cb8:	4611      	mov	r1, r2
 8003cba:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8003cbe:	623b      	str	r3, [r7, #32]
 8003cc0:	2300      	movs	r3, #0
 8003cc2:	627b      	str	r3, [r7, #36]	; 0x24
 8003cc4:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8003cc8:	4642      	mov	r2, r8
 8003cca:	464b      	mov	r3, r9
 8003ccc:	f04f 0000 	mov.w	r0, #0
 8003cd0:	f04f 0100 	mov.w	r1, #0
 8003cd4:	0159      	lsls	r1, r3, #5
 8003cd6:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003cda:	0150      	lsls	r0, r2, #5
 8003cdc:	4602      	mov	r2, r0
 8003cde:	460b      	mov	r3, r1
 8003ce0:	4641      	mov	r1, r8
 8003ce2:	ebb2 0a01 	subs.w	sl, r2, r1
 8003ce6:	4649      	mov	r1, r9
 8003ce8:	eb63 0b01 	sbc.w	fp, r3, r1
 8003cec:	f04f 0200 	mov.w	r2, #0
 8003cf0:	f04f 0300 	mov.w	r3, #0
 8003cf4:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8003cf8:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8003cfc:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8003d00:	ebb2 040a 	subs.w	r4, r2, sl
 8003d04:	eb63 050b 	sbc.w	r5, r3, fp
 8003d08:	f04f 0200 	mov.w	r2, #0
 8003d0c:	f04f 0300 	mov.w	r3, #0
 8003d10:	00eb      	lsls	r3, r5, #3
 8003d12:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8003d16:	00e2      	lsls	r2, r4, #3
 8003d18:	4614      	mov	r4, r2
 8003d1a:	461d      	mov	r5, r3
 8003d1c:	4643      	mov	r3, r8
 8003d1e:	18e3      	adds	r3, r4, r3
 8003d20:	603b      	str	r3, [r7, #0]
 8003d22:	464b      	mov	r3, r9
 8003d24:	eb45 0303 	adc.w	r3, r5, r3
 8003d28:	607b      	str	r3, [r7, #4]
 8003d2a:	f04f 0200 	mov.w	r2, #0
 8003d2e:	f04f 0300 	mov.w	r3, #0
 8003d32:	e9d7 4500 	ldrd	r4, r5, [r7]
 8003d36:	4629      	mov	r1, r5
 8003d38:	028b      	lsls	r3, r1, #10
 8003d3a:	4621      	mov	r1, r4
 8003d3c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8003d40:	4621      	mov	r1, r4
 8003d42:	028a      	lsls	r2, r1, #10
 8003d44:	4610      	mov	r0, r2
 8003d46:	4619      	mov	r1, r3
 8003d48:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003d4a:	2200      	movs	r2, #0
 8003d4c:	61bb      	str	r3, [r7, #24]
 8003d4e:	61fa      	str	r2, [r7, #28]
 8003d50:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8003d54:	f7fc fab4 	bl	80002c0 <__aeabi_uldivmod>
 8003d58:	4602      	mov	r2, r0
 8003d5a:	460b      	mov	r3, r1
 8003d5c:	4613      	mov	r3, r2
 8003d5e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003d60:	4b0b      	ldr	r3, [pc, #44]	; (8003d90 <HAL_RCC_GetSysClockFreq+0x200>)
 8003d62:	685b      	ldr	r3, [r3, #4]
 8003d64:	0c1b      	lsrs	r3, r3, #16
 8003d66:	f003 0303 	and.w	r3, r3, #3
 8003d6a:	3301      	adds	r3, #1
 8003d6c:	005b      	lsls	r3, r3, #1
 8003d6e:	643b      	str	r3, [r7, #64]	; 0x40
 8003d70:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8003d72:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8003d74:	fbb2 f3f3 	udiv	r3, r2, r3
 8003d78:	64bb      	str	r3, [r7, #72]	; 0x48
 8003d7a:	e002      	b.n	8003d82 <HAL_RCC_GetSysClockFreq+0x1f2>
 8003d7c:	4b05      	ldr	r3, [pc, #20]	; (8003d94 <HAL_RCC_GetSysClockFreq+0x204>)
 8003d7e:	64bb      	str	r3, [r7, #72]	; 0x48
 8003d80:	bf00      	nop
 8003d82:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003d84:	4618      	mov	r0, r3
 8003d86:	3750      	adds	r7, #80	; 0x50
 8003d88:	46bd      	mov	sp, r7
 8003d8a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8003d8e:	bf00      	nop
 8003d90:	40023800 	.word	0x40023800
 8003d94:	00f42400 	.word	0x00f42400
 8003d98:	007a1200 	.word	0x007a1200

08003d9c <HAL_RCC_GetHCLKFreq>:
 8003d9c:	b480      	push	{r7}
 8003d9e:	af00      	add	r7, sp, #0
 8003da0:	4b03      	ldr	r3, [pc, #12]	; (8003db0 <HAL_RCC_GetHCLKFreq+0x14>)
 8003da2:	681b      	ldr	r3, [r3, #0]
 8003da4:	4618      	mov	r0, r3
 8003da6:	46bd      	mov	sp, r7
 8003da8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003dac:	4770      	bx	lr
 8003dae:	bf00      	nop
 8003db0:	20000000 	.word	0x20000000

08003db4 <HAL_RCC_GetPCLK1Freq>:
 8003db4:	b580      	push	{r7, lr}
 8003db6:	af00      	add	r7, sp, #0
 8003db8:	f7ff fff0 	bl	8003d9c <HAL_RCC_GetHCLKFreq>
 8003dbc:	4602      	mov	r2, r0
 8003dbe:	4b05      	ldr	r3, [pc, #20]	; (8003dd4 <HAL_RCC_GetPCLK1Freq+0x20>)
 8003dc0:	689b      	ldr	r3, [r3, #8]
 8003dc2:	0a9b      	lsrs	r3, r3, #10
 8003dc4:	f003 0307 	and.w	r3, r3, #7
 8003dc8:	4903      	ldr	r1, [pc, #12]	; (8003dd8 <HAL_RCC_GetPCLK1Freq+0x24>)
 8003dca:	5ccb      	ldrb	r3, [r1, r3]
 8003dcc:	fa22 f303 	lsr.w	r3, r2, r3
 8003dd0:	4618      	mov	r0, r3
 8003dd2:	bd80      	pop	{r7, pc}
 8003dd4:	40023800 	.word	0x40023800
 8003dd8:	0800ad58 	.word	0x0800ad58

08003ddc <HAL_RCC_GetPCLK2Freq>:
 8003ddc:	b580      	push	{r7, lr}
 8003dde:	af00      	add	r7, sp, #0
 8003de0:	f7ff ffdc 	bl	8003d9c <HAL_RCC_GetHCLKFreq>
 8003de4:	4602      	mov	r2, r0
 8003de6:	4b05      	ldr	r3, [pc, #20]	; (8003dfc <HAL_RCC_GetPCLK2Freq+0x20>)
 8003de8:	689b      	ldr	r3, [r3, #8]
 8003dea:	0b5b      	lsrs	r3, r3, #13
 8003dec:	f003 0307 	and.w	r3, r3, #7
 8003df0:	4903      	ldr	r1, [pc, #12]	; (8003e00 <HAL_RCC_GetPCLK2Freq+0x24>)
 8003df2:	5ccb      	ldrb	r3, [r1, r3]
 8003df4:	fa22 f303 	lsr.w	r3, r2, r3
 8003df8:	4618      	mov	r0, r3
 8003dfa:	bd80      	pop	{r7, pc}
 8003dfc:	40023800 	.word	0x40023800
 8003e00:	0800ad58 	.word	0x0800ad58

08003e04 <HAL_TIM_Base_Init>:
 8003e04:	b580      	push	{r7, lr}
 8003e06:	b082      	sub	sp, #8
 8003e08:	af00      	add	r7, sp, #0
 8003e0a:	6078      	str	r0, [r7, #4]
 8003e0c:	687b      	ldr	r3, [r7, #4]
 8003e0e:	2b00      	cmp	r3, #0
 8003e10:	d101      	bne.n	8003e16 <HAL_TIM_Base_Init+0x12>
 8003e12:	2301      	movs	r3, #1
 8003e14:	e041      	b.n	8003e9a <HAL_TIM_Base_Init+0x96>
 8003e16:	687b      	ldr	r3, [r7, #4]
 8003e18:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003e1c:	b2db      	uxtb	r3, r3
 8003e1e:	2b00      	cmp	r3, #0
 8003e20:	d106      	bne.n	8003e30 <HAL_TIM_Base_Init+0x2c>
 8003e22:	687b      	ldr	r3, [r7, #4]
 8003e24:	2200      	movs	r2, #0
 8003e26:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003e2a:	6878      	ldr	r0, [r7, #4]
 8003e2c:	f7fd fa6c 	bl	8001308 <HAL_TIM_Base_MspInit>
 8003e30:	687b      	ldr	r3, [r7, #4]
 8003e32:	2202      	movs	r2, #2
 8003e34:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003e38:	687b      	ldr	r3, [r7, #4]
 8003e3a:	681a      	ldr	r2, [r3, #0]
 8003e3c:	687b      	ldr	r3, [r7, #4]
 8003e3e:	3304      	adds	r3, #4
 8003e40:	4619      	mov	r1, r3
 8003e42:	4610      	mov	r0, r2
 8003e44:	f000 fad8 	bl	80043f8 <TIM_Base_SetConfig>
 8003e48:	687b      	ldr	r3, [r7, #4]
 8003e4a:	2201      	movs	r2, #1
 8003e4c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8003e50:	687b      	ldr	r3, [r7, #4]
 8003e52:	2201      	movs	r2, #1
 8003e54:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003e58:	687b      	ldr	r3, [r7, #4]
 8003e5a:	2201      	movs	r2, #1
 8003e5c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8003e60:	687b      	ldr	r3, [r7, #4]
 8003e62:	2201      	movs	r2, #1
 8003e64:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003e68:	687b      	ldr	r3, [r7, #4]
 8003e6a:	2201      	movs	r2, #1
 8003e6c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003e70:	687b      	ldr	r3, [r7, #4]
 8003e72:	2201      	movs	r2, #1
 8003e74:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003e78:	687b      	ldr	r3, [r7, #4]
 8003e7a:	2201      	movs	r2, #1
 8003e7c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8003e80:	687b      	ldr	r3, [r7, #4]
 8003e82:	2201      	movs	r2, #1
 8003e84:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8003e88:	687b      	ldr	r3, [r7, #4]
 8003e8a:	2201      	movs	r2, #1
 8003e8c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8003e90:	687b      	ldr	r3, [r7, #4]
 8003e92:	2201      	movs	r2, #1
 8003e94:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003e98:	2300      	movs	r3, #0
 8003e9a:	4618      	mov	r0, r3
 8003e9c:	3708      	adds	r7, #8
 8003e9e:	46bd      	mov	sp, r7
 8003ea0:	bd80      	pop	{r7, pc}

08003ea2 <HAL_TIM_PWM_Init>:
 8003ea2:	b580      	push	{r7, lr}
 8003ea4:	b082      	sub	sp, #8
 8003ea6:	af00      	add	r7, sp, #0
 8003ea8:	6078      	str	r0, [r7, #4]
 8003eaa:	687b      	ldr	r3, [r7, #4]
 8003eac:	2b00      	cmp	r3, #0
 8003eae:	d101      	bne.n	8003eb4 <HAL_TIM_PWM_Init+0x12>
 8003eb0:	2301      	movs	r3, #1
 8003eb2:	e041      	b.n	8003f38 <HAL_TIM_PWM_Init+0x96>
 8003eb4:	687b      	ldr	r3, [r7, #4]
 8003eb6:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003eba:	b2db      	uxtb	r3, r3
 8003ebc:	2b00      	cmp	r3, #0
 8003ebe:	d106      	bne.n	8003ece <HAL_TIM_PWM_Init+0x2c>
 8003ec0:	687b      	ldr	r3, [r7, #4]
 8003ec2:	2200      	movs	r2, #0
 8003ec4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003ec8:	6878      	ldr	r0, [r7, #4]
 8003eca:	f000 f839 	bl	8003f40 <HAL_TIM_PWM_MspInit>
 8003ece:	687b      	ldr	r3, [r7, #4]
 8003ed0:	2202      	movs	r2, #2
 8003ed2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003ed6:	687b      	ldr	r3, [r7, #4]
 8003ed8:	681a      	ldr	r2, [r3, #0]
 8003eda:	687b      	ldr	r3, [r7, #4]
 8003edc:	3304      	adds	r3, #4
 8003ede:	4619      	mov	r1, r3
 8003ee0:	4610      	mov	r0, r2
 8003ee2:	f000 fa89 	bl	80043f8 <TIM_Base_SetConfig>
 8003ee6:	687b      	ldr	r3, [r7, #4]
 8003ee8:	2201      	movs	r2, #1
 8003eea:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8003eee:	687b      	ldr	r3, [r7, #4]
 8003ef0:	2201      	movs	r2, #1
 8003ef2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003ef6:	687b      	ldr	r3, [r7, #4]
 8003ef8:	2201      	movs	r2, #1
 8003efa:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8003efe:	687b      	ldr	r3, [r7, #4]
 8003f00:	2201      	movs	r2, #1
 8003f02:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003f06:	687b      	ldr	r3, [r7, #4]
 8003f08:	2201      	movs	r2, #1
 8003f0a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003f0e:	687b      	ldr	r3, [r7, #4]
 8003f10:	2201      	movs	r2, #1
 8003f12:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003f16:	687b      	ldr	r3, [r7, #4]
 8003f18:	2201      	movs	r2, #1
 8003f1a:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8003f1e:	687b      	ldr	r3, [r7, #4]
 8003f20:	2201      	movs	r2, #1
 8003f22:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8003f26:	687b      	ldr	r3, [r7, #4]
 8003f28:	2201      	movs	r2, #1
 8003f2a:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8003f2e:	687b      	ldr	r3, [r7, #4]
 8003f30:	2201      	movs	r2, #1
 8003f32:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003f36:	2300      	movs	r3, #0
 8003f38:	4618      	mov	r0, r3
 8003f3a:	3708      	adds	r7, #8
 8003f3c:	46bd      	mov	sp, r7
 8003f3e:	bd80      	pop	{r7, pc}

08003f40 <HAL_TIM_PWM_MspInit>:
 8003f40:	b480      	push	{r7}
 8003f42:	b083      	sub	sp, #12
 8003f44:	af00      	add	r7, sp, #0
 8003f46:	6078      	str	r0, [r7, #4]
 8003f48:	bf00      	nop
 8003f4a:	370c      	adds	r7, #12
 8003f4c:	46bd      	mov	sp, r7
 8003f4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f52:	4770      	bx	lr

08003f54 <HAL_TIM_PWM_Start>:
 8003f54:	b580      	push	{r7, lr}
 8003f56:	b084      	sub	sp, #16
 8003f58:	af00      	add	r7, sp, #0
 8003f5a:	6078      	str	r0, [r7, #4]
 8003f5c:	6039      	str	r1, [r7, #0]
 8003f5e:	683b      	ldr	r3, [r7, #0]
 8003f60:	2b00      	cmp	r3, #0
 8003f62:	d109      	bne.n	8003f78 <HAL_TIM_PWM_Start+0x24>
 8003f64:	687b      	ldr	r3, [r7, #4]
 8003f66:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8003f6a:	b2db      	uxtb	r3, r3
 8003f6c:	2b01      	cmp	r3, #1
 8003f6e:	bf14      	ite	ne
 8003f70:	2301      	movne	r3, #1
 8003f72:	2300      	moveq	r3, #0
 8003f74:	b2db      	uxtb	r3, r3
 8003f76:	e022      	b.n	8003fbe <HAL_TIM_PWM_Start+0x6a>
 8003f78:	683b      	ldr	r3, [r7, #0]
 8003f7a:	2b04      	cmp	r3, #4
 8003f7c:	d109      	bne.n	8003f92 <HAL_TIM_PWM_Start+0x3e>
 8003f7e:	687b      	ldr	r3, [r7, #4]
 8003f80:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8003f84:	b2db      	uxtb	r3, r3
 8003f86:	2b01      	cmp	r3, #1
 8003f88:	bf14      	ite	ne
 8003f8a:	2301      	movne	r3, #1
 8003f8c:	2300      	moveq	r3, #0
 8003f8e:	b2db      	uxtb	r3, r3
 8003f90:	e015      	b.n	8003fbe <HAL_TIM_PWM_Start+0x6a>
 8003f92:	683b      	ldr	r3, [r7, #0]
 8003f94:	2b08      	cmp	r3, #8
 8003f96:	d109      	bne.n	8003fac <HAL_TIM_PWM_Start+0x58>
 8003f98:	687b      	ldr	r3, [r7, #4]
 8003f9a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8003f9e:	b2db      	uxtb	r3, r3
 8003fa0:	2b01      	cmp	r3, #1
 8003fa2:	bf14      	ite	ne
 8003fa4:	2301      	movne	r3, #1
 8003fa6:	2300      	moveq	r3, #0
 8003fa8:	b2db      	uxtb	r3, r3
 8003faa:	e008      	b.n	8003fbe <HAL_TIM_PWM_Start+0x6a>
 8003fac:	687b      	ldr	r3, [r7, #4]
 8003fae:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003fb2:	b2db      	uxtb	r3, r3
 8003fb4:	2b01      	cmp	r3, #1
 8003fb6:	bf14      	ite	ne
 8003fb8:	2301      	movne	r3, #1
 8003fba:	2300      	moveq	r3, #0
 8003fbc:	b2db      	uxtb	r3, r3
 8003fbe:	2b00      	cmp	r3, #0
 8003fc0:	d001      	beq.n	8003fc6 <HAL_TIM_PWM_Start+0x72>
 8003fc2:	2301      	movs	r3, #1
 8003fc4:	e07c      	b.n	80040c0 <HAL_TIM_PWM_Start+0x16c>
 8003fc6:	683b      	ldr	r3, [r7, #0]
 8003fc8:	2b00      	cmp	r3, #0
 8003fca:	d104      	bne.n	8003fd6 <HAL_TIM_PWM_Start+0x82>
 8003fcc:	687b      	ldr	r3, [r7, #4]
 8003fce:	2202      	movs	r2, #2
 8003fd0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003fd4:	e013      	b.n	8003ffe <HAL_TIM_PWM_Start+0xaa>
 8003fd6:	683b      	ldr	r3, [r7, #0]
 8003fd8:	2b04      	cmp	r3, #4
 8003fda:	d104      	bne.n	8003fe6 <HAL_TIM_PWM_Start+0x92>
 8003fdc:	687b      	ldr	r3, [r7, #4]
 8003fde:	2202      	movs	r2, #2
 8003fe0:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8003fe4:	e00b      	b.n	8003ffe <HAL_TIM_PWM_Start+0xaa>
 8003fe6:	683b      	ldr	r3, [r7, #0]
 8003fe8:	2b08      	cmp	r3, #8
 8003fea:	d104      	bne.n	8003ff6 <HAL_TIM_PWM_Start+0xa2>
 8003fec:	687b      	ldr	r3, [r7, #4]
 8003fee:	2202      	movs	r2, #2
 8003ff0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003ff4:	e003      	b.n	8003ffe <HAL_TIM_PWM_Start+0xaa>
 8003ff6:	687b      	ldr	r3, [r7, #4]
 8003ff8:	2202      	movs	r2, #2
 8003ffa:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003ffe:	687b      	ldr	r3, [r7, #4]
 8004000:	681b      	ldr	r3, [r3, #0]
 8004002:	2201      	movs	r2, #1
 8004004:	6839      	ldr	r1, [r7, #0]
 8004006:	4618      	mov	r0, r3
 8004008:	f000 fce0 	bl	80049cc <TIM_CCxChannelCmd>
 800400c:	687b      	ldr	r3, [r7, #4]
 800400e:	681b      	ldr	r3, [r3, #0]
 8004010:	4a2d      	ldr	r2, [pc, #180]	; (80040c8 <HAL_TIM_PWM_Start+0x174>)
 8004012:	4293      	cmp	r3, r2
 8004014:	d004      	beq.n	8004020 <HAL_TIM_PWM_Start+0xcc>
 8004016:	687b      	ldr	r3, [r7, #4]
 8004018:	681b      	ldr	r3, [r3, #0]
 800401a:	4a2c      	ldr	r2, [pc, #176]	; (80040cc <HAL_TIM_PWM_Start+0x178>)
 800401c:	4293      	cmp	r3, r2
 800401e:	d101      	bne.n	8004024 <HAL_TIM_PWM_Start+0xd0>
 8004020:	2301      	movs	r3, #1
 8004022:	e000      	b.n	8004026 <HAL_TIM_PWM_Start+0xd2>
 8004024:	2300      	movs	r3, #0
 8004026:	2b00      	cmp	r3, #0
 8004028:	d007      	beq.n	800403a <HAL_TIM_PWM_Start+0xe6>
 800402a:	687b      	ldr	r3, [r7, #4]
 800402c:	681b      	ldr	r3, [r3, #0]
 800402e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8004030:	687b      	ldr	r3, [r7, #4]
 8004032:	681b      	ldr	r3, [r3, #0]
 8004034:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8004038:	645a      	str	r2, [r3, #68]	; 0x44
 800403a:	687b      	ldr	r3, [r7, #4]
 800403c:	681b      	ldr	r3, [r3, #0]
 800403e:	4a22      	ldr	r2, [pc, #136]	; (80040c8 <HAL_TIM_PWM_Start+0x174>)
 8004040:	4293      	cmp	r3, r2
 8004042:	d022      	beq.n	800408a <HAL_TIM_PWM_Start+0x136>
 8004044:	687b      	ldr	r3, [r7, #4]
 8004046:	681b      	ldr	r3, [r3, #0]
 8004048:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800404c:	d01d      	beq.n	800408a <HAL_TIM_PWM_Start+0x136>
 800404e:	687b      	ldr	r3, [r7, #4]
 8004050:	681b      	ldr	r3, [r3, #0]
 8004052:	4a1f      	ldr	r2, [pc, #124]	; (80040d0 <HAL_TIM_PWM_Start+0x17c>)
 8004054:	4293      	cmp	r3, r2
 8004056:	d018      	beq.n	800408a <HAL_TIM_PWM_Start+0x136>
 8004058:	687b      	ldr	r3, [r7, #4]
 800405a:	681b      	ldr	r3, [r3, #0]
 800405c:	4a1d      	ldr	r2, [pc, #116]	; (80040d4 <HAL_TIM_PWM_Start+0x180>)
 800405e:	4293      	cmp	r3, r2
 8004060:	d013      	beq.n	800408a <HAL_TIM_PWM_Start+0x136>
 8004062:	687b      	ldr	r3, [r7, #4]
 8004064:	681b      	ldr	r3, [r3, #0]
 8004066:	4a1c      	ldr	r2, [pc, #112]	; (80040d8 <HAL_TIM_PWM_Start+0x184>)
 8004068:	4293      	cmp	r3, r2
 800406a:	d00e      	beq.n	800408a <HAL_TIM_PWM_Start+0x136>
 800406c:	687b      	ldr	r3, [r7, #4]
 800406e:	681b      	ldr	r3, [r3, #0]
 8004070:	4a16      	ldr	r2, [pc, #88]	; (80040cc <HAL_TIM_PWM_Start+0x178>)
 8004072:	4293      	cmp	r3, r2
 8004074:	d009      	beq.n	800408a <HAL_TIM_PWM_Start+0x136>
 8004076:	687b      	ldr	r3, [r7, #4]
 8004078:	681b      	ldr	r3, [r3, #0]
 800407a:	4a18      	ldr	r2, [pc, #96]	; (80040dc <HAL_TIM_PWM_Start+0x188>)
 800407c:	4293      	cmp	r3, r2
 800407e:	d004      	beq.n	800408a <HAL_TIM_PWM_Start+0x136>
 8004080:	687b      	ldr	r3, [r7, #4]
 8004082:	681b      	ldr	r3, [r3, #0]
 8004084:	4a16      	ldr	r2, [pc, #88]	; (80040e0 <HAL_TIM_PWM_Start+0x18c>)
 8004086:	4293      	cmp	r3, r2
 8004088:	d111      	bne.n	80040ae <HAL_TIM_PWM_Start+0x15a>
 800408a:	687b      	ldr	r3, [r7, #4]
 800408c:	681b      	ldr	r3, [r3, #0]
 800408e:	689b      	ldr	r3, [r3, #8]
 8004090:	f003 0307 	and.w	r3, r3, #7
 8004094:	60fb      	str	r3, [r7, #12]
 8004096:	68fb      	ldr	r3, [r7, #12]
 8004098:	2b06      	cmp	r3, #6
 800409a:	d010      	beq.n	80040be <HAL_TIM_PWM_Start+0x16a>
 800409c:	687b      	ldr	r3, [r7, #4]
 800409e:	681b      	ldr	r3, [r3, #0]
 80040a0:	681a      	ldr	r2, [r3, #0]
 80040a2:	687b      	ldr	r3, [r7, #4]
 80040a4:	681b      	ldr	r3, [r3, #0]
 80040a6:	f042 0201 	orr.w	r2, r2, #1
 80040aa:	601a      	str	r2, [r3, #0]
 80040ac:	e007      	b.n	80040be <HAL_TIM_PWM_Start+0x16a>
 80040ae:	687b      	ldr	r3, [r7, #4]
 80040b0:	681b      	ldr	r3, [r3, #0]
 80040b2:	681a      	ldr	r2, [r3, #0]
 80040b4:	687b      	ldr	r3, [r7, #4]
 80040b6:	681b      	ldr	r3, [r3, #0]
 80040b8:	f042 0201 	orr.w	r2, r2, #1
 80040bc:	601a      	str	r2, [r3, #0]
 80040be:	2300      	movs	r3, #0
 80040c0:	4618      	mov	r0, r3
 80040c2:	3710      	adds	r7, #16
 80040c4:	46bd      	mov	sp, r7
 80040c6:	bd80      	pop	{r7, pc}
 80040c8:	40010000 	.word	0x40010000
 80040cc:	40010400 	.word	0x40010400
 80040d0:	40000400 	.word	0x40000400
 80040d4:	40000800 	.word	0x40000800
 80040d8:	40000c00 	.word	0x40000c00
 80040dc:	40014000 	.word	0x40014000
 80040e0:	40001800 	.word	0x40001800

080040e4 <HAL_TIM_PWM_ConfigChannel>:
 80040e4:	b580      	push	{r7, lr}
 80040e6:	b086      	sub	sp, #24
 80040e8:	af00      	add	r7, sp, #0
 80040ea:	60f8      	str	r0, [r7, #12]
 80040ec:	60b9      	str	r1, [r7, #8]
 80040ee:	607a      	str	r2, [r7, #4]
 80040f0:	2300      	movs	r3, #0
 80040f2:	75fb      	strb	r3, [r7, #23]
 80040f4:	68fb      	ldr	r3, [r7, #12]
 80040f6:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80040fa:	2b01      	cmp	r3, #1
 80040fc:	d101      	bne.n	8004102 <HAL_TIM_PWM_ConfigChannel+0x1e>
 80040fe:	2302      	movs	r3, #2
 8004100:	e0ae      	b.n	8004260 <HAL_TIM_PWM_ConfigChannel+0x17c>
 8004102:	68fb      	ldr	r3, [r7, #12]
 8004104:	2201      	movs	r2, #1
 8004106:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800410a:	687b      	ldr	r3, [r7, #4]
 800410c:	2b0c      	cmp	r3, #12
 800410e:	f200 809f 	bhi.w	8004250 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8004112:	a201      	add	r2, pc, #4	; (adr r2, 8004118 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8004114:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004118:	0800414d 	.word	0x0800414d
 800411c:	08004251 	.word	0x08004251
 8004120:	08004251 	.word	0x08004251
 8004124:	08004251 	.word	0x08004251
 8004128:	0800418d 	.word	0x0800418d
 800412c:	08004251 	.word	0x08004251
 8004130:	08004251 	.word	0x08004251
 8004134:	08004251 	.word	0x08004251
 8004138:	080041cf 	.word	0x080041cf
 800413c:	08004251 	.word	0x08004251
 8004140:	08004251 	.word	0x08004251
 8004144:	08004251 	.word	0x08004251
 8004148:	0800420f 	.word	0x0800420f
 800414c:	68fb      	ldr	r3, [r7, #12]
 800414e:	681b      	ldr	r3, [r3, #0]
 8004150:	68b9      	ldr	r1, [r7, #8]
 8004152:	4618      	mov	r0, r3
 8004154:	f000 f9f0 	bl	8004538 <TIM_OC1_SetConfig>
 8004158:	68fb      	ldr	r3, [r7, #12]
 800415a:	681b      	ldr	r3, [r3, #0]
 800415c:	699a      	ldr	r2, [r3, #24]
 800415e:	68fb      	ldr	r3, [r7, #12]
 8004160:	681b      	ldr	r3, [r3, #0]
 8004162:	f042 0208 	orr.w	r2, r2, #8
 8004166:	619a      	str	r2, [r3, #24]
 8004168:	68fb      	ldr	r3, [r7, #12]
 800416a:	681b      	ldr	r3, [r3, #0]
 800416c:	699a      	ldr	r2, [r3, #24]
 800416e:	68fb      	ldr	r3, [r7, #12]
 8004170:	681b      	ldr	r3, [r3, #0]
 8004172:	f022 0204 	bic.w	r2, r2, #4
 8004176:	619a      	str	r2, [r3, #24]
 8004178:	68fb      	ldr	r3, [r7, #12]
 800417a:	681b      	ldr	r3, [r3, #0]
 800417c:	6999      	ldr	r1, [r3, #24]
 800417e:	68bb      	ldr	r3, [r7, #8]
 8004180:	691a      	ldr	r2, [r3, #16]
 8004182:	68fb      	ldr	r3, [r7, #12]
 8004184:	681b      	ldr	r3, [r3, #0]
 8004186:	430a      	orrs	r2, r1
 8004188:	619a      	str	r2, [r3, #24]
 800418a:	e064      	b.n	8004256 <HAL_TIM_PWM_ConfigChannel+0x172>
 800418c:	68fb      	ldr	r3, [r7, #12]
 800418e:	681b      	ldr	r3, [r3, #0]
 8004190:	68b9      	ldr	r1, [r7, #8]
 8004192:	4618      	mov	r0, r3
 8004194:	f000 fa40 	bl	8004618 <TIM_OC2_SetConfig>
 8004198:	68fb      	ldr	r3, [r7, #12]
 800419a:	681b      	ldr	r3, [r3, #0]
 800419c:	699a      	ldr	r2, [r3, #24]
 800419e:	68fb      	ldr	r3, [r7, #12]
 80041a0:	681b      	ldr	r3, [r3, #0]
 80041a2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80041a6:	619a      	str	r2, [r3, #24]
 80041a8:	68fb      	ldr	r3, [r7, #12]
 80041aa:	681b      	ldr	r3, [r3, #0]
 80041ac:	699a      	ldr	r2, [r3, #24]
 80041ae:	68fb      	ldr	r3, [r7, #12]
 80041b0:	681b      	ldr	r3, [r3, #0]
 80041b2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80041b6:	619a      	str	r2, [r3, #24]
 80041b8:	68fb      	ldr	r3, [r7, #12]
 80041ba:	681b      	ldr	r3, [r3, #0]
 80041bc:	6999      	ldr	r1, [r3, #24]
 80041be:	68bb      	ldr	r3, [r7, #8]
 80041c0:	691b      	ldr	r3, [r3, #16]
 80041c2:	021a      	lsls	r2, r3, #8
 80041c4:	68fb      	ldr	r3, [r7, #12]
 80041c6:	681b      	ldr	r3, [r3, #0]
 80041c8:	430a      	orrs	r2, r1
 80041ca:	619a      	str	r2, [r3, #24]
 80041cc:	e043      	b.n	8004256 <HAL_TIM_PWM_ConfigChannel+0x172>
 80041ce:	68fb      	ldr	r3, [r7, #12]
 80041d0:	681b      	ldr	r3, [r3, #0]
 80041d2:	68b9      	ldr	r1, [r7, #8]
 80041d4:	4618      	mov	r0, r3
 80041d6:	f000 fa95 	bl	8004704 <TIM_OC3_SetConfig>
 80041da:	68fb      	ldr	r3, [r7, #12]
 80041dc:	681b      	ldr	r3, [r3, #0]
 80041de:	69da      	ldr	r2, [r3, #28]
 80041e0:	68fb      	ldr	r3, [r7, #12]
 80041e2:	681b      	ldr	r3, [r3, #0]
 80041e4:	f042 0208 	orr.w	r2, r2, #8
 80041e8:	61da      	str	r2, [r3, #28]
 80041ea:	68fb      	ldr	r3, [r7, #12]
 80041ec:	681b      	ldr	r3, [r3, #0]
 80041ee:	69da      	ldr	r2, [r3, #28]
 80041f0:	68fb      	ldr	r3, [r7, #12]
 80041f2:	681b      	ldr	r3, [r3, #0]
 80041f4:	f022 0204 	bic.w	r2, r2, #4
 80041f8:	61da      	str	r2, [r3, #28]
 80041fa:	68fb      	ldr	r3, [r7, #12]
 80041fc:	681b      	ldr	r3, [r3, #0]
 80041fe:	69d9      	ldr	r1, [r3, #28]
 8004200:	68bb      	ldr	r3, [r7, #8]
 8004202:	691a      	ldr	r2, [r3, #16]
 8004204:	68fb      	ldr	r3, [r7, #12]
 8004206:	681b      	ldr	r3, [r3, #0]
 8004208:	430a      	orrs	r2, r1
 800420a:	61da      	str	r2, [r3, #28]
 800420c:	e023      	b.n	8004256 <HAL_TIM_PWM_ConfigChannel+0x172>
 800420e:	68fb      	ldr	r3, [r7, #12]
 8004210:	681b      	ldr	r3, [r3, #0]
 8004212:	68b9      	ldr	r1, [r7, #8]
 8004214:	4618      	mov	r0, r3
 8004216:	f000 fae9 	bl	80047ec <TIM_OC4_SetConfig>
 800421a:	68fb      	ldr	r3, [r7, #12]
 800421c:	681b      	ldr	r3, [r3, #0]
 800421e:	69da      	ldr	r2, [r3, #28]
 8004220:	68fb      	ldr	r3, [r7, #12]
 8004222:	681b      	ldr	r3, [r3, #0]
 8004224:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004228:	61da      	str	r2, [r3, #28]
 800422a:	68fb      	ldr	r3, [r7, #12]
 800422c:	681b      	ldr	r3, [r3, #0]
 800422e:	69da      	ldr	r2, [r3, #28]
 8004230:	68fb      	ldr	r3, [r7, #12]
 8004232:	681b      	ldr	r3, [r3, #0]
 8004234:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004238:	61da      	str	r2, [r3, #28]
 800423a:	68fb      	ldr	r3, [r7, #12]
 800423c:	681b      	ldr	r3, [r3, #0]
 800423e:	69d9      	ldr	r1, [r3, #28]
 8004240:	68bb      	ldr	r3, [r7, #8]
 8004242:	691b      	ldr	r3, [r3, #16]
 8004244:	021a      	lsls	r2, r3, #8
 8004246:	68fb      	ldr	r3, [r7, #12]
 8004248:	681b      	ldr	r3, [r3, #0]
 800424a:	430a      	orrs	r2, r1
 800424c:	61da      	str	r2, [r3, #28]
 800424e:	e002      	b.n	8004256 <HAL_TIM_PWM_ConfigChannel+0x172>
 8004250:	2301      	movs	r3, #1
 8004252:	75fb      	strb	r3, [r7, #23]
 8004254:	bf00      	nop
 8004256:	68fb      	ldr	r3, [r7, #12]
 8004258:	2200      	movs	r2, #0
 800425a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800425e:	7dfb      	ldrb	r3, [r7, #23]
 8004260:	4618      	mov	r0, r3
 8004262:	3718      	adds	r7, #24
 8004264:	46bd      	mov	sp, r7
 8004266:	bd80      	pop	{r7, pc}

08004268 <HAL_TIM_ConfigClockSource>:
 8004268:	b580      	push	{r7, lr}
 800426a:	b084      	sub	sp, #16
 800426c:	af00      	add	r7, sp, #0
 800426e:	6078      	str	r0, [r7, #4]
 8004270:	6039      	str	r1, [r7, #0]
 8004272:	2300      	movs	r3, #0
 8004274:	73fb      	strb	r3, [r7, #15]
 8004276:	687b      	ldr	r3, [r7, #4]
 8004278:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800427c:	2b01      	cmp	r3, #1
 800427e:	d101      	bne.n	8004284 <HAL_TIM_ConfigClockSource+0x1c>
 8004280:	2302      	movs	r3, #2
 8004282:	e0b4      	b.n	80043ee <HAL_TIM_ConfigClockSource+0x186>
 8004284:	687b      	ldr	r3, [r7, #4]
 8004286:	2201      	movs	r2, #1
 8004288:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800428c:	687b      	ldr	r3, [r7, #4]
 800428e:	2202      	movs	r2, #2
 8004290:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004294:	687b      	ldr	r3, [r7, #4]
 8004296:	681b      	ldr	r3, [r3, #0]
 8004298:	689b      	ldr	r3, [r3, #8]
 800429a:	60bb      	str	r3, [r7, #8]
 800429c:	68bb      	ldr	r3, [r7, #8]
 800429e:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 80042a2:	60bb      	str	r3, [r7, #8]
 80042a4:	68bb      	ldr	r3, [r7, #8]
 80042a6:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80042aa:	60bb      	str	r3, [r7, #8]
 80042ac:	687b      	ldr	r3, [r7, #4]
 80042ae:	681b      	ldr	r3, [r3, #0]
 80042b0:	68ba      	ldr	r2, [r7, #8]
 80042b2:	609a      	str	r2, [r3, #8]
 80042b4:	683b      	ldr	r3, [r7, #0]
 80042b6:	681b      	ldr	r3, [r3, #0]
 80042b8:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80042bc:	d03e      	beq.n	800433c <HAL_TIM_ConfigClockSource+0xd4>
 80042be:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80042c2:	f200 8087 	bhi.w	80043d4 <HAL_TIM_ConfigClockSource+0x16c>
 80042c6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80042ca:	f000 8086 	beq.w	80043da <HAL_TIM_ConfigClockSource+0x172>
 80042ce:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80042d2:	d87f      	bhi.n	80043d4 <HAL_TIM_ConfigClockSource+0x16c>
 80042d4:	2b70      	cmp	r3, #112	; 0x70
 80042d6:	d01a      	beq.n	800430e <HAL_TIM_ConfigClockSource+0xa6>
 80042d8:	2b70      	cmp	r3, #112	; 0x70
 80042da:	d87b      	bhi.n	80043d4 <HAL_TIM_ConfigClockSource+0x16c>
 80042dc:	2b60      	cmp	r3, #96	; 0x60
 80042de:	d050      	beq.n	8004382 <HAL_TIM_ConfigClockSource+0x11a>
 80042e0:	2b60      	cmp	r3, #96	; 0x60
 80042e2:	d877      	bhi.n	80043d4 <HAL_TIM_ConfigClockSource+0x16c>
 80042e4:	2b50      	cmp	r3, #80	; 0x50
 80042e6:	d03c      	beq.n	8004362 <HAL_TIM_ConfigClockSource+0xfa>
 80042e8:	2b50      	cmp	r3, #80	; 0x50
 80042ea:	d873      	bhi.n	80043d4 <HAL_TIM_ConfigClockSource+0x16c>
 80042ec:	2b40      	cmp	r3, #64	; 0x40
 80042ee:	d058      	beq.n	80043a2 <HAL_TIM_ConfigClockSource+0x13a>
 80042f0:	2b40      	cmp	r3, #64	; 0x40
 80042f2:	d86f      	bhi.n	80043d4 <HAL_TIM_ConfigClockSource+0x16c>
 80042f4:	2b30      	cmp	r3, #48	; 0x30
 80042f6:	d064      	beq.n	80043c2 <HAL_TIM_ConfigClockSource+0x15a>
 80042f8:	2b30      	cmp	r3, #48	; 0x30
 80042fa:	d86b      	bhi.n	80043d4 <HAL_TIM_ConfigClockSource+0x16c>
 80042fc:	2b20      	cmp	r3, #32
 80042fe:	d060      	beq.n	80043c2 <HAL_TIM_ConfigClockSource+0x15a>
 8004300:	2b20      	cmp	r3, #32
 8004302:	d867      	bhi.n	80043d4 <HAL_TIM_ConfigClockSource+0x16c>
 8004304:	2b00      	cmp	r3, #0
 8004306:	d05c      	beq.n	80043c2 <HAL_TIM_ConfigClockSource+0x15a>
 8004308:	2b10      	cmp	r3, #16
 800430a:	d05a      	beq.n	80043c2 <HAL_TIM_ConfigClockSource+0x15a>
 800430c:	e062      	b.n	80043d4 <HAL_TIM_ConfigClockSource+0x16c>
 800430e:	687b      	ldr	r3, [r7, #4]
 8004310:	6818      	ldr	r0, [r3, #0]
 8004312:	683b      	ldr	r3, [r7, #0]
 8004314:	6899      	ldr	r1, [r3, #8]
 8004316:	683b      	ldr	r3, [r7, #0]
 8004318:	685a      	ldr	r2, [r3, #4]
 800431a:	683b      	ldr	r3, [r7, #0]
 800431c:	68db      	ldr	r3, [r3, #12]
 800431e:	f000 fb35 	bl	800498c <TIM_ETR_SetConfig>
 8004322:	687b      	ldr	r3, [r7, #4]
 8004324:	681b      	ldr	r3, [r3, #0]
 8004326:	689b      	ldr	r3, [r3, #8]
 8004328:	60bb      	str	r3, [r7, #8]
 800432a:	68bb      	ldr	r3, [r7, #8]
 800432c:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8004330:	60bb      	str	r3, [r7, #8]
 8004332:	687b      	ldr	r3, [r7, #4]
 8004334:	681b      	ldr	r3, [r3, #0]
 8004336:	68ba      	ldr	r2, [r7, #8]
 8004338:	609a      	str	r2, [r3, #8]
 800433a:	e04f      	b.n	80043dc <HAL_TIM_ConfigClockSource+0x174>
 800433c:	687b      	ldr	r3, [r7, #4]
 800433e:	6818      	ldr	r0, [r3, #0]
 8004340:	683b      	ldr	r3, [r7, #0]
 8004342:	6899      	ldr	r1, [r3, #8]
 8004344:	683b      	ldr	r3, [r7, #0]
 8004346:	685a      	ldr	r2, [r3, #4]
 8004348:	683b      	ldr	r3, [r7, #0]
 800434a:	68db      	ldr	r3, [r3, #12]
 800434c:	f000 fb1e 	bl	800498c <TIM_ETR_SetConfig>
 8004350:	687b      	ldr	r3, [r7, #4]
 8004352:	681b      	ldr	r3, [r3, #0]
 8004354:	689a      	ldr	r2, [r3, #8]
 8004356:	687b      	ldr	r3, [r7, #4]
 8004358:	681b      	ldr	r3, [r3, #0]
 800435a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800435e:	609a      	str	r2, [r3, #8]
 8004360:	e03c      	b.n	80043dc <HAL_TIM_ConfigClockSource+0x174>
 8004362:	687b      	ldr	r3, [r7, #4]
 8004364:	6818      	ldr	r0, [r3, #0]
 8004366:	683b      	ldr	r3, [r7, #0]
 8004368:	6859      	ldr	r1, [r3, #4]
 800436a:	683b      	ldr	r3, [r7, #0]
 800436c:	68db      	ldr	r3, [r3, #12]
 800436e:	461a      	mov	r2, r3
 8004370:	f000 fa92 	bl	8004898 <TIM_TI1_ConfigInputStage>
 8004374:	687b      	ldr	r3, [r7, #4]
 8004376:	681b      	ldr	r3, [r3, #0]
 8004378:	2150      	movs	r1, #80	; 0x50
 800437a:	4618      	mov	r0, r3
 800437c:	f000 faeb 	bl	8004956 <TIM_ITRx_SetConfig>
 8004380:	e02c      	b.n	80043dc <HAL_TIM_ConfigClockSource+0x174>
 8004382:	687b      	ldr	r3, [r7, #4]
 8004384:	6818      	ldr	r0, [r3, #0]
 8004386:	683b      	ldr	r3, [r7, #0]
 8004388:	6859      	ldr	r1, [r3, #4]
 800438a:	683b      	ldr	r3, [r7, #0]
 800438c:	68db      	ldr	r3, [r3, #12]
 800438e:	461a      	mov	r2, r3
 8004390:	f000 fab1 	bl	80048f6 <TIM_TI2_ConfigInputStage>
 8004394:	687b      	ldr	r3, [r7, #4]
 8004396:	681b      	ldr	r3, [r3, #0]
 8004398:	2160      	movs	r1, #96	; 0x60
 800439a:	4618      	mov	r0, r3
 800439c:	f000 fadb 	bl	8004956 <TIM_ITRx_SetConfig>
 80043a0:	e01c      	b.n	80043dc <HAL_TIM_ConfigClockSource+0x174>
 80043a2:	687b      	ldr	r3, [r7, #4]
 80043a4:	6818      	ldr	r0, [r3, #0]
 80043a6:	683b      	ldr	r3, [r7, #0]
 80043a8:	6859      	ldr	r1, [r3, #4]
 80043aa:	683b      	ldr	r3, [r7, #0]
 80043ac:	68db      	ldr	r3, [r3, #12]
 80043ae:	461a      	mov	r2, r3
 80043b0:	f000 fa72 	bl	8004898 <TIM_TI1_ConfigInputStage>
 80043b4:	687b      	ldr	r3, [r7, #4]
 80043b6:	681b      	ldr	r3, [r3, #0]
 80043b8:	2140      	movs	r1, #64	; 0x40
 80043ba:	4618      	mov	r0, r3
 80043bc:	f000 facb 	bl	8004956 <TIM_ITRx_SetConfig>
 80043c0:	e00c      	b.n	80043dc <HAL_TIM_ConfigClockSource+0x174>
 80043c2:	687b      	ldr	r3, [r7, #4]
 80043c4:	681a      	ldr	r2, [r3, #0]
 80043c6:	683b      	ldr	r3, [r7, #0]
 80043c8:	681b      	ldr	r3, [r3, #0]
 80043ca:	4619      	mov	r1, r3
 80043cc:	4610      	mov	r0, r2
 80043ce:	f000 fac2 	bl	8004956 <TIM_ITRx_SetConfig>
 80043d2:	e003      	b.n	80043dc <HAL_TIM_ConfigClockSource+0x174>
 80043d4:	2301      	movs	r3, #1
 80043d6:	73fb      	strb	r3, [r7, #15]
 80043d8:	e000      	b.n	80043dc <HAL_TIM_ConfigClockSource+0x174>
 80043da:	bf00      	nop
 80043dc:	687b      	ldr	r3, [r7, #4]
 80043de:	2201      	movs	r2, #1
 80043e0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80043e4:	687b      	ldr	r3, [r7, #4]
 80043e6:	2200      	movs	r2, #0
 80043e8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80043ec:	7bfb      	ldrb	r3, [r7, #15]
 80043ee:	4618      	mov	r0, r3
 80043f0:	3710      	adds	r7, #16
 80043f2:	46bd      	mov	sp, r7
 80043f4:	bd80      	pop	{r7, pc}
	...

080043f8 <TIM_Base_SetConfig>:
 80043f8:	b480      	push	{r7}
 80043fa:	b085      	sub	sp, #20
 80043fc:	af00      	add	r7, sp, #0
 80043fe:	6078      	str	r0, [r7, #4]
 8004400:	6039      	str	r1, [r7, #0]
 8004402:	687b      	ldr	r3, [r7, #4]
 8004404:	681b      	ldr	r3, [r3, #0]
 8004406:	60fb      	str	r3, [r7, #12]
 8004408:	687b      	ldr	r3, [r7, #4]
 800440a:	4a40      	ldr	r2, [pc, #256]	; (800450c <TIM_Base_SetConfig+0x114>)
 800440c:	4293      	cmp	r3, r2
 800440e:	d013      	beq.n	8004438 <TIM_Base_SetConfig+0x40>
 8004410:	687b      	ldr	r3, [r7, #4]
 8004412:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004416:	d00f      	beq.n	8004438 <TIM_Base_SetConfig+0x40>
 8004418:	687b      	ldr	r3, [r7, #4]
 800441a:	4a3d      	ldr	r2, [pc, #244]	; (8004510 <TIM_Base_SetConfig+0x118>)
 800441c:	4293      	cmp	r3, r2
 800441e:	d00b      	beq.n	8004438 <TIM_Base_SetConfig+0x40>
 8004420:	687b      	ldr	r3, [r7, #4]
 8004422:	4a3c      	ldr	r2, [pc, #240]	; (8004514 <TIM_Base_SetConfig+0x11c>)
 8004424:	4293      	cmp	r3, r2
 8004426:	d007      	beq.n	8004438 <TIM_Base_SetConfig+0x40>
 8004428:	687b      	ldr	r3, [r7, #4]
 800442a:	4a3b      	ldr	r2, [pc, #236]	; (8004518 <TIM_Base_SetConfig+0x120>)
 800442c:	4293      	cmp	r3, r2
 800442e:	d003      	beq.n	8004438 <TIM_Base_SetConfig+0x40>
 8004430:	687b      	ldr	r3, [r7, #4]
 8004432:	4a3a      	ldr	r2, [pc, #232]	; (800451c <TIM_Base_SetConfig+0x124>)
 8004434:	4293      	cmp	r3, r2
 8004436:	d108      	bne.n	800444a <TIM_Base_SetConfig+0x52>
 8004438:	68fb      	ldr	r3, [r7, #12]
 800443a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800443e:	60fb      	str	r3, [r7, #12]
 8004440:	683b      	ldr	r3, [r7, #0]
 8004442:	685b      	ldr	r3, [r3, #4]
 8004444:	68fa      	ldr	r2, [r7, #12]
 8004446:	4313      	orrs	r3, r2
 8004448:	60fb      	str	r3, [r7, #12]
 800444a:	687b      	ldr	r3, [r7, #4]
 800444c:	4a2f      	ldr	r2, [pc, #188]	; (800450c <TIM_Base_SetConfig+0x114>)
 800444e:	4293      	cmp	r3, r2
 8004450:	d02b      	beq.n	80044aa <TIM_Base_SetConfig+0xb2>
 8004452:	687b      	ldr	r3, [r7, #4]
 8004454:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004458:	d027      	beq.n	80044aa <TIM_Base_SetConfig+0xb2>
 800445a:	687b      	ldr	r3, [r7, #4]
 800445c:	4a2c      	ldr	r2, [pc, #176]	; (8004510 <TIM_Base_SetConfig+0x118>)
 800445e:	4293      	cmp	r3, r2
 8004460:	d023      	beq.n	80044aa <TIM_Base_SetConfig+0xb2>
 8004462:	687b      	ldr	r3, [r7, #4]
 8004464:	4a2b      	ldr	r2, [pc, #172]	; (8004514 <TIM_Base_SetConfig+0x11c>)
 8004466:	4293      	cmp	r3, r2
 8004468:	d01f      	beq.n	80044aa <TIM_Base_SetConfig+0xb2>
 800446a:	687b      	ldr	r3, [r7, #4]
 800446c:	4a2a      	ldr	r2, [pc, #168]	; (8004518 <TIM_Base_SetConfig+0x120>)
 800446e:	4293      	cmp	r3, r2
 8004470:	d01b      	beq.n	80044aa <TIM_Base_SetConfig+0xb2>
 8004472:	687b      	ldr	r3, [r7, #4]
 8004474:	4a29      	ldr	r2, [pc, #164]	; (800451c <TIM_Base_SetConfig+0x124>)
 8004476:	4293      	cmp	r3, r2
 8004478:	d017      	beq.n	80044aa <TIM_Base_SetConfig+0xb2>
 800447a:	687b      	ldr	r3, [r7, #4]
 800447c:	4a28      	ldr	r2, [pc, #160]	; (8004520 <TIM_Base_SetConfig+0x128>)
 800447e:	4293      	cmp	r3, r2
 8004480:	d013      	beq.n	80044aa <TIM_Base_SetConfig+0xb2>
 8004482:	687b      	ldr	r3, [r7, #4]
 8004484:	4a27      	ldr	r2, [pc, #156]	; (8004524 <TIM_Base_SetConfig+0x12c>)
 8004486:	4293      	cmp	r3, r2
 8004488:	d00f      	beq.n	80044aa <TIM_Base_SetConfig+0xb2>
 800448a:	687b      	ldr	r3, [r7, #4]
 800448c:	4a26      	ldr	r2, [pc, #152]	; (8004528 <TIM_Base_SetConfig+0x130>)
 800448e:	4293      	cmp	r3, r2
 8004490:	d00b      	beq.n	80044aa <TIM_Base_SetConfig+0xb2>
 8004492:	687b      	ldr	r3, [r7, #4]
 8004494:	4a25      	ldr	r2, [pc, #148]	; (800452c <TIM_Base_SetConfig+0x134>)
 8004496:	4293      	cmp	r3, r2
 8004498:	d007      	beq.n	80044aa <TIM_Base_SetConfig+0xb2>
 800449a:	687b      	ldr	r3, [r7, #4]
 800449c:	4a24      	ldr	r2, [pc, #144]	; (8004530 <TIM_Base_SetConfig+0x138>)
 800449e:	4293      	cmp	r3, r2
 80044a0:	d003      	beq.n	80044aa <TIM_Base_SetConfig+0xb2>
 80044a2:	687b      	ldr	r3, [r7, #4]
 80044a4:	4a23      	ldr	r2, [pc, #140]	; (8004534 <TIM_Base_SetConfig+0x13c>)
 80044a6:	4293      	cmp	r3, r2
 80044a8:	d108      	bne.n	80044bc <TIM_Base_SetConfig+0xc4>
 80044aa:	68fb      	ldr	r3, [r7, #12]
 80044ac:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80044b0:	60fb      	str	r3, [r7, #12]
 80044b2:	683b      	ldr	r3, [r7, #0]
 80044b4:	68db      	ldr	r3, [r3, #12]
 80044b6:	68fa      	ldr	r2, [r7, #12]
 80044b8:	4313      	orrs	r3, r2
 80044ba:	60fb      	str	r3, [r7, #12]
 80044bc:	68fb      	ldr	r3, [r7, #12]
 80044be:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80044c2:	683b      	ldr	r3, [r7, #0]
 80044c4:	695b      	ldr	r3, [r3, #20]
 80044c6:	4313      	orrs	r3, r2
 80044c8:	60fb      	str	r3, [r7, #12]
 80044ca:	687b      	ldr	r3, [r7, #4]
 80044cc:	68fa      	ldr	r2, [r7, #12]
 80044ce:	601a      	str	r2, [r3, #0]
 80044d0:	683b      	ldr	r3, [r7, #0]
 80044d2:	689a      	ldr	r2, [r3, #8]
 80044d4:	687b      	ldr	r3, [r7, #4]
 80044d6:	62da      	str	r2, [r3, #44]	; 0x2c
 80044d8:	683b      	ldr	r3, [r7, #0]
 80044da:	681a      	ldr	r2, [r3, #0]
 80044dc:	687b      	ldr	r3, [r7, #4]
 80044de:	629a      	str	r2, [r3, #40]	; 0x28
 80044e0:	687b      	ldr	r3, [r7, #4]
 80044e2:	4a0a      	ldr	r2, [pc, #40]	; (800450c <TIM_Base_SetConfig+0x114>)
 80044e4:	4293      	cmp	r3, r2
 80044e6:	d003      	beq.n	80044f0 <TIM_Base_SetConfig+0xf8>
 80044e8:	687b      	ldr	r3, [r7, #4]
 80044ea:	4a0c      	ldr	r2, [pc, #48]	; (800451c <TIM_Base_SetConfig+0x124>)
 80044ec:	4293      	cmp	r3, r2
 80044ee:	d103      	bne.n	80044f8 <TIM_Base_SetConfig+0x100>
 80044f0:	683b      	ldr	r3, [r7, #0]
 80044f2:	691a      	ldr	r2, [r3, #16]
 80044f4:	687b      	ldr	r3, [r7, #4]
 80044f6:	631a      	str	r2, [r3, #48]	; 0x30
 80044f8:	687b      	ldr	r3, [r7, #4]
 80044fa:	2201      	movs	r2, #1
 80044fc:	615a      	str	r2, [r3, #20]
 80044fe:	bf00      	nop
 8004500:	3714      	adds	r7, #20
 8004502:	46bd      	mov	sp, r7
 8004504:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004508:	4770      	bx	lr
 800450a:	bf00      	nop
 800450c:	40010000 	.word	0x40010000
 8004510:	40000400 	.word	0x40000400
 8004514:	40000800 	.word	0x40000800
 8004518:	40000c00 	.word	0x40000c00
 800451c:	40010400 	.word	0x40010400
 8004520:	40014000 	.word	0x40014000
 8004524:	40014400 	.word	0x40014400
 8004528:	40014800 	.word	0x40014800
 800452c:	40001800 	.word	0x40001800
 8004530:	40001c00 	.word	0x40001c00
 8004534:	40002000 	.word	0x40002000

08004538 <TIM_OC1_SetConfig>:
 8004538:	b480      	push	{r7}
 800453a:	b087      	sub	sp, #28
 800453c:	af00      	add	r7, sp, #0
 800453e:	6078      	str	r0, [r7, #4]
 8004540:	6039      	str	r1, [r7, #0]
 8004542:	687b      	ldr	r3, [r7, #4]
 8004544:	6a1b      	ldr	r3, [r3, #32]
 8004546:	f023 0201 	bic.w	r2, r3, #1
 800454a:	687b      	ldr	r3, [r7, #4]
 800454c:	621a      	str	r2, [r3, #32]
 800454e:	687b      	ldr	r3, [r7, #4]
 8004550:	6a1b      	ldr	r3, [r3, #32]
 8004552:	617b      	str	r3, [r7, #20]
 8004554:	687b      	ldr	r3, [r7, #4]
 8004556:	685b      	ldr	r3, [r3, #4]
 8004558:	613b      	str	r3, [r7, #16]
 800455a:	687b      	ldr	r3, [r7, #4]
 800455c:	699b      	ldr	r3, [r3, #24]
 800455e:	60fb      	str	r3, [r7, #12]
 8004560:	68fb      	ldr	r3, [r7, #12]
 8004562:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004566:	60fb      	str	r3, [r7, #12]
 8004568:	68fb      	ldr	r3, [r7, #12]
 800456a:	f023 0303 	bic.w	r3, r3, #3
 800456e:	60fb      	str	r3, [r7, #12]
 8004570:	683b      	ldr	r3, [r7, #0]
 8004572:	681b      	ldr	r3, [r3, #0]
 8004574:	68fa      	ldr	r2, [r7, #12]
 8004576:	4313      	orrs	r3, r2
 8004578:	60fb      	str	r3, [r7, #12]
 800457a:	697b      	ldr	r3, [r7, #20]
 800457c:	f023 0302 	bic.w	r3, r3, #2
 8004580:	617b      	str	r3, [r7, #20]
 8004582:	683b      	ldr	r3, [r7, #0]
 8004584:	689b      	ldr	r3, [r3, #8]
 8004586:	697a      	ldr	r2, [r7, #20]
 8004588:	4313      	orrs	r3, r2
 800458a:	617b      	str	r3, [r7, #20]
 800458c:	687b      	ldr	r3, [r7, #4]
 800458e:	4a20      	ldr	r2, [pc, #128]	; (8004610 <TIM_OC1_SetConfig+0xd8>)
 8004590:	4293      	cmp	r3, r2
 8004592:	d003      	beq.n	800459c <TIM_OC1_SetConfig+0x64>
 8004594:	687b      	ldr	r3, [r7, #4]
 8004596:	4a1f      	ldr	r2, [pc, #124]	; (8004614 <TIM_OC1_SetConfig+0xdc>)
 8004598:	4293      	cmp	r3, r2
 800459a:	d10c      	bne.n	80045b6 <TIM_OC1_SetConfig+0x7e>
 800459c:	697b      	ldr	r3, [r7, #20]
 800459e:	f023 0308 	bic.w	r3, r3, #8
 80045a2:	617b      	str	r3, [r7, #20]
 80045a4:	683b      	ldr	r3, [r7, #0]
 80045a6:	68db      	ldr	r3, [r3, #12]
 80045a8:	697a      	ldr	r2, [r7, #20]
 80045aa:	4313      	orrs	r3, r2
 80045ac:	617b      	str	r3, [r7, #20]
 80045ae:	697b      	ldr	r3, [r7, #20]
 80045b0:	f023 0304 	bic.w	r3, r3, #4
 80045b4:	617b      	str	r3, [r7, #20]
 80045b6:	687b      	ldr	r3, [r7, #4]
 80045b8:	4a15      	ldr	r2, [pc, #84]	; (8004610 <TIM_OC1_SetConfig+0xd8>)
 80045ba:	4293      	cmp	r3, r2
 80045bc:	d003      	beq.n	80045c6 <TIM_OC1_SetConfig+0x8e>
 80045be:	687b      	ldr	r3, [r7, #4]
 80045c0:	4a14      	ldr	r2, [pc, #80]	; (8004614 <TIM_OC1_SetConfig+0xdc>)
 80045c2:	4293      	cmp	r3, r2
 80045c4:	d111      	bne.n	80045ea <TIM_OC1_SetConfig+0xb2>
 80045c6:	693b      	ldr	r3, [r7, #16]
 80045c8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80045cc:	613b      	str	r3, [r7, #16]
 80045ce:	693b      	ldr	r3, [r7, #16]
 80045d0:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80045d4:	613b      	str	r3, [r7, #16]
 80045d6:	683b      	ldr	r3, [r7, #0]
 80045d8:	695b      	ldr	r3, [r3, #20]
 80045da:	693a      	ldr	r2, [r7, #16]
 80045dc:	4313      	orrs	r3, r2
 80045de:	613b      	str	r3, [r7, #16]
 80045e0:	683b      	ldr	r3, [r7, #0]
 80045e2:	699b      	ldr	r3, [r3, #24]
 80045e4:	693a      	ldr	r2, [r7, #16]
 80045e6:	4313      	orrs	r3, r2
 80045e8:	613b      	str	r3, [r7, #16]
 80045ea:	687b      	ldr	r3, [r7, #4]
 80045ec:	693a      	ldr	r2, [r7, #16]
 80045ee:	605a      	str	r2, [r3, #4]
 80045f0:	687b      	ldr	r3, [r7, #4]
 80045f2:	68fa      	ldr	r2, [r7, #12]
 80045f4:	619a      	str	r2, [r3, #24]
 80045f6:	683b      	ldr	r3, [r7, #0]
 80045f8:	685a      	ldr	r2, [r3, #4]
 80045fa:	687b      	ldr	r3, [r7, #4]
 80045fc:	635a      	str	r2, [r3, #52]	; 0x34
 80045fe:	687b      	ldr	r3, [r7, #4]
 8004600:	697a      	ldr	r2, [r7, #20]
 8004602:	621a      	str	r2, [r3, #32]
 8004604:	bf00      	nop
 8004606:	371c      	adds	r7, #28
 8004608:	46bd      	mov	sp, r7
 800460a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800460e:	4770      	bx	lr
 8004610:	40010000 	.word	0x40010000
 8004614:	40010400 	.word	0x40010400

08004618 <TIM_OC2_SetConfig>:
 8004618:	b480      	push	{r7}
 800461a:	b087      	sub	sp, #28
 800461c:	af00      	add	r7, sp, #0
 800461e:	6078      	str	r0, [r7, #4]
 8004620:	6039      	str	r1, [r7, #0]
 8004622:	687b      	ldr	r3, [r7, #4]
 8004624:	6a1b      	ldr	r3, [r3, #32]
 8004626:	f023 0210 	bic.w	r2, r3, #16
 800462a:	687b      	ldr	r3, [r7, #4]
 800462c:	621a      	str	r2, [r3, #32]
 800462e:	687b      	ldr	r3, [r7, #4]
 8004630:	6a1b      	ldr	r3, [r3, #32]
 8004632:	617b      	str	r3, [r7, #20]
 8004634:	687b      	ldr	r3, [r7, #4]
 8004636:	685b      	ldr	r3, [r3, #4]
 8004638:	613b      	str	r3, [r7, #16]
 800463a:	687b      	ldr	r3, [r7, #4]
 800463c:	699b      	ldr	r3, [r3, #24]
 800463e:	60fb      	str	r3, [r7, #12]
 8004640:	68fb      	ldr	r3, [r7, #12]
 8004642:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8004646:	60fb      	str	r3, [r7, #12]
 8004648:	68fb      	ldr	r3, [r7, #12]
 800464a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800464e:	60fb      	str	r3, [r7, #12]
 8004650:	683b      	ldr	r3, [r7, #0]
 8004652:	681b      	ldr	r3, [r3, #0]
 8004654:	021b      	lsls	r3, r3, #8
 8004656:	68fa      	ldr	r2, [r7, #12]
 8004658:	4313      	orrs	r3, r2
 800465a:	60fb      	str	r3, [r7, #12]
 800465c:	697b      	ldr	r3, [r7, #20]
 800465e:	f023 0320 	bic.w	r3, r3, #32
 8004662:	617b      	str	r3, [r7, #20]
 8004664:	683b      	ldr	r3, [r7, #0]
 8004666:	689b      	ldr	r3, [r3, #8]
 8004668:	011b      	lsls	r3, r3, #4
 800466a:	697a      	ldr	r2, [r7, #20]
 800466c:	4313      	orrs	r3, r2
 800466e:	617b      	str	r3, [r7, #20]
 8004670:	687b      	ldr	r3, [r7, #4]
 8004672:	4a22      	ldr	r2, [pc, #136]	; (80046fc <TIM_OC2_SetConfig+0xe4>)
 8004674:	4293      	cmp	r3, r2
 8004676:	d003      	beq.n	8004680 <TIM_OC2_SetConfig+0x68>
 8004678:	687b      	ldr	r3, [r7, #4]
 800467a:	4a21      	ldr	r2, [pc, #132]	; (8004700 <TIM_OC2_SetConfig+0xe8>)
 800467c:	4293      	cmp	r3, r2
 800467e:	d10d      	bne.n	800469c <TIM_OC2_SetConfig+0x84>
 8004680:	697b      	ldr	r3, [r7, #20]
 8004682:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004686:	617b      	str	r3, [r7, #20]
 8004688:	683b      	ldr	r3, [r7, #0]
 800468a:	68db      	ldr	r3, [r3, #12]
 800468c:	011b      	lsls	r3, r3, #4
 800468e:	697a      	ldr	r2, [r7, #20]
 8004690:	4313      	orrs	r3, r2
 8004692:	617b      	str	r3, [r7, #20]
 8004694:	697b      	ldr	r3, [r7, #20]
 8004696:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800469a:	617b      	str	r3, [r7, #20]
 800469c:	687b      	ldr	r3, [r7, #4]
 800469e:	4a17      	ldr	r2, [pc, #92]	; (80046fc <TIM_OC2_SetConfig+0xe4>)
 80046a0:	4293      	cmp	r3, r2
 80046a2:	d003      	beq.n	80046ac <TIM_OC2_SetConfig+0x94>
 80046a4:	687b      	ldr	r3, [r7, #4]
 80046a6:	4a16      	ldr	r2, [pc, #88]	; (8004700 <TIM_OC2_SetConfig+0xe8>)
 80046a8:	4293      	cmp	r3, r2
 80046aa:	d113      	bne.n	80046d4 <TIM_OC2_SetConfig+0xbc>
 80046ac:	693b      	ldr	r3, [r7, #16]
 80046ae:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80046b2:	613b      	str	r3, [r7, #16]
 80046b4:	693b      	ldr	r3, [r7, #16]
 80046b6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80046ba:	613b      	str	r3, [r7, #16]
 80046bc:	683b      	ldr	r3, [r7, #0]
 80046be:	695b      	ldr	r3, [r3, #20]
 80046c0:	009b      	lsls	r3, r3, #2
 80046c2:	693a      	ldr	r2, [r7, #16]
 80046c4:	4313      	orrs	r3, r2
 80046c6:	613b      	str	r3, [r7, #16]
 80046c8:	683b      	ldr	r3, [r7, #0]
 80046ca:	699b      	ldr	r3, [r3, #24]
 80046cc:	009b      	lsls	r3, r3, #2
 80046ce:	693a      	ldr	r2, [r7, #16]
 80046d0:	4313      	orrs	r3, r2
 80046d2:	613b      	str	r3, [r7, #16]
 80046d4:	687b      	ldr	r3, [r7, #4]
 80046d6:	693a      	ldr	r2, [r7, #16]
 80046d8:	605a      	str	r2, [r3, #4]
 80046da:	687b      	ldr	r3, [r7, #4]
 80046dc:	68fa      	ldr	r2, [r7, #12]
 80046de:	619a      	str	r2, [r3, #24]
 80046e0:	683b      	ldr	r3, [r7, #0]
 80046e2:	685a      	ldr	r2, [r3, #4]
 80046e4:	687b      	ldr	r3, [r7, #4]
 80046e6:	639a      	str	r2, [r3, #56]	; 0x38
 80046e8:	687b      	ldr	r3, [r7, #4]
 80046ea:	697a      	ldr	r2, [r7, #20]
 80046ec:	621a      	str	r2, [r3, #32]
 80046ee:	bf00      	nop
 80046f0:	371c      	adds	r7, #28
 80046f2:	46bd      	mov	sp, r7
 80046f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046f8:	4770      	bx	lr
 80046fa:	bf00      	nop
 80046fc:	40010000 	.word	0x40010000
 8004700:	40010400 	.word	0x40010400

08004704 <TIM_OC3_SetConfig>:
 8004704:	b480      	push	{r7}
 8004706:	b087      	sub	sp, #28
 8004708:	af00      	add	r7, sp, #0
 800470a:	6078      	str	r0, [r7, #4]
 800470c:	6039      	str	r1, [r7, #0]
 800470e:	687b      	ldr	r3, [r7, #4]
 8004710:	6a1b      	ldr	r3, [r3, #32]
 8004712:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8004716:	687b      	ldr	r3, [r7, #4]
 8004718:	621a      	str	r2, [r3, #32]
 800471a:	687b      	ldr	r3, [r7, #4]
 800471c:	6a1b      	ldr	r3, [r3, #32]
 800471e:	617b      	str	r3, [r7, #20]
 8004720:	687b      	ldr	r3, [r7, #4]
 8004722:	685b      	ldr	r3, [r3, #4]
 8004724:	613b      	str	r3, [r7, #16]
 8004726:	687b      	ldr	r3, [r7, #4]
 8004728:	69db      	ldr	r3, [r3, #28]
 800472a:	60fb      	str	r3, [r7, #12]
 800472c:	68fb      	ldr	r3, [r7, #12]
 800472e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004732:	60fb      	str	r3, [r7, #12]
 8004734:	68fb      	ldr	r3, [r7, #12]
 8004736:	f023 0303 	bic.w	r3, r3, #3
 800473a:	60fb      	str	r3, [r7, #12]
 800473c:	683b      	ldr	r3, [r7, #0]
 800473e:	681b      	ldr	r3, [r3, #0]
 8004740:	68fa      	ldr	r2, [r7, #12]
 8004742:	4313      	orrs	r3, r2
 8004744:	60fb      	str	r3, [r7, #12]
 8004746:	697b      	ldr	r3, [r7, #20]
 8004748:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800474c:	617b      	str	r3, [r7, #20]
 800474e:	683b      	ldr	r3, [r7, #0]
 8004750:	689b      	ldr	r3, [r3, #8]
 8004752:	021b      	lsls	r3, r3, #8
 8004754:	697a      	ldr	r2, [r7, #20]
 8004756:	4313      	orrs	r3, r2
 8004758:	617b      	str	r3, [r7, #20]
 800475a:	687b      	ldr	r3, [r7, #4]
 800475c:	4a21      	ldr	r2, [pc, #132]	; (80047e4 <TIM_OC3_SetConfig+0xe0>)
 800475e:	4293      	cmp	r3, r2
 8004760:	d003      	beq.n	800476a <TIM_OC3_SetConfig+0x66>
 8004762:	687b      	ldr	r3, [r7, #4]
 8004764:	4a20      	ldr	r2, [pc, #128]	; (80047e8 <TIM_OC3_SetConfig+0xe4>)
 8004766:	4293      	cmp	r3, r2
 8004768:	d10d      	bne.n	8004786 <TIM_OC3_SetConfig+0x82>
 800476a:	697b      	ldr	r3, [r7, #20]
 800476c:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004770:	617b      	str	r3, [r7, #20]
 8004772:	683b      	ldr	r3, [r7, #0]
 8004774:	68db      	ldr	r3, [r3, #12]
 8004776:	021b      	lsls	r3, r3, #8
 8004778:	697a      	ldr	r2, [r7, #20]
 800477a:	4313      	orrs	r3, r2
 800477c:	617b      	str	r3, [r7, #20]
 800477e:	697b      	ldr	r3, [r7, #20]
 8004780:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8004784:	617b      	str	r3, [r7, #20]
 8004786:	687b      	ldr	r3, [r7, #4]
 8004788:	4a16      	ldr	r2, [pc, #88]	; (80047e4 <TIM_OC3_SetConfig+0xe0>)
 800478a:	4293      	cmp	r3, r2
 800478c:	d003      	beq.n	8004796 <TIM_OC3_SetConfig+0x92>
 800478e:	687b      	ldr	r3, [r7, #4]
 8004790:	4a15      	ldr	r2, [pc, #84]	; (80047e8 <TIM_OC3_SetConfig+0xe4>)
 8004792:	4293      	cmp	r3, r2
 8004794:	d113      	bne.n	80047be <TIM_OC3_SetConfig+0xba>
 8004796:	693b      	ldr	r3, [r7, #16]
 8004798:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800479c:	613b      	str	r3, [r7, #16]
 800479e:	693b      	ldr	r3, [r7, #16]
 80047a0:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80047a4:	613b      	str	r3, [r7, #16]
 80047a6:	683b      	ldr	r3, [r7, #0]
 80047a8:	695b      	ldr	r3, [r3, #20]
 80047aa:	011b      	lsls	r3, r3, #4
 80047ac:	693a      	ldr	r2, [r7, #16]
 80047ae:	4313      	orrs	r3, r2
 80047b0:	613b      	str	r3, [r7, #16]
 80047b2:	683b      	ldr	r3, [r7, #0]
 80047b4:	699b      	ldr	r3, [r3, #24]
 80047b6:	011b      	lsls	r3, r3, #4
 80047b8:	693a      	ldr	r2, [r7, #16]
 80047ba:	4313      	orrs	r3, r2
 80047bc:	613b      	str	r3, [r7, #16]
 80047be:	687b      	ldr	r3, [r7, #4]
 80047c0:	693a      	ldr	r2, [r7, #16]
 80047c2:	605a      	str	r2, [r3, #4]
 80047c4:	687b      	ldr	r3, [r7, #4]
 80047c6:	68fa      	ldr	r2, [r7, #12]
 80047c8:	61da      	str	r2, [r3, #28]
 80047ca:	683b      	ldr	r3, [r7, #0]
 80047cc:	685a      	ldr	r2, [r3, #4]
 80047ce:	687b      	ldr	r3, [r7, #4]
 80047d0:	63da      	str	r2, [r3, #60]	; 0x3c
 80047d2:	687b      	ldr	r3, [r7, #4]
 80047d4:	697a      	ldr	r2, [r7, #20]
 80047d6:	621a      	str	r2, [r3, #32]
 80047d8:	bf00      	nop
 80047da:	371c      	adds	r7, #28
 80047dc:	46bd      	mov	sp, r7
 80047de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80047e2:	4770      	bx	lr
 80047e4:	40010000 	.word	0x40010000
 80047e8:	40010400 	.word	0x40010400

080047ec <TIM_OC4_SetConfig>:
 80047ec:	b480      	push	{r7}
 80047ee:	b087      	sub	sp, #28
 80047f0:	af00      	add	r7, sp, #0
 80047f2:	6078      	str	r0, [r7, #4]
 80047f4:	6039      	str	r1, [r7, #0]
 80047f6:	687b      	ldr	r3, [r7, #4]
 80047f8:	6a1b      	ldr	r3, [r3, #32]
 80047fa:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 80047fe:	687b      	ldr	r3, [r7, #4]
 8004800:	621a      	str	r2, [r3, #32]
 8004802:	687b      	ldr	r3, [r7, #4]
 8004804:	6a1b      	ldr	r3, [r3, #32]
 8004806:	613b      	str	r3, [r7, #16]
 8004808:	687b      	ldr	r3, [r7, #4]
 800480a:	685b      	ldr	r3, [r3, #4]
 800480c:	617b      	str	r3, [r7, #20]
 800480e:	687b      	ldr	r3, [r7, #4]
 8004810:	69db      	ldr	r3, [r3, #28]
 8004812:	60fb      	str	r3, [r7, #12]
 8004814:	68fb      	ldr	r3, [r7, #12]
 8004816:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800481a:	60fb      	str	r3, [r7, #12]
 800481c:	68fb      	ldr	r3, [r7, #12]
 800481e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004822:	60fb      	str	r3, [r7, #12]
 8004824:	683b      	ldr	r3, [r7, #0]
 8004826:	681b      	ldr	r3, [r3, #0]
 8004828:	021b      	lsls	r3, r3, #8
 800482a:	68fa      	ldr	r2, [r7, #12]
 800482c:	4313      	orrs	r3, r2
 800482e:	60fb      	str	r3, [r7, #12]
 8004830:	693b      	ldr	r3, [r7, #16]
 8004832:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8004836:	613b      	str	r3, [r7, #16]
 8004838:	683b      	ldr	r3, [r7, #0]
 800483a:	689b      	ldr	r3, [r3, #8]
 800483c:	031b      	lsls	r3, r3, #12
 800483e:	693a      	ldr	r2, [r7, #16]
 8004840:	4313      	orrs	r3, r2
 8004842:	613b      	str	r3, [r7, #16]
 8004844:	687b      	ldr	r3, [r7, #4]
 8004846:	4a12      	ldr	r2, [pc, #72]	; (8004890 <TIM_OC4_SetConfig+0xa4>)
 8004848:	4293      	cmp	r3, r2
 800484a:	d003      	beq.n	8004854 <TIM_OC4_SetConfig+0x68>
 800484c:	687b      	ldr	r3, [r7, #4]
 800484e:	4a11      	ldr	r2, [pc, #68]	; (8004894 <TIM_OC4_SetConfig+0xa8>)
 8004850:	4293      	cmp	r3, r2
 8004852:	d109      	bne.n	8004868 <TIM_OC4_SetConfig+0x7c>
 8004854:	697b      	ldr	r3, [r7, #20]
 8004856:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800485a:	617b      	str	r3, [r7, #20]
 800485c:	683b      	ldr	r3, [r7, #0]
 800485e:	695b      	ldr	r3, [r3, #20]
 8004860:	019b      	lsls	r3, r3, #6
 8004862:	697a      	ldr	r2, [r7, #20]
 8004864:	4313      	orrs	r3, r2
 8004866:	617b      	str	r3, [r7, #20]
 8004868:	687b      	ldr	r3, [r7, #4]
 800486a:	697a      	ldr	r2, [r7, #20]
 800486c:	605a      	str	r2, [r3, #4]
 800486e:	687b      	ldr	r3, [r7, #4]
 8004870:	68fa      	ldr	r2, [r7, #12]
 8004872:	61da      	str	r2, [r3, #28]
 8004874:	683b      	ldr	r3, [r7, #0]
 8004876:	685a      	ldr	r2, [r3, #4]
 8004878:	687b      	ldr	r3, [r7, #4]
 800487a:	641a      	str	r2, [r3, #64]	; 0x40
 800487c:	687b      	ldr	r3, [r7, #4]
 800487e:	693a      	ldr	r2, [r7, #16]
 8004880:	621a      	str	r2, [r3, #32]
 8004882:	bf00      	nop
 8004884:	371c      	adds	r7, #28
 8004886:	46bd      	mov	sp, r7
 8004888:	f85d 7b04 	ldr.w	r7, [sp], #4
 800488c:	4770      	bx	lr
 800488e:	bf00      	nop
 8004890:	40010000 	.word	0x40010000
 8004894:	40010400 	.word	0x40010400

08004898 <TIM_TI1_ConfigInputStage>:
 8004898:	b480      	push	{r7}
 800489a:	b087      	sub	sp, #28
 800489c:	af00      	add	r7, sp, #0
 800489e:	60f8      	str	r0, [r7, #12]
 80048a0:	60b9      	str	r1, [r7, #8]
 80048a2:	607a      	str	r2, [r7, #4]
 80048a4:	68fb      	ldr	r3, [r7, #12]
 80048a6:	6a1b      	ldr	r3, [r3, #32]
 80048a8:	617b      	str	r3, [r7, #20]
 80048aa:	68fb      	ldr	r3, [r7, #12]
 80048ac:	6a1b      	ldr	r3, [r3, #32]
 80048ae:	f023 0201 	bic.w	r2, r3, #1
 80048b2:	68fb      	ldr	r3, [r7, #12]
 80048b4:	621a      	str	r2, [r3, #32]
 80048b6:	68fb      	ldr	r3, [r7, #12]
 80048b8:	699b      	ldr	r3, [r3, #24]
 80048ba:	613b      	str	r3, [r7, #16]
 80048bc:	693b      	ldr	r3, [r7, #16]
 80048be:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80048c2:	613b      	str	r3, [r7, #16]
 80048c4:	687b      	ldr	r3, [r7, #4]
 80048c6:	011b      	lsls	r3, r3, #4
 80048c8:	693a      	ldr	r2, [r7, #16]
 80048ca:	4313      	orrs	r3, r2
 80048cc:	613b      	str	r3, [r7, #16]
 80048ce:	697b      	ldr	r3, [r7, #20]
 80048d0:	f023 030a 	bic.w	r3, r3, #10
 80048d4:	617b      	str	r3, [r7, #20]
 80048d6:	697a      	ldr	r2, [r7, #20]
 80048d8:	68bb      	ldr	r3, [r7, #8]
 80048da:	4313      	orrs	r3, r2
 80048dc:	617b      	str	r3, [r7, #20]
 80048de:	68fb      	ldr	r3, [r7, #12]
 80048e0:	693a      	ldr	r2, [r7, #16]
 80048e2:	619a      	str	r2, [r3, #24]
 80048e4:	68fb      	ldr	r3, [r7, #12]
 80048e6:	697a      	ldr	r2, [r7, #20]
 80048e8:	621a      	str	r2, [r3, #32]
 80048ea:	bf00      	nop
 80048ec:	371c      	adds	r7, #28
 80048ee:	46bd      	mov	sp, r7
 80048f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048f4:	4770      	bx	lr

080048f6 <TIM_TI2_ConfigInputStage>:
 80048f6:	b480      	push	{r7}
 80048f8:	b087      	sub	sp, #28
 80048fa:	af00      	add	r7, sp, #0
 80048fc:	60f8      	str	r0, [r7, #12]
 80048fe:	60b9      	str	r1, [r7, #8]
 8004900:	607a      	str	r2, [r7, #4]
 8004902:	68fb      	ldr	r3, [r7, #12]
 8004904:	6a1b      	ldr	r3, [r3, #32]
 8004906:	f023 0210 	bic.w	r2, r3, #16
 800490a:	68fb      	ldr	r3, [r7, #12]
 800490c:	621a      	str	r2, [r3, #32]
 800490e:	68fb      	ldr	r3, [r7, #12]
 8004910:	699b      	ldr	r3, [r3, #24]
 8004912:	617b      	str	r3, [r7, #20]
 8004914:	68fb      	ldr	r3, [r7, #12]
 8004916:	6a1b      	ldr	r3, [r3, #32]
 8004918:	613b      	str	r3, [r7, #16]
 800491a:	697b      	ldr	r3, [r7, #20]
 800491c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8004920:	617b      	str	r3, [r7, #20]
 8004922:	687b      	ldr	r3, [r7, #4]
 8004924:	031b      	lsls	r3, r3, #12
 8004926:	697a      	ldr	r2, [r7, #20]
 8004928:	4313      	orrs	r3, r2
 800492a:	617b      	str	r3, [r7, #20]
 800492c:	693b      	ldr	r3, [r7, #16]
 800492e:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8004932:	613b      	str	r3, [r7, #16]
 8004934:	68bb      	ldr	r3, [r7, #8]
 8004936:	011b      	lsls	r3, r3, #4
 8004938:	693a      	ldr	r2, [r7, #16]
 800493a:	4313      	orrs	r3, r2
 800493c:	613b      	str	r3, [r7, #16]
 800493e:	68fb      	ldr	r3, [r7, #12]
 8004940:	697a      	ldr	r2, [r7, #20]
 8004942:	619a      	str	r2, [r3, #24]
 8004944:	68fb      	ldr	r3, [r7, #12]
 8004946:	693a      	ldr	r2, [r7, #16]
 8004948:	621a      	str	r2, [r3, #32]
 800494a:	bf00      	nop
 800494c:	371c      	adds	r7, #28
 800494e:	46bd      	mov	sp, r7
 8004950:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004954:	4770      	bx	lr

08004956 <TIM_ITRx_SetConfig>:
 8004956:	b480      	push	{r7}
 8004958:	b085      	sub	sp, #20
 800495a:	af00      	add	r7, sp, #0
 800495c:	6078      	str	r0, [r7, #4]
 800495e:	6039      	str	r1, [r7, #0]
 8004960:	687b      	ldr	r3, [r7, #4]
 8004962:	689b      	ldr	r3, [r3, #8]
 8004964:	60fb      	str	r3, [r7, #12]
 8004966:	68fb      	ldr	r3, [r7, #12]
 8004968:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800496c:	60fb      	str	r3, [r7, #12]
 800496e:	683a      	ldr	r2, [r7, #0]
 8004970:	68fb      	ldr	r3, [r7, #12]
 8004972:	4313      	orrs	r3, r2
 8004974:	f043 0307 	orr.w	r3, r3, #7
 8004978:	60fb      	str	r3, [r7, #12]
 800497a:	687b      	ldr	r3, [r7, #4]
 800497c:	68fa      	ldr	r2, [r7, #12]
 800497e:	609a      	str	r2, [r3, #8]
 8004980:	bf00      	nop
 8004982:	3714      	adds	r7, #20
 8004984:	46bd      	mov	sp, r7
 8004986:	f85d 7b04 	ldr.w	r7, [sp], #4
 800498a:	4770      	bx	lr

0800498c <TIM_ETR_SetConfig>:
 800498c:	b480      	push	{r7}
 800498e:	b087      	sub	sp, #28
 8004990:	af00      	add	r7, sp, #0
 8004992:	60f8      	str	r0, [r7, #12]
 8004994:	60b9      	str	r1, [r7, #8]
 8004996:	607a      	str	r2, [r7, #4]
 8004998:	603b      	str	r3, [r7, #0]
 800499a:	68fb      	ldr	r3, [r7, #12]
 800499c:	689b      	ldr	r3, [r3, #8]
 800499e:	617b      	str	r3, [r7, #20]
 80049a0:	697b      	ldr	r3, [r7, #20]
 80049a2:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80049a6:	617b      	str	r3, [r7, #20]
 80049a8:	683b      	ldr	r3, [r7, #0]
 80049aa:	021a      	lsls	r2, r3, #8
 80049ac:	687b      	ldr	r3, [r7, #4]
 80049ae:	431a      	orrs	r2, r3
 80049b0:	68bb      	ldr	r3, [r7, #8]
 80049b2:	4313      	orrs	r3, r2
 80049b4:	697a      	ldr	r2, [r7, #20]
 80049b6:	4313      	orrs	r3, r2
 80049b8:	617b      	str	r3, [r7, #20]
 80049ba:	68fb      	ldr	r3, [r7, #12]
 80049bc:	697a      	ldr	r2, [r7, #20]
 80049be:	609a      	str	r2, [r3, #8]
 80049c0:	bf00      	nop
 80049c2:	371c      	adds	r7, #28
 80049c4:	46bd      	mov	sp, r7
 80049c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049ca:	4770      	bx	lr

080049cc <TIM_CCxChannelCmd>:
 80049cc:	b480      	push	{r7}
 80049ce:	b087      	sub	sp, #28
 80049d0:	af00      	add	r7, sp, #0
 80049d2:	60f8      	str	r0, [r7, #12]
 80049d4:	60b9      	str	r1, [r7, #8]
 80049d6:	607a      	str	r2, [r7, #4]
 80049d8:	68bb      	ldr	r3, [r7, #8]
 80049da:	f003 031f 	and.w	r3, r3, #31
 80049de:	2201      	movs	r2, #1
 80049e0:	fa02 f303 	lsl.w	r3, r2, r3
 80049e4:	617b      	str	r3, [r7, #20]
 80049e6:	68fb      	ldr	r3, [r7, #12]
 80049e8:	6a1a      	ldr	r2, [r3, #32]
 80049ea:	697b      	ldr	r3, [r7, #20]
 80049ec:	43db      	mvns	r3, r3
 80049ee:	401a      	ands	r2, r3
 80049f0:	68fb      	ldr	r3, [r7, #12]
 80049f2:	621a      	str	r2, [r3, #32]
 80049f4:	68fb      	ldr	r3, [r7, #12]
 80049f6:	6a1a      	ldr	r2, [r3, #32]
 80049f8:	68bb      	ldr	r3, [r7, #8]
 80049fa:	f003 031f 	and.w	r3, r3, #31
 80049fe:	6879      	ldr	r1, [r7, #4]
 8004a00:	fa01 f303 	lsl.w	r3, r1, r3
 8004a04:	431a      	orrs	r2, r3
 8004a06:	68fb      	ldr	r3, [r7, #12]
 8004a08:	621a      	str	r2, [r3, #32]
 8004a0a:	bf00      	nop
 8004a0c:	371c      	adds	r7, #28
 8004a0e:	46bd      	mov	sp, r7
 8004a10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a14:	4770      	bx	lr
	...

08004a18 <HAL_TIMEx_MasterConfigSynchronization>:
 8004a18:	b480      	push	{r7}
 8004a1a:	b085      	sub	sp, #20
 8004a1c:	af00      	add	r7, sp, #0
 8004a1e:	6078      	str	r0, [r7, #4]
 8004a20:	6039      	str	r1, [r7, #0]
 8004a22:	687b      	ldr	r3, [r7, #4]
 8004a24:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004a28:	2b01      	cmp	r3, #1
 8004a2a:	d101      	bne.n	8004a30 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8004a2c:	2302      	movs	r3, #2
 8004a2e:	e05a      	b.n	8004ae6 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8004a30:	687b      	ldr	r3, [r7, #4]
 8004a32:	2201      	movs	r2, #1
 8004a34:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004a38:	687b      	ldr	r3, [r7, #4]
 8004a3a:	2202      	movs	r2, #2
 8004a3c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004a40:	687b      	ldr	r3, [r7, #4]
 8004a42:	681b      	ldr	r3, [r3, #0]
 8004a44:	685b      	ldr	r3, [r3, #4]
 8004a46:	60fb      	str	r3, [r7, #12]
 8004a48:	687b      	ldr	r3, [r7, #4]
 8004a4a:	681b      	ldr	r3, [r3, #0]
 8004a4c:	689b      	ldr	r3, [r3, #8]
 8004a4e:	60bb      	str	r3, [r7, #8]
 8004a50:	68fb      	ldr	r3, [r7, #12]
 8004a52:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004a56:	60fb      	str	r3, [r7, #12]
 8004a58:	683b      	ldr	r3, [r7, #0]
 8004a5a:	681b      	ldr	r3, [r3, #0]
 8004a5c:	68fa      	ldr	r2, [r7, #12]
 8004a5e:	4313      	orrs	r3, r2
 8004a60:	60fb      	str	r3, [r7, #12]
 8004a62:	687b      	ldr	r3, [r7, #4]
 8004a64:	681b      	ldr	r3, [r3, #0]
 8004a66:	68fa      	ldr	r2, [r7, #12]
 8004a68:	605a      	str	r2, [r3, #4]
 8004a6a:	687b      	ldr	r3, [r7, #4]
 8004a6c:	681b      	ldr	r3, [r3, #0]
 8004a6e:	4a21      	ldr	r2, [pc, #132]	; (8004af4 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8004a70:	4293      	cmp	r3, r2
 8004a72:	d022      	beq.n	8004aba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004a74:	687b      	ldr	r3, [r7, #4]
 8004a76:	681b      	ldr	r3, [r3, #0]
 8004a78:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004a7c:	d01d      	beq.n	8004aba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004a7e:	687b      	ldr	r3, [r7, #4]
 8004a80:	681b      	ldr	r3, [r3, #0]
 8004a82:	4a1d      	ldr	r2, [pc, #116]	; (8004af8 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8004a84:	4293      	cmp	r3, r2
 8004a86:	d018      	beq.n	8004aba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004a88:	687b      	ldr	r3, [r7, #4]
 8004a8a:	681b      	ldr	r3, [r3, #0]
 8004a8c:	4a1b      	ldr	r2, [pc, #108]	; (8004afc <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8004a8e:	4293      	cmp	r3, r2
 8004a90:	d013      	beq.n	8004aba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004a92:	687b      	ldr	r3, [r7, #4]
 8004a94:	681b      	ldr	r3, [r3, #0]
 8004a96:	4a1a      	ldr	r2, [pc, #104]	; (8004b00 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8004a98:	4293      	cmp	r3, r2
 8004a9a:	d00e      	beq.n	8004aba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004a9c:	687b      	ldr	r3, [r7, #4]
 8004a9e:	681b      	ldr	r3, [r3, #0]
 8004aa0:	4a18      	ldr	r2, [pc, #96]	; (8004b04 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8004aa2:	4293      	cmp	r3, r2
 8004aa4:	d009      	beq.n	8004aba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004aa6:	687b      	ldr	r3, [r7, #4]
 8004aa8:	681b      	ldr	r3, [r3, #0]
 8004aaa:	4a17      	ldr	r2, [pc, #92]	; (8004b08 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8004aac:	4293      	cmp	r3, r2
 8004aae:	d004      	beq.n	8004aba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004ab0:	687b      	ldr	r3, [r7, #4]
 8004ab2:	681b      	ldr	r3, [r3, #0]
 8004ab4:	4a15      	ldr	r2, [pc, #84]	; (8004b0c <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8004ab6:	4293      	cmp	r3, r2
 8004ab8:	d10c      	bne.n	8004ad4 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 8004aba:	68bb      	ldr	r3, [r7, #8]
 8004abc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004ac0:	60bb      	str	r3, [r7, #8]
 8004ac2:	683b      	ldr	r3, [r7, #0]
 8004ac4:	685b      	ldr	r3, [r3, #4]
 8004ac6:	68ba      	ldr	r2, [r7, #8]
 8004ac8:	4313      	orrs	r3, r2
 8004aca:	60bb      	str	r3, [r7, #8]
 8004acc:	687b      	ldr	r3, [r7, #4]
 8004ace:	681b      	ldr	r3, [r3, #0]
 8004ad0:	68ba      	ldr	r2, [r7, #8]
 8004ad2:	609a      	str	r2, [r3, #8]
 8004ad4:	687b      	ldr	r3, [r7, #4]
 8004ad6:	2201      	movs	r2, #1
 8004ad8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004adc:	687b      	ldr	r3, [r7, #4]
 8004ade:	2200      	movs	r2, #0
 8004ae0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004ae4:	2300      	movs	r3, #0
 8004ae6:	4618      	mov	r0, r3
 8004ae8:	3714      	adds	r7, #20
 8004aea:	46bd      	mov	sp, r7
 8004aec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004af0:	4770      	bx	lr
 8004af2:	bf00      	nop
 8004af4:	40010000 	.word	0x40010000
 8004af8:	40000400 	.word	0x40000400
 8004afc:	40000800 	.word	0x40000800
 8004b00:	40000c00 	.word	0x40000c00
 8004b04:	40010400 	.word	0x40010400
 8004b08:	40014000 	.word	0x40014000
 8004b0c:	40001800 	.word	0x40001800

08004b10 <HAL_UART_Init>:
 8004b10:	b580      	push	{r7, lr}
 8004b12:	b082      	sub	sp, #8
 8004b14:	af00      	add	r7, sp, #0
 8004b16:	6078      	str	r0, [r7, #4]
 8004b18:	687b      	ldr	r3, [r7, #4]
 8004b1a:	2b00      	cmp	r3, #0
 8004b1c:	d101      	bne.n	8004b22 <HAL_UART_Init+0x12>
 8004b1e:	2301      	movs	r3, #1
 8004b20:	e03f      	b.n	8004ba2 <HAL_UART_Init+0x92>
 8004b22:	687b      	ldr	r3, [r7, #4]
 8004b24:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004b28:	b2db      	uxtb	r3, r3
 8004b2a:	2b00      	cmp	r3, #0
 8004b2c:	d106      	bne.n	8004b3c <HAL_UART_Init+0x2c>
 8004b2e:	687b      	ldr	r3, [r7, #4]
 8004b30:	2200      	movs	r2, #0
 8004b32:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004b36:	6878      	ldr	r0, [r7, #4]
 8004b38:	f7fc fc42 	bl	80013c0 <HAL_UART_MspInit>
 8004b3c:	687b      	ldr	r3, [r7, #4]
 8004b3e:	2224      	movs	r2, #36	; 0x24
 8004b40:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004b44:	687b      	ldr	r3, [r7, #4]
 8004b46:	681b      	ldr	r3, [r3, #0]
 8004b48:	68da      	ldr	r2, [r3, #12]
 8004b4a:	687b      	ldr	r3, [r7, #4]
 8004b4c:	681b      	ldr	r3, [r3, #0]
 8004b4e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004b52:	60da      	str	r2, [r3, #12]
 8004b54:	6878      	ldr	r0, [r7, #4]
 8004b56:	f000 fddf 	bl	8005718 <UART_SetConfig>
 8004b5a:	687b      	ldr	r3, [r7, #4]
 8004b5c:	681b      	ldr	r3, [r3, #0]
 8004b5e:	691a      	ldr	r2, [r3, #16]
 8004b60:	687b      	ldr	r3, [r7, #4]
 8004b62:	681b      	ldr	r3, [r3, #0]
 8004b64:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8004b68:	611a      	str	r2, [r3, #16]
 8004b6a:	687b      	ldr	r3, [r7, #4]
 8004b6c:	681b      	ldr	r3, [r3, #0]
 8004b6e:	695a      	ldr	r2, [r3, #20]
 8004b70:	687b      	ldr	r3, [r7, #4]
 8004b72:	681b      	ldr	r3, [r3, #0]
 8004b74:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8004b78:	615a      	str	r2, [r3, #20]
 8004b7a:	687b      	ldr	r3, [r7, #4]
 8004b7c:	681b      	ldr	r3, [r3, #0]
 8004b7e:	68da      	ldr	r2, [r3, #12]
 8004b80:	687b      	ldr	r3, [r7, #4]
 8004b82:	681b      	ldr	r3, [r3, #0]
 8004b84:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8004b88:	60da      	str	r2, [r3, #12]
 8004b8a:	687b      	ldr	r3, [r7, #4]
 8004b8c:	2200      	movs	r2, #0
 8004b8e:	641a      	str	r2, [r3, #64]	; 0x40
 8004b90:	687b      	ldr	r3, [r7, #4]
 8004b92:	2220      	movs	r2, #32
 8004b94:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004b98:	687b      	ldr	r3, [r7, #4]
 8004b9a:	2220      	movs	r2, #32
 8004b9c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004ba0:	2300      	movs	r3, #0
 8004ba2:	4618      	mov	r0, r3
 8004ba4:	3708      	adds	r7, #8
 8004ba6:	46bd      	mov	sp, r7
 8004ba8:	bd80      	pop	{r7, pc}

08004baa <HAL_UART_Transmit>:
 8004baa:	b580      	push	{r7, lr}
 8004bac:	b08a      	sub	sp, #40	; 0x28
 8004bae:	af02      	add	r7, sp, #8
 8004bb0:	60f8      	str	r0, [r7, #12]
 8004bb2:	60b9      	str	r1, [r7, #8]
 8004bb4:	603b      	str	r3, [r7, #0]
 8004bb6:	4613      	mov	r3, r2
 8004bb8:	80fb      	strh	r3, [r7, #6]
 8004bba:	2300      	movs	r3, #0
 8004bbc:	617b      	str	r3, [r7, #20]
 8004bbe:	68fb      	ldr	r3, [r7, #12]
 8004bc0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004bc4:	b2db      	uxtb	r3, r3
 8004bc6:	2b20      	cmp	r3, #32
 8004bc8:	d17c      	bne.n	8004cc4 <HAL_UART_Transmit+0x11a>
 8004bca:	68bb      	ldr	r3, [r7, #8]
 8004bcc:	2b00      	cmp	r3, #0
 8004bce:	d002      	beq.n	8004bd6 <HAL_UART_Transmit+0x2c>
 8004bd0:	88fb      	ldrh	r3, [r7, #6]
 8004bd2:	2b00      	cmp	r3, #0
 8004bd4:	d101      	bne.n	8004bda <HAL_UART_Transmit+0x30>
 8004bd6:	2301      	movs	r3, #1
 8004bd8:	e075      	b.n	8004cc6 <HAL_UART_Transmit+0x11c>
 8004bda:	68fb      	ldr	r3, [r7, #12]
 8004bdc:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004be0:	2b01      	cmp	r3, #1
 8004be2:	d101      	bne.n	8004be8 <HAL_UART_Transmit+0x3e>
 8004be4:	2302      	movs	r3, #2
 8004be6:	e06e      	b.n	8004cc6 <HAL_UART_Transmit+0x11c>
 8004be8:	68fb      	ldr	r3, [r7, #12]
 8004bea:	2201      	movs	r2, #1
 8004bec:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004bf0:	68fb      	ldr	r3, [r7, #12]
 8004bf2:	2200      	movs	r2, #0
 8004bf4:	641a      	str	r2, [r3, #64]	; 0x40
 8004bf6:	68fb      	ldr	r3, [r7, #12]
 8004bf8:	2221      	movs	r2, #33	; 0x21
 8004bfa:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004bfe:	f7fd f9a1 	bl	8001f44 <HAL_GetTick>
 8004c02:	6178      	str	r0, [r7, #20]
 8004c04:	68fb      	ldr	r3, [r7, #12]
 8004c06:	88fa      	ldrh	r2, [r7, #6]
 8004c08:	849a      	strh	r2, [r3, #36]	; 0x24
 8004c0a:	68fb      	ldr	r3, [r7, #12]
 8004c0c:	88fa      	ldrh	r2, [r7, #6]
 8004c0e:	84da      	strh	r2, [r3, #38]	; 0x26
 8004c10:	68fb      	ldr	r3, [r7, #12]
 8004c12:	689b      	ldr	r3, [r3, #8]
 8004c14:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004c18:	d108      	bne.n	8004c2c <HAL_UART_Transmit+0x82>
 8004c1a:	68fb      	ldr	r3, [r7, #12]
 8004c1c:	691b      	ldr	r3, [r3, #16]
 8004c1e:	2b00      	cmp	r3, #0
 8004c20:	d104      	bne.n	8004c2c <HAL_UART_Transmit+0x82>
 8004c22:	2300      	movs	r3, #0
 8004c24:	61fb      	str	r3, [r7, #28]
 8004c26:	68bb      	ldr	r3, [r7, #8]
 8004c28:	61bb      	str	r3, [r7, #24]
 8004c2a:	e003      	b.n	8004c34 <HAL_UART_Transmit+0x8a>
 8004c2c:	68bb      	ldr	r3, [r7, #8]
 8004c2e:	61fb      	str	r3, [r7, #28]
 8004c30:	2300      	movs	r3, #0
 8004c32:	61bb      	str	r3, [r7, #24]
 8004c34:	68fb      	ldr	r3, [r7, #12]
 8004c36:	2200      	movs	r2, #0
 8004c38:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004c3c:	e02a      	b.n	8004c94 <HAL_UART_Transmit+0xea>
 8004c3e:	683b      	ldr	r3, [r7, #0]
 8004c40:	9300      	str	r3, [sp, #0]
 8004c42:	697b      	ldr	r3, [r7, #20]
 8004c44:	2200      	movs	r2, #0
 8004c46:	2180      	movs	r1, #128	; 0x80
 8004c48:	68f8      	ldr	r0, [r7, #12]
 8004c4a:	f000 fb1f 	bl	800528c <UART_WaitOnFlagUntilTimeout>
 8004c4e:	4603      	mov	r3, r0
 8004c50:	2b00      	cmp	r3, #0
 8004c52:	d001      	beq.n	8004c58 <HAL_UART_Transmit+0xae>
 8004c54:	2303      	movs	r3, #3
 8004c56:	e036      	b.n	8004cc6 <HAL_UART_Transmit+0x11c>
 8004c58:	69fb      	ldr	r3, [r7, #28]
 8004c5a:	2b00      	cmp	r3, #0
 8004c5c:	d10b      	bne.n	8004c76 <HAL_UART_Transmit+0xcc>
 8004c5e:	69bb      	ldr	r3, [r7, #24]
 8004c60:	881b      	ldrh	r3, [r3, #0]
 8004c62:	461a      	mov	r2, r3
 8004c64:	68fb      	ldr	r3, [r7, #12]
 8004c66:	681b      	ldr	r3, [r3, #0]
 8004c68:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8004c6c:	605a      	str	r2, [r3, #4]
 8004c6e:	69bb      	ldr	r3, [r7, #24]
 8004c70:	3302      	adds	r3, #2
 8004c72:	61bb      	str	r3, [r7, #24]
 8004c74:	e007      	b.n	8004c86 <HAL_UART_Transmit+0xdc>
 8004c76:	69fb      	ldr	r3, [r7, #28]
 8004c78:	781a      	ldrb	r2, [r3, #0]
 8004c7a:	68fb      	ldr	r3, [r7, #12]
 8004c7c:	681b      	ldr	r3, [r3, #0]
 8004c7e:	605a      	str	r2, [r3, #4]
 8004c80:	69fb      	ldr	r3, [r7, #28]
 8004c82:	3301      	adds	r3, #1
 8004c84:	61fb      	str	r3, [r7, #28]
 8004c86:	68fb      	ldr	r3, [r7, #12]
 8004c88:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8004c8a:	b29b      	uxth	r3, r3
 8004c8c:	3b01      	subs	r3, #1
 8004c8e:	b29a      	uxth	r2, r3
 8004c90:	68fb      	ldr	r3, [r7, #12]
 8004c92:	84da      	strh	r2, [r3, #38]	; 0x26
 8004c94:	68fb      	ldr	r3, [r7, #12]
 8004c96:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8004c98:	b29b      	uxth	r3, r3
 8004c9a:	2b00      	cmp	r3, #0
 8004c9c:	d1cf      	bne.n	8004c3e <HAL_UART_Transmit+0x94>
 8004c9e:	683b      	ldr	r3, [r7, #0]
 8004ca0:	9300      	str	r3, [sp, #0]
 8004ca2:	697b      	ldr	r3, [r7, #20]
 8004ca4:	2200      	movs	r2, #0
 8004ca6:	2140      	movs	r1, #64	; 0x40
 8004ca8:	68f8      	ldr	r0, [r7, #12]
 8004caa:	f000 faef 	bl	800528c <UART_WaitOnFlagUntilTimeout>
 8004cae:	4603      	mov	r3, r0
 8004cb0:	2b00      	cmp	r3, #0
 8004cb2:	d001      	beq.n	8004cb8 <HAL_UART_Transmit+0x10e>
 8004cb4:	2303      	movs	r3, #3
 8004cb6:	e006      	b.n	8004cc6 <HAL_UART_Transmit+0x11c>
 8004cb8:	68fb      	ldr	r3, [r7, #12]
 8004cba:	2220      	movs	r2, #32
 8004cbc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004cc0:	2300      	movs	r3, #0
 8004cc2:	e000      	b.n	8004cc6 <HAL_UART_Transmit+0x11c>
 8004cc4:	2302      	movs	r3, #2
 8004cc6:	4618      	mov	r0, r3
 8004cc8:	3720      	adds	r7, #32
 8004cca:	46bd      	mov	sp, r7
 8004ccc:	bd80      	pop	{r7, pc}

08004cce <HAL_UART_Receive_IT>:
 8004cce:	b580      	push	{r7, lr}
 8004cd0:	b084      	sub	sp, #16
 8004cd2:	af00      	add	r7, sp, #0
 8004cd4:	60f8      	str	r0, [r7, #12]
 8004cd6:	60b9      	str	r1, [r7, #8]
 8004cd8:	4613      	mov	r3, r2
 8004cda:	80fb      	strh	r3, [r7, #6]
 8004cdc:	68fb      	ldr	r3, [r7, #12]
 8004cde:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8004ce2:	b2db      	uxtb	r3, r3
 8004ce4:	2b20      	cmp	r3, #32
 8004ce6:	d11d      	bne.n	8004d24 <HAL_UART_Receive_IT+0x56>
 8004ce8:	68bb      	ldr	r3, [r7, #8]
 8004cea:	2b00      	cmp	r3, #0
 8004cec:	d002      	beq.n	8004cf4 <HAL_UART_Receive_IT+0x26>
 8004cee:	88fb      	ldrh	r3, [r7, #6]
 8004cf0:	2b00      	cmp	r3, #0
 8004cf2:	d101      	bne.n	8004cf8 <HAL_UART_Receive_IT+0x2a>
 8004cf4:	2301      	movs	r3, #1
 8004cf6:	e016      	b.n	8004d26 <HAL_UART_Receive_IT+0x58>
 8004cf8:	68fb      	ldr	r3, [r7, #12]
 8004cfa:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004cfe:	2b01      	cmp	r3, #1
 8004d00:	d101      	bne.n	8004d06 <HAL_UART_Receive_IT+0x38>
 8004d02:	2302      	movs	r3, #2
 8004d04:	e00f      	b.n	8004d26 <HAL_UART_Receive_IT+0x58>
 8004d06:	68fb      	ldr	r3, [r7, #12]
 8004d08:	2201      	movs	r2, #1
 8004d0a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004d0e:	68fb      	ldr	r3, [r7, #12]
 8004d10:	2200      	movs	r2, #0
 8004d12:	631a      	str	r2, [r3, #48]	; 0x30
 8004d14:	88fb      	ldrh	r3, [r7, #6]
 8004d16:	461a      	mov	r2, r3
 8004d18:	68b9      	ldr	r1, [r7, #8]
 8004d1a:	68f8      	ldr	r0, [r7, #12]
 8004d1c:	f000 fb24 	bl	8005368 <UART_Start_Receive_IT>
 8004d20:	4603      	mov	r3, r0
 8004d22:	e000      	b.n	8004d26 <HAL_UART_Receive_IT+0x58>
 8004d24:	2302      	movs	r3, #2
 8004d26:	4618      	mov	r0, r3
 8004d28:	3710      	adds	r7, #16
 8004d2a:	46bd      	mov	sp, r7
 8004d2c:	bd80      	pop	{r7, pc}
	...

08004d30 <HAL_UART_IRQHandler>:
 8004d30:	b580      	push	{r7, lr}
 8004d32:	b0ba      	sub	sp, #232	; 0xe8
 8004d34:	af00      	add	r7, sp, #0
 8004d36:	6078      	str	r0, [r7, #4]
 8004d38:	687b      	ldr	r3, [r7, #4]
 8004d3a:	681b      	ldr	r3, [r3, #0]
 8004d3c:	681b      	ldr	r3, [r3, #0]
 8004d3e:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8004d42:	687b      	ldr	r3, [r7, #4]
 8004d44:	681b      	ldr	r3, [r3, #0]
 8004d46:	68db      	ldr	r3, [r3, #12]
 8004d48:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8004d4c:	687b      	ldr	r3, [r7, #4]
 8004d4e:	681b      	ldr	r3, [r3, #0]
 8004d50:	695b      	ldr	r3, [r3, #20]
 8004d52:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 8004d56:	2300      	movs	r3, #0
 8004d58:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8004d5c:	2300      	movs	r3, #0
 8004d5e:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8004d62:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8004d66:	f003 030f 	and.w	r3, r3, #15
 8004d6a:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8004d6e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8004d72:	2b00      	cmp	r3, #0
 8004d74:	d10f      	bne.n	8004d96 <HAL_UART_IRQHandler+0x66>
 8004d76:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8004d7a:	f003 0320 	and.w	r3, r3, #32
 8004d7e:	2b00      	cmp	r3, #0
 8004d80:	d009      	beq.n	8004d96 <HAL_UART_IRQHandler+0x66>
 8004d82:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8004d86:	f003 0320 	and.w	r3, r3, #32
 8004d8a:	2b00      	cmp	r3, #0
 8004d8c:	d003      	beq.n	8004d96 <HAL_UART_IRQHandler+0x66>
 8004d8e:	6878      	ldr	r0, [r7, #4]
 8004d90:	f000 fc07 	bl	80055a2 <UART_Receive_IT>
 8004d94:	e256      	b.n	8005244 <HAL_UART_IRQHandler+0x514>
 8004d96:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8004d9a:	2b00      	cmp	r3, #0
 8004d9c:	f000 80de 	beq.w	8004f5c <HAL_UART_IRQHandler+0x22c>
 8004da0:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8004da4:	f003 0301 	and.w	r3, r3, #1
 8004da8:	2b00      	cmp	r3, #0
 8004daa:	d106      	bne.n	8004dba <HAL_UART_IRQHandler+0x8a>
 8004dac:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8004db0:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8004db4:	2b00      	cmp	r3, #0
 8004db6:	f000 80d1 	beq.w	8004f5c <HAL_UART_IRQHandler+0x22c>
 8004dba:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8004dbe:	f003 0301 	and.w	r3, r3, #1
 8004dc2:	2b00      	cmp	r3, #0
 8004dc4:	d00b      	beq.n	8004dde <HAL_UART_IRQHandler+0xae>
 8004dc6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8004dca:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004dce:	2b00      	cmp	r3, #0
 8004dd0:	d005      	beq.n	8004dde <HAL_UART_IRQHandler+0xae>
 8004dd2:	687b      	ldr	r3, [r7, #4]
 8004dd4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004dd6:	f043 0201 	orr.w	r2, r3, #1
 8004dda:	687b      	ldr	r3, [r7, #4]
 8004ddc:	641a      	str	r2, [r3, #64]	; 0x40
 8004dde:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8004de2:	f003 0304 	and.w	r3, r3, #4
 8004de6:	2b00      	cmp	r3, #0
 8004de8:	d00b      	beq.n	8004e02 <HAL_UART_IRQHandler+0xd2>
 8004dea:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8004dee:	f003 0301 	and.w	r3, r3, #1
 8004df2:	2b00      	cmp	r3, #0
 8004df4:	d005      	beq.n	8004e02 <HAL_UART_IRQHandler+0xd2>
 8004df6:	687b      	ldr	r3, [r7, #4]
 8004df8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004dfa:	f043 0202 	orr.w	r2, r3, #2
 8004dfe:	687b      	ldr	r3, [r7, #4]
 8004e00:	641a      	str	r2, [r3, #64]	; 0x40
 8004e02:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8004e06:	f003 0302 	and.w	r3, r3, #2
 8004e0a:	2b00      	cmp	r3, #0
 8004e0c:	d00b      	beq.n	8004e26 <HAL_UART_IRQHandler+0xf6>
 8004e0e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8004e12:	f003 0301 	and.w	r3, r3, #1
 8004e16:	2b00      	cmp	r3, #0
 8004e18:	d005      	beq.n	8004e26 <HAL_UART_IRQHandler+0xf6>
 8004e1a:	687b      	ldr	r3, [r7, #4]
 8004e1c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e1e:	f043 0204 	orr.w	r2, r3, #4
 8004e22:	687b      	ldr	r3, [r7, #4]
 8004e24:	641a      	str	r2, [r3, #64]	; 0x40
 8004e26:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8004e2a:	f003 0308 	and.w	r3, r3, #8
 8004e2e:	2b00      	cmp	r3, #0
 8004e30:	d011      	beq.n	8004e56 <HAL_UART_IRQHandler+0x126>
 8004e32:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8004e36:	f003 0320 	and.w	r3, r3, #32
 8004e3a:	2b00      	cmp	r3, #0
 8004e3c:	d105      	bne.n	8004e4a <HAL_UART_IRQHandler+0x11a>
 8004e3e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8004e42:	f003 0301 	and.w	r3, r3, #1
 8004e46:	2b00      	cmp	r3, #0
 8004e48:	d005      	beq.n	8004e56 <HAL_UART_IRQHandler+0x126>
 8004e4a:	687b      	ldr	r3, [r7, #4]
 8004e4c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e4e:	f043 0208 	orr.w	r2, r3, #8
 8004e52:	687b      	ldr	r3, [r7, #4]
 8004e54:	641a      	str	r2, [r3, #64]	; 0x40
 8004e56:	687b      	ldr	r3, [r7, #4]
 8004e58:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e5a:	2b00      	cmp	r3, #0
 8004e5c:	f000 81ed 	beq.w	800523a <HAL_UART_IRQHandler+0x50a>
 8004e60:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8004e64:	f003 0320 	and.w	r3, r3, #32
 8004e68:	2b00      	cmp	r3, #0
 8004e6a:	d008      	beq.n	8004e7e <HAL_UART_IRQHandler+0x14e>
 8004e6c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8004e70:	f003 0320 	and.w	r3, r3, #32
 8004e74:	2b00      	cmp	r3, #0
 8004e76:	d002      	beq.n	8004e7e <HAL_UART_IRQHandler+0x14e>
 8004e78:	6878      	ldr	r0, [r7, #4]
 8004e7a:	f000 fb92 	bl	80055a2 <UART_Receive_IT>
 8004e7e:	687b      	ldr	r3, [r7, #4]
 8004e80:	681b      	ldr	r3, [r3, #0]
 8004e82:	695b      	ldr	r3, [r3, #20]
 8004e84:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004e88:	2b40      	cmp	r3, #64	; 0x40
 8004e8a:	bf0c      	ite	eq
 8004e8c:	2301      	moveq	r3, #1
 8004e8e:	2300      	movne	r3, #0
 8004e90:	b2db      	uxtb	r3, r3
 8004e92:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8004e96:	687b      	ldr	r3, [r7, #4]
 8004e98:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e9a:	f003 0308 	and.w	r3, r3, #8
 8004e9e:	2b00      	cmp	r3, #0
 8004ea0:	d103      	bne.n	8004eaa <HAL_UART_IRQHandler+0x17a>
 8004ea2:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8004ea6:	2b00      	cmp	r3, #0
 8004ea8:	d04f      	beq.n	8004f4a <HAL_UART_IRQHandler+0x21a>
 8004eaa:	6878      	ldr	r0, [r7, #4]
 8004eac:	f000 fa9a 	bl	80053e4 <UART_EndRxTransfer>
 8004eb0:	687b      	ldr	r3, [r7, #4]
 8004eb2:	681b      	ldr	r3, [r3, #0]
 8004eb4:	695b      	ldr	r3, [r3, #20]
 8004eb6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004eba:	2b40      	cmp	r3, #64	; 0x40
 8004ebc:	d141      	bne.n	8004f42 <HAL_UART_IRQHandler+0x212>
 8004ebe:	687b      	ldr	r3, [r7, #4]
 8004ec0:	681b      	ldr	r3, [r3, #0]
 8004ec2:	3314      	adds	r3, #20
 8004ec4:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8004ec8:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8004ecc:	e853 3f00 	ldrex	r3, [r3]
 8004ed0:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8004ed4:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8004ed8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8004edc:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8004ee0:	687b      	ldr	r3, [r7, #4]
 8004ee2:	681b      	ldr	r3, [r3, #0]
 8004ee4:	3314      	adds	r3, #20
 8004ee6:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 8004eea:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 8004eee:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8004ef2:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 8004ef6:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 8004efa:	e841 2300 	strex	r3, r2, [r1]
 8004efe:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8004f02:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 8004f06:	2b00      	cmp	r3, #0
 8004f08:	d1d9      	bne.n	8004ebe <HAL_UART_IRQHandler+0x18e>
 8004f0a:	687b      	ldr	r3, [r7, #4]
 8004f0c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004f0e:	2b00      	cmp	r3, #0
 8004f10:	d013      	beq.n	8004f3a <HAL_UART_IRQHandler+0x20a>
 8004f12:	687b      	ldr	r3, [r7, #4]
 8004f14:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004f16:	4a7d      	ldr	r2, [pc, #500]	; (800510c <HAL_UART_IRQHandler+0x3dc>)
 8004f18:	651a      	str	r2, [r3, #80]	; 0x50
 8004f1a:	687b      	ldr	r3, [r7, #4]
 8004f1c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004f1e:	4618      	mov	r0, r3
 8004f20:	f7fd fa70 	bl	8002404 <HAL_DMA_Abort_IT>
 8004f24:	4603      	mov	r3, r0
 8004f26:	2b00      	cmp	r3, #0
 8004f28:	d016      	beq.n	8004f58 <HAL_UART_IRQHandler+0x228>
 8004f2a:	687b      	ldr	r3, [r7, #4]
 8004f2c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004f2e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004f30:	687a      	ldr	r2, [r7, #4]
 8004f32:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8004f34:	4610      	mov	r0, r2
 8004f36:	4798      	blx	r3
 8004f38:	e00e      	b.n	8004f58 <HAL_UART_IRQHandler+0x228>
 8004f3a:	6878      	ldr	r0, [r7, #4]
 8004f3c:	f000 f990 	bl	8005260 <HAL_UART_ErrorCallback>
 8004f40:	e00a      	b.n	8004f58 <HAL_UART_IRQHandler+0x228>
 8004f42:	6878      	ldr	r0, [r7, #4]
 8004f44:	f000 f98c 	bl	8005260 <HAL_UART_ErrorCallback>
 8004f48:	e006      	b.n	8004f58 <HAL_UART_IRQHandler+0x228>
 8004f4a:	6878      	ldr	r0, [r7, #4]
 8004f4c:	f000 f988 	bl	8005260 <HAL_UART_ErrorCallback>
 8004f50:	687b      	ldr	r3, [r7, #4]
 8004f52:	2200      	movs	r2, #0
 8004f54:	641a      	str	r2, [r3, #64]	; 0x40
 8004f56:	e170      	b.n	800523a <HAL_UART_IRQHandler+0x50a>
 8004f58:	bf00      	nop
 8004f5a:	e16e      	b.n	800523a <HAL_UART_IRQHandler+0x50a>
 8004f5c:	687b      	ldr	r3, [r7, #4]
 8004f5e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004f60:	2b01      	cmp	r3, #1
 8004f62:	f040 814a 	bne.w	80051fa <HAL_UART_IRQHandler+0x4ca>
 8004f66:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8004f6a:	f003 0310 	and.w	r3, r3, #16
 8004f6e:	2b00      	cmp	r3, #0
 8004f70:	f000 8143 	beq.w	80051fa <HAL_UART_IRQHandler+0x4ca>
 8004f74:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8004f78:	f003 0310 	and.w	r3, r3, #16
 8004f7c:	2b00      	cmp	r3, #0
 8004f7e:	f000 813c 	beq.w	80051fa <HAL_UART_IRQHandler+0x4ca>
 8004f82:	2300      	movs	r3, #0
 8004f84:	60bb      	str	r3, [r7, #8]
 8004f86:	687b      	ldr	r3, [r7, #4]
 8004f88:	681b      	ldr	r3, [r3, #0]
 8004f8a:	681b      	ldr	r3, [r3, #0]
 8004f8c:	60bb      	str	r3, [r7, #8]
 8004f8e:	687b      	ldr	r3, [r7, #4]
 8004f90:	681b      	ldr	r3, [r3, #0]
 8004f92:	685b      	ldr	r3, [r3, #4]
 8004f94:	60bb      	str	r3, [r7, #8]
 8004f96:	68bb      	ldr	r3, [r7, #8]
 8004f98:	687b      	ldr	r3, [r7, #4]
 8004f9a:	681b      	ldr	r3, [r3, #0]
 8004f9c:	695b      	ldr	r3, [r3, #20]
 8004f9e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004fa2:	2b40      	cmp	r3, #64	; 0x40
 8004fa4:	f040 80b4 	bne.w	8005110 <HAL_UART_IRQHandler+0x3e0>
 8004fa8:	687b      	ldr	r3, [r7, #4]
 8004faa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004fac:	681b      	ldr	r3, [r3, #0]
 8004fae:	685b      	ldr	r3, [r3, #4]
 8004fb0:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 8004fb4:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 8004fb8:	2b00      	cmp	r3, #0
 8004fba:	f000 8140 	beq.w	800523e <HAL_UART_IRQHandler+0x50e>
 8004fbe:	687b      	ldr	r3, [r7, #4]
 8004fc0:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8004fc2:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8004fc6:	429a      	cmp	r2, r3
 8004fc8:	f080 8139 	bcs.w	800523e <HAL_UART_IRQHandler+0x50e>
 8004fcc:	687b      	ldr	r3, [r7, #4]
 8004fce:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8004fd2:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004fd4:	687b      	ldr	r3, [r7, #4]
 8004fd6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004fd8:	69db      	ldr	r3, [r3, #28]
 8004fda:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8004fde:	f000 8088 	beq.w	80050f2 <HAL_UART_IRQHandler+0x3c2>
 8004fe2:	687b      	ldr	r3, [r7, #4]
 8004fe4:	681b      	ldr	r3, [r3, #0]
 8004fe6:	330c      	adds	r3, #12
 8004fe8:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8004fec:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8004ff0:	e853 3f00 	ldrex	r3, [r3]
 8004ff4:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8004ff8:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8004ffc:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8005000:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8005004:	687b      	ldr	r3, [r7, #4]
 8005006:	681b      	ldr	r3, [r3, #0]
 8005008:	330c      	adds	r3, #12
 800500a:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 800500e:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 8005012:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8005016:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 800501a:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800501e:	e841 2300 	strex	r3, r2, [r1]
 8005022:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8005026:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800502a:	2b00      	cmp	r3, #0
 800502c:	d1d9      	bne.n	8004fe2 <HAL_UART_IRQHandler+0x2b2>
 800502e:	687b      	ldr	r3, [r7, #4]
 8005030:	681b      	ldr	r3, [r3, #0]
 8005032:	3314      	adds	r3, #20
 8005034:	677b      	str	r3, [r7, #116]	; 0x74
 8005036:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8005038:	e853 3f00 	ldrex	r3, [r3]
 800503c:	673b      	str	r3, [r7, #112]	; 0x70
 800503e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8005040:	f023 0301 	bic.w	r3, r3, #1
 8005044:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8005048:	687b      	ldr	r3, [r7, #4]
 800504a:	681b      	ldr	r3, [r3, #0]
 800504c:	3314      	adds	r3, #20
 800504e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8005052:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 8005056:	67fb      	str	r3, [r7, #124]	; 0x7c
 8005058:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800505a:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800505e:	e841 2300 	strex	r3, r2, [r1]
 8005062:	67bb      	str	r3, [r7, #120]	; 0x78
 8005064:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8005066:	2b00      	cmp	r3, #0
 8005068:	d1e1      	bne.n	800502e <HAL_UART_IRQHandler+0x2fe>
 800506a:	687b      	ldr	r3, [r7, #4]
 800506c:	681b      	ldr	r3, [r3, #0]
 800506e:	3314      	adds	r3, #20
 8005070:	663b      	str	r3, [r7, #96]	; 0x60
 8005072:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8005074:	e853 3f00 	ldrex	r3, [r3]
 8005078:	65fb      	str	r3, [r7, #92]	; 0x5c
 800507a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800507c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8005080:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8005084:	687b      	ldr	r3, [r7, #4]
 8005086:	681b      	ldr	r3, [r3, #0]
 8005088:	3314      	adds	r3, #20
 800508a:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 800508e:	66fa      	str	r2, [r7, #108]	; 0x6c
 8005090:	66bb      	str	r3, [r7, #104]	; 0x68
 8005092:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 8005094:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8005096:	e841 2300 	strex	r3, r2, [r1]
 800509a:	667b      	str	r3, [r7, #100]	; 0x64
 800509c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800509e:	2b00      	cmp	r3, #0
 80050a0:	d1e3      	bne.n	800506a <HAL_UART_IRQHandler+0x33a>
 80050a2:	687b      	ldr	r3, [r7, #4]
 80050a4:	2220      	movs	r2, #32
 80050a6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80050aa:	687b      	ldr	r3, [r7, #4]
 80050ac:	2200      	movs	r2, #0
 80050ae:	631a      	str	r2, [r3, #48]	; 0x30
 80050b0:	687b      	ldr	r3, [r7, #4]
 80050b2:	681b      	ldr	r3, [r3, #0]
 80050b4:	330c      	adds	r3, #12
 80050b6:	64fb      	str	r3, [r7, #76]	; 0x4c
 80050b8:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80050ba:	e853 3f00 	ldrex	r3, [r3]
 80050be:	64bb      	str	r3, [r7, #72]	; 0x48
 80050c0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80050c2:	f023 0310 	bic.w	r3, r3, #16
 80050c6:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 80050ca:	687b      	ldr	r3, [r7, #4]
 80050cc:	681b      	ldr	r3, [r3, #0]
 80050ce:	330c      	adds	r3, #12
 80050d0:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 80050d4:	65ba      	str	r2, [r7, #88]	; 0x58
 80050d6:	657b      	str	r3, [r7, #84]	; 0x54
 80050d8:	6d79      	ldr	r1, [r7, #84]	; 0x54
 80050da:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80050dc:	e841 2300 	strex	r3, r2, [r1]
 80050e0:	653b      	str	r3, [r7, #80]	; 0x50
 80050e2:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80050e4:	2b00      	cmp	r3, #0
 80050e6:	d1e3      	bne.n	80050b0 <HAL_UART_IRQHandler+0x380>
 80050e8:	687b      	ldr	r3, [r7, #4]
 80050ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80050ec:	4618      	mov	r0, r3
 80050ee:	f7fd f919 	bl	8002324 <HAL_DMA_Abort>
 80050f2:	687b      	ldr	r3, [r7, #4]
 80050f4:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 80050f6:	687b      	ldr	r3, [r7, #4]
 80050f8:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80050fa:	b29b      	uxth	r3, r3
 80050fc:	1ad3      	subs	r3, r2, r3
 80050fe:	b29b      	uxth	r3, r3
 8005100:	4619      	mov	r1, r3
 8005102:	6878      	ldr	r0, [r7, #4]
 8005104:	f000 f8b6 	bl	8005274 <HAL_UARTEx_RxEventCallback>
 8005108:	e099      	b.n	800523e <HAL_UART_IRQHandler+0x50e>
 800510a:	bf00      	nop
 800510c:	080054ab 	.word	0x080054ab
 8005110:	687b      	ldr	r3, [r7, #4]
 8005112:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8005114:	687b      	ldr	r3, [r7, #4]
 8005116:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8005118:	b29b      	uxth	r3, r3
 800511a:	1ad3      	subs	r3, r2, r3
 800511c:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 8005120:	687b      	ldr	r3, [r7, #4]
 8005122:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8005124:	b29b      	uxth	r3, r3
 8005126:	2b00      	cmp	r3, #0
 8005128:	f000 808b 	beq.w	8005242 <HAL_UART_IRQHandler+0x512>
 800512c:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8005130:	2b00      	cmp	r3, #0
 8005132:	f000 8086 	beq.w	8005242 <HAL_UART_IRQHandler+0x512>
 8005136:	687b      	ldr	r3, [r7, #4]
 8005138:	681b      	ldr	r3, [r3, #0]
 800513a:	330c      	adds	r3, #12
 800513c:	63bb      	str	r3, [r7, #56]	; 0x38
 800513e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005140:	e853 3f00 	ldrex	r3, [r3]
 8005144:	637b      	str	r3, [r7, #52]	; 0x34
 8005146:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005148:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800514c:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8005150:	687b      	ldr	r3, [r7, #4]
 8005152:	681b      	ldr	r3, [r3, #0]
 8005154:	330c      	adds	r3, #12
 8005156:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 800515a:	647a      	str	r2, [r7, #68]	; 0x44
 800515c:	643b      	str	r3, [r7, #64]	; 0x40
 800515e:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8005160:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8005162:	e841 2300 	strex	r3, r2, [r1]
 8005166:	63fb      	str	r3, [r7, #60]	; 0x3c
 8005168:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800516a:	2b00      	cmp	r3, #0
 800516c:	d1e3      	bne.n	8005136 <HAL_UART_IRQHandler+0x406>
 800516e:	687b      	ldr	r3, [r7, #4]
 8005170:	681b      	ldr	r3, [r3, #0]
 8005172:	3314      	adds	r3, #20
 8005174:	627b      	str	r3, [r7, #36]	; 0x24
 8005176:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005178:	e853 3f00 	ldrex	r3, [r3]
 800517c:	623b      	str	r3, [r7, #32]
 800517e:	6a3b      	ldr	r3, [r7, #32]
 8005180:	f023 0301 	bic.w	r3, r3, #1
 8005184:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 8005188:	687b      	ldr	r3, [r7, #4]
 800518a:	681b      	ldr	r3, [r3, #0]
 800518c:	3314      	adds	r3, #20
 800518e:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 8005192:	633a      	str	r2, [r7, #48]	; 0x30
 8005194:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005196:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8005198:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800519a:	e841 2300 	strex	r3, r2, [r1]
 800519e:	62bb      	str	r3, [r7, #40]	; 0x28
 80051a0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80051a2:	2b00      	cmp	r3, #0
 80051a4:	d1e3      	bne.n	800516e <HAL_UART_IRQHandler+0x43e>
 80051a6:	687b      	ldr	r3, [r7, #4]
 80051a8:	2220      	movs	r2, #32
 80051aa:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80051ae:	687b      	ldr	r3, [r7, #4]
 80051b0:	2200      	movs	r2, #0
 80051b2:	631a      	str	r2, [r3, #48]	; 0x30
 80051b4:	687b      	ldr	r3, [r7, #4]
 80051b6:	681b      	ldr	r3, [r3, #0]
 80051b8:	330c      	adds	r3, #12
 80051ba:	613b      	str	r3, [r7, #16]
 80051bc:	693b      	ldr	r3, [r7, #16]
 80051be:	e853 3f00 	ldrex	r3, [r3]
 80051c2:	60fb      	str	r3, [r7, #12]
 80051c4:	68fb      	ldr	r3, [r7, #12]
 80051c6:	f023 0310 	bic.w	r3, r3, #16
 80051ca:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 80051ce:	687b      	ldr	r3, [r7, #4]
 80051d0:	681b      	ldr	r3, [r3, #0]
 80051d2:	330c      	adds	r3, #12
 80051d4:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 80051d8:	61fa      	str	r2, [r7, #28]
 80051da:	61bb      	str	r3, [r7, #24]
 80051dc:	69b9      	ldr	r1, [r7, #24]
 80051de:	69fa      	ldr	r2, [r7, #28]
 80051e0:	e841 2300 	strex	r3, r2, [r1]
 80051e4:	617b      	str	r3, [r7, #20]
 80051e6:	697b      	ldr	r3, [r7, #20]
 80051e8:	2b00      	cmp	r3, #0
 80051ea:	d1e3      	bne.n	80051b4 <HAL_UART_IRQHandler+0x484>
 80051ec:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 80051f0:	4619      	mov	r1, r3
 80051f2:	6878      	ldr	r0, [r7, #4]
 80051f4:	f000 f83e 	bl	8005274 <HAL_UARTEx_RxEventCallback>
 80051f8:	e023      	b.n	8005242 <HAL_UART_IRQHandler+0x512>
 80051fa:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80051fe:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005202:	2b00      	cmp	r3, #0
 8005204:	d009      	beq.n	800521a <HAL_UART_IRQHandler+0x4ea>
 8005206:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800520a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800520e:	2b00      	cmp	r3, #0
 8005210:	d003      	beq.n	800521a <HAL_UART_IRQHandler+0x4ea>
 8005212:	6878      	ldr	r0, [r7, #4]
 8005214:	f000 f95d 	bl	80054d2 <UART_Transmit_IT>
 8005218:	e014      	b.n	8005244 <HAL_UART_IRQHandler+0x514>
 800521a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800521e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005222:	2b00      	cmp	r3, #0
 8005224:	d00e      	beq.n	8005244 <HAL_UART_IRQHandler+0x514>
 8005226:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800522a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800522e:	2b00      	cmp	r3, #0
 8005230:	d008      	beq.n	8005244 <HAL_UART_IRQHandler+0x514>
 8005232:	6878      	ldr	r0, [r7, #4]
 8005234:	f000 f99d 	bl	8005572 <UART_EndTransmit_IT>
 8005238:	e004      	b.n	8005244 <HAL_UART_IRQHandler+0x514>
 800523a:	bf00      	nop
 800523c:	e002      	b.n	8005244 <HAL_UART_IRQHandler+0x514>
 800523e:	bf00      	nop
 8005240:	e000      	b.n	8005244 <HAL_UART_IRQHandler+0x514>
 8005242:	bf00      	nop
 8005244:	37e8      	adds	r7, #232	; 0xe8
 8005246:	46bd      	mov	sp, r7
 8005248:	bd80      	pop	{r7, pc}
 800524a:	bf00      	nop

0800524c <HAL_UART_TxCpltCallback>:
 800524c:	b480      	push	{r7}
 800524e:	b083      	sub	sp, #12
 8005250:	af00      	add	r7, sp, #0
 8005252:	6078      	str	r0, [r7, #4]
 8005254:	bf00      	nop
 8005256:	370c      	adds	r7, #12
 8005258:	46bd      	mov	sp, r7
 800525a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800525e:	4770      	bx	lr

08005260 <HAL_UART_ErrorCallback>:
 8005260:	b480      	push	{r7}
 8005262:	b083      	sub	sp, #12
 8005264:	af00      	add	r7, sp, #0
 8005266:	6078      	str	r0, [r7, #4]
 8005268:	bf00      	nop
 800526a:	370c      	adds	r7, #12
 800526c:	46bd      	mov	sp, r7
 800526e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005272:	4770      	bx	lr

08005274 <HAL_UARTEx_RxEventCallback>:
 8005274:	b480      	push	{r7}
 8005276:	b083      	sub	sp, #12
 8005278:	af00      	add	r7, sp, #0
 800527a:	6078      	str	r0, [r7, #4]
 800527c:	460b      	mov	r3, r1
 800527e:	807b      	strh	r3, [r7, #2]
 8005280:	bf00      	nop
 8005282:	370c      	adds	r7, #12
 8005284:	46bd      	mov	sp, r7
 8005286:	f85d 7b04 	ldr.w	r7, [sp], #4
 800528a:	4770      	bx	lr

0800528c <UART_WaitOnFlagUntilTimeout>:
 800528c:	b580      	push	{r7, lr}
 800528e:	b090      	sub	sp, #64	; 0x40
 8005290:	af00      	add	r7, sp, #0
 8005292:	60f8      	str	r0, [r7, #12]
 8005294:	60b9      	str	r1, [r7, #8]
 8005296:	603b      	str	r3, [r7, #0]
 8005298:	4613      	mov	r3, r2
 800529a:	71fb      	strb	r3, [r7, #7]
 800529c:	e050      	b.n	8005340 <UART_WaitOnFlagUntilTimeout+0xb4>
 800529e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80052a0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80052a4:	d04c      	beq.n	8005340 <UART_WaitOnFlagUntilTimeout+0xb4>
 80052a6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80052a8:	2b00      	cmp	r3, #0
 80052aa:	d007      	beq.n	80052bc <UART_WaitOnFlagUntilTimeout+0x30>
 80052ac:	f7fc fe4a 	bl	8001f44 <HAL_GetTick>
 80052b0:	4602      	mov	r2, r0
 80052b2:	683b      	ldr	r3, [r7, #0]
 80052b4:	1ad3      	subs	r3, r2, r3
 80052b6:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80052b8:	429a      	cmp	r2, r3
 80052ba:	d241      	bcs.n	8005340 <UART_WaitOnFlagUntilTimeout+0xb4>
 80052bc:	68fb      	ldr	r3, [r7, #12]
 80052be:	681b      	ldr	r3, [r3, #0]
 80052c0:	330c      	adds	r3, #12
 80052c2:	62bb      	str	r3, [r7, #40]	; 0x28
 80052c4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80052c6:	e853 3f00 	ldrex	r3, [r3]
 80052ca:	627b      	str	r3, [r7, #36]	; 0x24
 80052cc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80052ce:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 80052d2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80052d4:	68fb      	ldr	r3, [r7, #12]
 80052d6:	681b      	ldr	r3, [r3, #0]
 80052d8:	330c      	adds	r3, #12
 80052da:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 80052dc:	637a      	str	r2, [r7, #52]	; 0x34
 80052de:	633b      	str	r3, [r7, #48]	; 0x30
 80052e0:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80052e2:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80052e4:	e841 2300 	strex	r3, r2, [r1]
 80052e8:	62fb      	str	r3, [r7, #44]	; 0x2c
 80052ea:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80052ec:	2b00      	cmp	r3, #0
 80052ee:	d1e5      	bne.n	80052bc <UART_WaitOnFlagUntilTimeout+0x30>
 80052f0:	68fb      	ldr	r3, [r7, #12]
 80052f2:	681b      	ldr	r3, [r3, #0]
 80052f4:	3314      	adds	r3, #20
 80052f6:	617b      	str	r3, [r7, #20]
 80052f8:	697b      	ldr	r3, [r7, #20]
 80052fa:	e853 3f00 	ldrex	r3, [r3]
 80052fe:	613b      	str	r3, [r7, #16]
 8005300:	693b      	ldr	r3, [r7, #16]
 8005302:	f023 0301 	bic.w	r3, r3, #1
 8005306:	63bb      	str	r3, [r7, #56]	; 0x38
 8005308:	68fb      	ldr	r3, [r7, #12]
 800530a:	681b      	ldr	r3, [r3, #0]
 800530c:	3314      	adds	r3, #20
 800530e:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8005310:	623a      	str	r2, [r7, #32]
 8005312:	61fb      	str	r3, [r7, #28]
 8005314:	69f9      	ldr	r1, [r7, #28]
 8005316:	6a3a      	ldr	r2, [r7, #32]
 8005318:	e841 2300 	strex	r3, r2, [r1]
 800531c:	61bb      	str	r3, [r7, #24]
 800531e:	69bb      	ldr	r3, [r7, #24]
 8005320:	2b00      	cmp	r3, #0
 8005322:	d1e5      	bne.n	80052f0 <UART_WaitOnFlagUntilTimeout+0x64>
 8005324:	68fb      	ldr	r3, [r7, #12]
 8005326:	2220      	movs	r2, #32
 8005328:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800532c:	68fb      	ldr	r3, [r7, #12]
 800532e:	2220      	movs	r2, #32
 8005330:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005334:	68fb      	ldr	r3, [r7, #12]
 8005336:	2200      	movs	r2, #0
 8005338:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800533c:	2303      	movs	r3, #3
 800533e:	e00f      	b.n	8005360 <UART_WaitOnFlagUntilTimeout+0xd4>
 8005340:	68fb      	ldr	r3, [r7, #12]
 8005342:	681b      	ldr	r3, [r3, #0]
 8005344:	681a      	ldr	r2, [r3, #0]
 8005346:	68bb      	ldr	r3, [r7, #8]
 8005348:	4013      	ands	r3, r2
 800534a:	68ba      	ldr	r2, [r7, #8]
 800534c:	429a      	cmp	r2, r3
 800534e:	bf0c      	ite	eq
 8005350:	2301      	moveq	r3, #1
 8005352:	2300      	movne	r3, #0
 8005354:	b2db      	uxtb	r3, r3
 8005356:	461a      	mov	r2, r3
 8005358:	79fb      	ldrb	r3, [r7, #7]
 800535a:	429a      	cmp	r2, r3
 800535c:	d09f      	beq.n	800529e <UART_WaitOnFlagUntilTimeout+0x12>
 800535e:	2300      	movs	r3, #0
 8005360:	4618      	mov	r0, r3
 8005362:	3740      	adds	r7, #64	; 0x40
 8005364:	46bd      	mov	sp, r7
 8005366:	bd80      	pop	{r7, pc}

08005368 <UART_Start_Receive_IT>:
 8005368:	b480      	push	{r7}
 800536a:	b085      	sub	sp, #20
 800536c:	af00      	add	r7, sp, #0
 800536e:	60f8      	str	r0, [r7, #12]
 8005370:	60b9      	str	r1, [r7, #8]
 8005372:	4613      	mov	r3, r2
 8005374:	80fb      	strh	r3, [r7, #6]
 8005376:	68fb      	ldr	r3, [r7, #12]
 8005378:	68ba      	ldr	r2, [r7, #8]
 800537a:	629a      	str	r2, [r3, #40]	; 0x28
 800537c:	68fb      	ldr	r3, [r7, #12]
 800537e:	88fa      	ldrh	r2, [r7, #6]
 8005380:	859a      	strh	r2, [r3, #44]	; 0x2c
 8005382:	68fb      	ldr	r3, [r7, #12]
 8005384:	88fa      	ldrh	r2, [r7, #6]
 8005386:	85da      	strh	r2, [r3, #46]	; 0x2e
 8005388:	68fb      	ldr	r3, [r7, #12]
 800538a:	2200      	movs	r2, #0
 800538c:	641a      	str	r2, [r3, #64]	; 0x40
 800538e:	68fb      	ldr	r3, [r7, #12]
 8005390:	2222      	movs	r2, #34	; 0x22
 8005392:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005396:	68fb      	ldr	r3, [r7, #12]
 8005398:	2200      	movs	r2, #0
 800539a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800539e:	68fb      	ldr	r3, [r7, #12]
 80053a0:	691b      	ldr	r3, [r3, #16]
 80053a2:	2b00      	cmp	r3, #0
 80053a4:	d007      	beq.n	80053b6 <UART_Start_Receive_IT+0x4e>
 80053a6:	68fb      	ldr	r3, [r7, #12]
 80053a8:	681b      	ldr	r3, [r3, #0]
 80053aa:	68da      	ldr	r2, [r3, #12]
 80053ac:	68fb      	ldr	r3, [r7, #12]
 80053ae:	681b      	ldr	r3, [r3, #0]
 80053b0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80053b4:	60da      	str	r2, [r3, #12]
 80053b6:	68fb      	ldr	r3, [r7, #12]
 80053b8:	681b      	ldr	r3, [r3, #0]
 80053ba:	695a      	ldr	r2, [r3, #20]
 80053bc:	68fb      	ldr	r3, [r7, #12]
 80053be:	681b      	ldr	r3, [r3, #0]
 80053c0:	f042 0201 	orr.w	r2, r2, #1
 80053c4:	615a      	str	r2, [r3, #20]
 80053c6:	68fb      	ldr	r3, [r7, #12]
 80053c8:	681b      	ldr	r3, [r3, #0]
 80053ca:	68da      	ldr	r2, [r3, #12]
 80053cc:	68fb      	ldr	r3, [r7, #12]
 80053ce:	681b      	ldr	r3, [r3, #0]
 80053d0:	f042 0220 	orr.w	r2, r2, #32
 80053d4:	60da      	str	r2, [r3, #12]
 80053d6:	2300      	movs	r3, #0
 80053d8:	4618      	mov	r0, r3
 80053da:	3714      	adds	r7, #20
 80053dc:	46bd      	mov	sp, r7
 80053de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80053e2:	4770      	bx	lr

080053e4 <UART_EndRxTransfer>:
 80053e4:	b480      	push	{r7}
 80053e6:	b095      	sub	sp, #84	; 0x54
 80053e8:	af00      	add	r7, sp, #0
 80053ea:	6078      	str	r0, [r7, #4]
 80053ec:	687b      	ldr	r3, [r7, #4]
 80053ee:	681b      	ldr	r3, [r3, #0]
 80053f0:	330c      	adds	r3, #12
 80053f2:	637b      	str	r3, [r7, #52]	; 0x34
 80053f4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80053f6:	e853 3f00 	ldrex	r3, [r3]
 80053fa:	633b      	str	r3, [r7, #48]	; 0x30
 80053fc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80053fe:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8005402:	64fb      	str	r3, [r7, #76]	; 0x4c
 8005404:	687b      	ldr	r3, [r7, #4]
 8005406:	681b      	ldr	r3, [r3, #0]
 8005408:	330c      	adds	r3, #12
 800540a:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800540c:	643a      	str	r2, [r7, #64]	; 0x40
 800540e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8005410:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8005412:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8005414:	e841 2300 	strex	r3, r2, [r1]
 8005418:	63bb      	str	r3, [r7, #56]	; 0x38
 800541a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800541c:	2b00      	cmp	r3, #0
 800541e:	d1e5      	bne.n	80053ec <UART_EndRxTransfer+0x8>
 8005420:	687b      	ldr	r3, [r7, #4]
 8005422:	681b      	ldr	r3, [r3, #0]
 8005424:	3314      	adds	r3, #20
 8005426:	623b      	str	r3, [r7, #32]
 8005428:	6a3b      	ldr	r3, [r7, #32]
 800542a:	e853 3f00 	ldrex	r3, [r3]
 800542e:	61fb      	str	r3, [r7, #28]
 8005430:	69fb      	ldr	r3, [r7, #28]
 8005432:	f023 0301 	bic.w	r3, r3, #1
 8005436:	64bb      	str	r3, [r7, #72]	; 0x48
 8005438:	687b      	ldr	r3, [r7, #4]
 800543a:	681b      	ldr	r3, [r3, #0]
 800543c:	3314      	adds	r3, #20
 800543e:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8005440:	62fa      	str	r2, [r7, #44]	; 0x2c
 8005442:	62bb      	str	r3, [r7, #40]	; 0x28
 8005444:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8005446:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8005448:	e841 2300 	strex	r3, r2, [r1]
 800544c:	627b      	str	r3, [r7, #36]	; 0x24
 800544e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005450:	2b00      	cmp	r3, #0
 8005452:	d1e5      	bne.n	8005420 <UART_EndRxTransfer+0x3c>
 8005454:	687b      	ldr	r3, [r7, #4]
 8005456:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005458:	2b01      	cmp	r3, #1
 800545a:	d119      	bne.n	8005490 <UART_EndRxTransfer+0xac>
 800545c:	687b      	ldr	r3, [r7, #4]
 800545e:	681b      	ldr	r3, [r3, #0]
 8005460:	330c      	adds	r3, #12
 8005462:	60fb      	str	r3, [r7, #12]
 8005464:	68fb      	ldr	r3, [r7, #12]
 8005466:	e853 3f00 	ldrex	r3, [r3]
 800546a:	60bb      	str	r3, [r7, #8]
 800546c:	68bb      	ldr	r3, [r7, #8]
 800546e:	f023 0310 	bic.w	r3, r3, #16
 8005472:	647b      	str	r3, [r7, #68]	; 0x44
 8005474:	687b      	ldr	r3, [r7, #4]
 8005476:	681b      	ldr	r3, [r3, #0]
 8005478:	330c      	adds	r3, #12
 800547a:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800547c:	61ba      	str	r2, [r7, #24]
 800547e:	617b      	str	r3, [r7, #20]
 8005480:	6979      	ldr	r1, [r7, #20]
 8005482:	69ba      	ldr	r2, [r7, #24]
 8005484:	e841 2300 	strex	r3, r2, [r1]
 8005488:	613b      	str	r3, [r7, #16]
 800548a:	693b      	ldr	r3, [r7, #16]
 800548c:	2b00      	cmp	r3, #0
 800548e:	d1e5      	bne.n	800545c <UART_EndRxTransfer+0x78>
 8005490:	687b      	ldr	r3, [r7, #4]
 8005492:	2220      	movs	r2, #32
 8005494:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005498:	687b      	ldr	r3, [r7, #4]
 800549a:	2200      	movs	r2, #0
 800549c:	631a      	str	r2, [r3, #48]	; 0x30
 800549e:	bf00      	nop
 80054a0:	3754      	adds	r7, #84	; 0x54
 80054a2:	46bd      	mov	sp, r7
 80054a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054a8:	4770      	bx	lr

080054aa <UART_DMAAbortOnError>:
 80054aa:	b580      	push	{r7, lr}
 80054ac:	b084      	sub	sp, #16
 80054ae:	af00      	add	r7, sp, #0
 80054b0:	6078      	str	r0, [r7, #4]
 80054b2:	687b      	ldr	r3, [r7, #4]
 80054b4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80054b6:	60fb      	str	r3, [r7, #12]
 80054b8:	68fb      	ldr	r3, [r7, #12]
 80054ba:	2200      	movs	r2, #0
 80054bc:	85da      	strh	r2, [r3, #46]	; 0x2e
 80054be:	68fb      	ldr	r3, [r7, #12]
 80054c0:	2200      	movs	r2, #0
 80054c2:	84da      	strh	r2, [r3, #38]	; 0x26
 80054c4:	68f8      	ldr	r0, [r7, #12]
 80054c6:	f7ff fecb 	bl	8005260 <HAL_UART_ErrorCallback>
 80054ca:	bf00      	nop
 80054cc:	3710      	adds	r7, #16
 80054ce:	46bd      	mov	sp, r7
 80054d0:	bd80      	pop	{r7, pc}

080054d2 <UART_Transmit_IT>:
 80054d2:	b480      	push	{r7}
 80054d4:	b085      	sub	sp, #20
 80054d6:	af00      	add	r7, sp, #0
 80054d8:	6078      	str	r0, [r7, #4]
 80054da:	687b      	ldr	r3, [r7, #4]
 80054dc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80054e0:	b2db      	uxtb	r3, r3
 80054e2:	2b21      	cmp	r3, #33	; 0x21
 80054e4:	d13e      	bne.n	8005564 <UART_Transmit_IT+0x92>
 80054e6:	687b      	ldr	r3, [r7, #4]
 80054e8:	689b      	ldr	r3, [r3, #8]
 80054ea:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80054ee:	d114      	bne.n	800551a <UART_Transmit_IT+0x48>
 80054f0:	687b      	ldr	r3, [r7, #4]
 80054f2:	691b      	ldr	r3, [r3, #16]
 80054f4:	2b00      	cmp	r3, #0
 80054f6:	d110      	bne.n	800551a <UART_Transmit_IT+0x48>
 80054f8:	687b      	ldr	r3, [r7, #4]
 80054fa:	6a1b      	ldr	r3, [r3, #32]
 80054fc:	60fb      	str	r3, [r7, #12]
 80054fe:	68fb      	ldr	r3, [r7, #12]
 8005500:	881b      	ldrh	r3, [r3, #0]
 8005502:	461a      	mov	r2, r3
 8005504:	687b      	ldr	r3, [r7, #4]
 8005506:	681b      	ldr	r3, [r3, #0]
 8005508:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800550c:	605a      	str	r2, [r3, #4]
 800550e:	687b      	ldr	r3, [r7, #4]
 8005510:	6a1b      	ldr	r3, [r3, #32]
 8005512:	1c9a      	adds	r2, r3, #2
 8005514:	687b      	ldr	r3, [r7, #4]
 8005516:	621a      	str	r2, [r3, #32]
 8005518:	e008      	b.n	800552c <UART_Transmit_IT+0x5a>
 800551a:	687b      	ldr	r3, [r7, #4]
 800551c:	6a1b      	ldr	r3, [r3, #32]
 800551e:	1c59      	adds	r1, r3, #1
 8005520:	687a      	ldr	r2, [r7, #4]
 8005522:	6211      	str	r1, [r2, #32]
 8005524:	781a      	ldrb	r2, [r3, #0]
 8005526:	687b      	ldr	r3, [r7, #4]
 8005528:	681b      	ldr	r3, [r3, #0]
 800552a:	605a      	str	r2, [r3, #4]
 800552c:	687b      	ldr	r3, [r7, #4]
 800552e:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8005530:	b29b      	uxth	r3, r3
 8005532:	3b01      	subs	r3, #1
 8005534:	b29b      	uxth	r3, r3
 8005536:	687a      	ldr	r2, [r7, #4]
 8005538:	4619      	mov	r1, r3
 800553a:	84d1      	strh	r1, [r2, #38]	; 0x26
 800553c:	2b00      	cmp	r3, #0
 800553e:	d10f      	bne.n	8005560 <UART_Transmit_IT+0x8e>
 8005540:	687b      	ldr	r3, [r7, #4]
 8005542:	681b      	ldr	r3, [r3, #0]
 8005544:	68da      	ldr	r2, [r3, #12]
 8005546:	687b      	ldr	r3, [r7, #4]
 8005548:	681b      	ldr	r3, [r3, #0]
 800554a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800554e:	60da      	str	r2, [r3, #12]
 8005550:	687b      	ldr	r3, [r7, #4]
 8005552:	681b      	ldr	r3, [r3, #0]
 8005554:	68da      	ldr	r2, [r3, #12]
 8005556:	687b      	ldr	r3, [r7, #4]
 8005558:	681b      	ldr	r3, [r3, #0]
 800555a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800555e:	60da      	str	r2, [r3, #12]
 8005560:	2300      	movs	r3, #0
 8005562:	e000      	b.n	8005566 <UART_Transmit_IT+0x94>
 8005564:	2302      	movs	r3, #2
 8005566:	4618      	mov	r0, r3
 8005568:	3714      	adds	r7, #20
 800556a:	46bd      	mov	sp, r7
 800556c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005570:	4770      	bx	lr

08005572 <UART_EndTransmit_IT>:
 8005572:	b580      	push	{r7, lr}
 8005574:	b082      	sub	sp, #8
 8005576:	af00      	add	r7, sp, #0
 8005578:	6078      	str	r0, [r7, #4]
 800557a:	687b      	ldr	r3, [r7, #4]
 800557c:	681b      	ldr	r3, [r3, #0]
 800557e:	68da      	ldr	r2, [r3, #12]
 8005580:	687b      	ldr	r3, [r7, #4]
 8005582:	681b      	ldr	r3, [r3, #0]
 8005584:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005588:	60da      	str	r2, [r3, #12]
 800558a:	687b      	ldr	r3, [r7, #4]
 800558c:	2220      	movs	r2, #32
 800558e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005592:	6878      	ldr	r0, [r7, #4]
 8005594:	f7ff fe5a 	bl	800524c <HAL_UART_TxCpltCallback>
 8005598:	2300      	movs	r3, #0
 800559a:	4618      	mov	r0, r3
 800559c:	3708      	adds	r7, #8
 800559e:	46bd      	mov	sp, r7
 80055a0:	bd80      	pop	{r7, pc}

080055a2 <UART_Receive_IT>:
 80055a2:	b580      	push	{r7, lr}
 80055a4:	b08c      	sub	sp, #48	; 0x30
 80055a6:	af00      	add	r7, sp, #0
 80055a8:	6078      	str	r0, [r7, #4]
 80055aa:	687b      	ldr	r3, [r7, #4]
 80055ac:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80055b0:	b2db      	uxtb	r3, r3
 80055b2:	2b22      	cmp	r3, #34	; 0x22
 80055b4:	f040 80ab 	bne.w	800570e <UART_Receive_IT+0x16c>
 80055b8:	687b      	ldr	r3, [r7, #4]
 80055ba:	689b      	ldr	r3, [r3, #8]
 80055bc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80055c0:	d117      	bne.n	80055f2 <UART_Receive_IT+0x50>
 80055c2:	687b      	ldr	r3, [r7, #4]
 80055c4:	691b      	ldr	r3, [r3, #16]
 80055c6:	2b00      	cmp	r3, #0
 80055c8:	d113      	bne.n	80055f2 <UART_Receive_IT+0x50>
 80055ca:	2300      	movs	r3, #0
 80055cc:	62fb      	str	r3, [r7, #44]	; 0x2c
 80055ce:	687b      	ldr	r3, [r7, #4]
 80055d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80055d2:	62bb      	str	r3, [r7, #40]	; 0x28
 80055d4:	687b      	ldr	r3, [r7, #4]
 80055d6:	681b      	ldr	r3, [r3, #0]
 80055d8:	685b      	ldr	r3, [r3, #4]
 80055da:	b29b      	uxth	r3, r3
 80055dc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80055e0:	b29a      	uxth	r2, r3
 80055e2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80055e4:	801a      	strh	r2, [r3, #0]
 80055e6:	687b      	ldr	r3, [r7, #4]
 80055e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80055ea:	1c9a      	adds	r2, r3, #2
 80055ec:	687b      	ldr	r3, [r7, #4]
 80055ee:	629a      	str	r2, [r3, #40]	; 0x28
 80055f0:	e026      	b.n	8005640 <UART_Receive_IT+0x9e>
 80055f2:	687b      	ldr	r3, [r7, #4]
 80055f4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80055f6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80055f8:	2300      	movs	r3, #0
 80055fa:	62bb      	str	r3, [r7, #40]	; 0x28
 80055fc:	687b      	ldr	r3, [r7, #4]
 80055fe:	689b      	ldr	r3, [r3, #8]
 8005600:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005604:	d007      	beq.n	8005616 <UART_Receive_IT+0x74>
 8005606:	687b      	ldr	r3, [r7, #4]
 8005608:	689b      	ldr	r3, [r3, #8]
 800560a:	2b00      	cmp	r3, #0
 800560c:	d10a      	bne.n	8005624 <UART_Receive_IT+0x82>
 800560e:	687b      	ldr	r3, [r7, #4]
 8005610:	691b      	ldr	r3, [r3, #16]
 8005612:	2b00      	cmp	r3, #0
 8005614:	d106      	bne.n	8005624 <UART_Receive_IT+0x82>
 8005616:	687b      	ldr	r3, [r7, #4]
 8005618:	681b      	ldr	r3, [r3, #0]
 800561a:	685b      	ldr	r3, [r3, #4]
 800561c:	b2da      	uxtb	r2, r3
 800561e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005620:	701a      	strb	r2, [r3, #0]
 8005622:	e008      	b.n	8005636 <UART_Receive_IT+0x94>
 8005624:	687b      	ldr	r3, [r7, #4]
 8005626:	681b      	ldr	r3, [r3, #0]
 8005628:	685b      	ldr	r3, [r3, #4]
 800562a:	b2db      	uxtb	r3, r3
 800562c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8005630:	b2da      	uxtb	r2, r3
 8005632:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005634:	701a      	strb	r2, [r3, #0]
 8005636:	687b      	ldr	r3, [r7, #4]
 8005638:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800563a:	1c5a      	adds	r2, r3, #1
 800563c:	687b      	ldr	r3, [r7, #4]
 800563e:	629a      	str	r2, [r3, #40]	; 0x28
 8005640:	687b      	ldr	r3, [r7, #4]
 8005642:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8005644:	b29b      	uxth	r3, r3
 8005646:	3b01      	subs	r3, #1
 8005648:	b29b      	uxth	r3, r3
 800564a:	687a      	ldr	r2, [r7, #4]
 800564c:	4619      	mov	r1, r3
 800564e:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8005650:	2b00      	cmp	r3, #0
 8005652:	d15a      	bne.n	800570a <UART_Receive_IT+0x168>
 8005654:	687b      	ldr	r3, [r7, #4]
 8005656:	681b      	ldr	r3, [r3, #0]
 8005658:	68da      	ldr	r2, [r3, #12]
 800565a:	687b      	ldr	r3, [r7, #4]
 800565c:	681b      	ldr	r3, [r3, #0]
 800565e:	f022 0220 	bic.w	r2, r2, #32
 8005662:	60da      	str	r2, [r3, #12]
 8005664:	687b      	ldr	r3, [r7, #4]
 8005666:	681b      	ldr	r3, [r3, #0]
 8005668:	68da      	ldr	r2, [r3, #12]
 800566a:	687b      	ldr	r3, [r7, #4]
 800566c:	681b      	ldr	r3, [r3, #0]
 800566e:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005672:	60da      	str	r2, [r3, #12]
 8005674:	687b      	ldr	r3, [r7, #4]
 8005676:	681b      	ldr	r3, [r3, #0]
 8005678:	695a      	ldr	r2, [r3, #20]
 800567a:	687b      	ldr	r3, [r7, #4]
 800567c:	681b      	ldr	r3, [r3, #0]
 800567e:	f022 0201 	bic.w	r2, r2, #1
 8005682:	615a      	str	r2, [r3, #20]
 8005684:	687b      	ldr	r3, [r7, #4]
 8005686:	2220      	movs	r2, #32
 8005688:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800568c:	687b      	ldr	r3, [r7, #4]
 800568e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005690:	2b01      	cmp	r3, #1
 8005692:	d135      	bne.n	8005700 <UART_Receive_IT+0x15e>
 8005694:	687b      	ldr	r3, [r7, #4]
 8005696:	2200      	movs	r2, #0
 8005698:	631a      	str	r2, [r3, #48]	; 0x30
 800569a:	687b      	ldr	r3, [r7, #4]
 800569c:	681b      	ldr	r3, [r3, #0]
 800569e:	330c      	adds	r3, #12
 80056a0:	617b      	str	r3, [r7, #20]
 80056a2:	697b      	ldr	r3, [r7, #20]
 80056a4:	e853 3f00 	ldrex	r3, [r3]
 80056a8:	613b      	str	r3, [r7, #16]
 80056aa:	693b      	ldr	r3, [r7, #16]
 80056ac:	f023 0310 	bic.w	r3, r3, #16
 80056b0:	627b      	str	r3, [r7, #36]	; 0x24
 80056b2:	687b      	ldr	r3, [r7, #4]
 80056b4:	681b      	ldr	r3, [r3, #0]
 80056b6:	330c      	adds	r3, #12
 80056b8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80056ba:	623a      	str	r2, [r7, #32]
 80056bc:	61fb      	str	r3, [r7, #28]
 80056be:	69f9      	ldr	r1, [r7, #28]
 80056c0:	6a3a      	ldr	r2, [r7, #32]
 80056c2:	e841 2300 	strex	r3, r2, [r1]
 80056c6:	61bb      	str	r3, [r7, #24]
 80056c8:	69bb      	ldr	r3, [r7, #24]
 80056ca:	2b00      	cmp	r3, #0
 80056cc:	d1e5      	bne.n	800569a <UART_Receive_IT+0xf8>
 80056ce:	687b      	ldr	r3, [r7, #4]
 80056d0:	681b      	ldr	r3, [r3, #0]
 80056d2:	681b      	ldr	r3, [r3, #0]
 80056d4:	f003 0310 	and.w	r3, r3, #16
 80056d8:	2b10      	cmp	r3, #16
 80056da:	d10a      	bne.n	80056f2 <UART_Receive_IT+0x150>
 80056dc:	2300      	movs	r3, #0
 80056de:	60fb      	str	r3, [r7, #12]
 80056e0:	687b      	ldr	r3, [r7, #4]
 80056e2:	681b      	ldr	r3, [r3, #0]
 80056e4:	681b      	ldr	r3, [r3, #0]
 80056e6:	60fb      	str	r3, [r7, #12]
 80056e8:	687b      	ldr	r3, [r7, #4]
 80056ea:	681b      	ldr	r3, [r3, #0]
 80056ec:	685b      	ldr	r3, [r3, #4]
 80056ee:	60fb      	str	r3, [r7, #12]
 80056f0:	68fb      	ldr	r3, [r7, #12]
 80056f2:	687b      	ldr	r3, [r7, #4]
 80056f4:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 80056f6:	4619      	mov	r1, r3
 80056f8:	6878      	ldr	r0, [r7, #4]
 80056fa:	f7ff fdbb 	bl	8005274 <HAL_UARTEx_RxEventCallback>
 80056fe:	e002      	b.n	8005706 <UART_Receive_IT+0x164>
 8005700:	6878      	ldr	r0, [r7, #4]
 8005702:	f7fc fb01 	bl	8001d08 <HAL_UART_RxCpltCallback>
 8005706:	2300      	movs	r3, #0
 8005708:	e002      	b.n	8005710 <UART_Receive_IT+0x16e>
 800570a:	2300      	movs	r3, #0
 800570c:	e000      	b.n	8005710 <UART_Receive_IT+0x16e>
 800570e:	2302      	movs	r3, #2
 8005710:	4618      	mov	r0, r3
 8005712:	3730      	adds	r7, #48	; 0x30
 8005714:	46bd      	mov	sp, r7
 8005716:	bd80      	pop	{r7, pc}

08005718 <UART_SetConfig>:
 8005718:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800571c:	b0c0      	sub	sp, #256	; 0x100
 800571e:	af00      	add	r7, sp, #0
 8005720:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 8005724:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8005728:	681b      	ldr	r3, [r3, #0]
 800572a:	691b      	ldr	r3, [r3, #16]
 800572c:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 8005730:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8005734:	68d9      	ldr	r1, [r3, #12]
 8005736:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800573a:	681a      	ldr	r2, [r3, #0]
 800573c:	ea40 0301 	orr.w	r3, r0, r1
 8005740:	6113      	str	r3, [r2, #16]
 8005742:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8005746:	689a      	ldr	r2, [r3, #8]
 8005748:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800574c:	691b      	ldr	r3, [r3, #16]
 800574e:	431a      	orrs	r2, r3
 8005750:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8005754:	695b      	ldr	r3, [r3, #20]
 8005756:	431a      	orrs	r2, r3
 8005758:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800575c:	69db      	ldr	r3, [r3, #28]
 800575e:	4313      	orrs	r3, r2
 8005760:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 8005764:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8005768:	681b      	ldr	r3, [r3, #0]
 800576a:	68db      	ldr	r3, [r3, #12]
 800576c:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 8005770:	f021 010c 	bic.w	r1, r1, #12
 8005774:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8005778:	681a      	ldr	r2, [r3, #0]
 800577a:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 800577e:	430b      	orrs	r3, r1
 8005780:	60d3      	str	r3, [r2, #12]
 8005782:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8005786:	681b      	ldr	r3, [r3, #0]
 8005788:	695b      	ldr	r3, [r3, #20]
 800578a:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 800578e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8005792:	6999      	ldr	r1, [r3, #24]
 8005794:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8005798:	681a      	ldr	r2, [r3, #0]
 800579a:	ea40 0301 	orr.w	r3, r0, r1
 800579e:	6153      	str	r3, [r2, #20]
 80057a0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80057a4:	681a      	ldr	r2, [r3, #0]
 80057a6:	4b8f      	ldr	r3, [pc, #572]	; (80059e4 <UART_SetConfig+0x2cc>)
 80057a8:	429a      	cmp	r2, r3
 80057aa:	d005      	beq.n	80057b8 <UART_SetConfig+0xa0>
 80057ac:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80057b0:	681a      	ldr	r2, [r3, #0]
 80057b2:	4b8d      	ldr	r3, [pc, #564]	; (80059e8 <UART_SetConfig+0x2d0>)
 80057b4:	429a      	cmp	r2, r3
 80057b6:	d104      	bne.n	80057c2 <UART_SetConfig+0xaa>
 80057b8:	f7fe fb10 	bl	8003ddc <HAL_RCC_GetPCLK2Freq>
 80057bc:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 80057c0:	e003      	b.n	80057ca <UART_SetConfig+0xb2>
 80057c2:	f7fe faf7 	bl	8003db4 <HAL_RCC_GetPCLK1Freq>
 80057c6:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 80057ca:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80057ce:	69db      	ldr	r3, [r3, #28]
 80057d0:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80057d4:	f040 810c 	bne.w	80059f0 <UART_SetConfig+0x2d8>
 80057d8:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 80057dc:	2200      	movs	r2, #0
 80057de:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 80057e2:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 80057e6:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 80057ea:	4622      	mov	r2, r4
 80057ec:	462b      	mov	r3, r5
 80057ee:	1891      	adds	r1, r2, r2
 80057f0:	65b9      	str	r1, [r7, #88]	; 0x58
 80057f2:	415b      	adcs	r3, r3
 80057f4:	65fb      	str	r3, [r7, #92]	; 0x5c
 80057f6:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 80057fa:	4621      	mov	r1, r4
 80057fc:	eb12 0801 	adds.w	r8, r2, r1
 8005800:	4629      	mov	r1, r5
 8005802:	eb43 0901 	adc.w	r9, r3, r1
 8005806:	f04f 0200 	mov.w	r2, #0
 800580a:	f04f 0300 	mov.w	r3, #0
 800580e:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8005812:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8005816:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800581a:	4690      	mov	r8, r2
 800581c:	4699      	mov	r9, r3
 800581e:	4623      	mov	r3, r4
 8005820:	eb18 0303 	adds.w	r3, r8, r3
 8005824:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8005828:	462b      	mov	r3, r5
 800582a:	eb49 0303 	adc.w	r3, r9, r3
 800582e:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8005832:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8005836:	685b      	ldr	r3, [r3, #4]
 8005838:	2200      	movs	r2, #0
 800583a:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800583e:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 8005842:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 8005846:	460b      	mov	r3, r1
 8005848:	18db      	adds	r3, r3, r3
 800584a:	653b      	str	r3, [r7, #80]	; 0x50
 800584c:	4613      	mov	r3, r2
 800584e:	eb42 0303 	adc.w	r3, r2, r3
 8005852:	657b      	str	r3, [r7, #84]	; 0x54
 8005854:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 8005858:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800585c:	f7fa fd30 	bl	80002c0 <__aeabi_uldivmod>
 8005860:	4602      	mov	r2, r0
 8005862:	460b      	mov	r3, r1
 8005864:	4b61      	ldr	r3, [pc, #388]	; (80059ec <UART_SetConfig+0x2d4>)
 8005866:	fba3 2302 	umull	r2, r3, r3, r2
 800586a:	095b      	lsrs	r3, r3, #5
 800586c:	011c      	lsls	r4, r3, #4
 800586e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8005872:	2200      	movs	r2, #0
 8005874:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8005878:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 800587c:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 8005880:	4642      	mov	r2, r8
 8005882:	464b      	mov	r3, r9
 8005884:	1891      	adds	r1, r2, r2
 8005886:	64b9      	str	r1, [r7, #72]	; 0x48
 8005888:	415b      	adcs	r3, r3
 800588a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800588c:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8005890:	4641      	mov	r1, r8
 8005892:	eb12 0a01 	adds.w	sl, r2, r1
 8005896:	4649      	mov	r1, r9
 8005898:	eb43 0b01 	adc.w	fp, r3, r1
 800589c:	f04f 0200 	mov.w	r2, #0
 80058a0:	f04f 0300 	mov.w	r3, #0
 80058a4:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80058a8:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80058ac:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80058b0:	4692      	mov	sl, r2
 80058b2:	469b      	mov	fp, r3
 80058b4:	4643      	mov	r3, r8
 80058b6:	eb1a 0303 	adds.w	r3, sl, r3
 80058ba:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 80058be:	464b      	mov	r3, r9
 80058c0:	eb4b 0303 	adc.w	r3, fp, r3
 80058c4:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 80058c8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80058cc:	685b      	ldr	r3, [r3, #4]
 80058ce:	2200      	movs	r2, #0
 80058d0:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 80058d4:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 80058d8:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 80058dc:	460b      	mov	r3, r1
 80058de:	18db      	adds	r3, r3, r3
 80058e0:	643b      	str	r3, [r7, #64]	; 0x40
 80058e2:	4613      	mov	r3, r2
 80058e4:	eb42 0303 	adc.w	r3, r2, r3
 80058e8:	647b      	str	r3, [r7, #68]	; 0x44
 80058ea:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 80058ee:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 80058f2:	f7fa fce5 	bl	80002c0 <__aeabi_uldivmod>
 80058f6:	4602      	mov	r2, r0
 80058f8:	460b      	mov	r3, r1
 80058fa:	4611      	mov	r1, r2
 80058fc:	4b3b      	ldr	r3, [pc, #236]	; (80059ec <UART_SetConfig+0x2d4>)
 80058fe:	fba3 2301 	umull	r2, r3, r3, r1
 8005902:	095b      	lsrs	r3, r3, #5
 8005904:	2264      	movs	r2, #100	; 0x64
 8005906:	fb02 f303 	mul.w	r3, r2, r3
 800590a:	1acb      	subs	r3, r1, r3
 800590c:	00db      	lsls	r3, r3, #3
 800590e:	f103 0232 	add.w	r2, r3, #50	; 0x32
 8005912:	4b36      	ldr	r3, [pc, #216]	; (80059ec <UART_SetConfig+0x2d4>)
 8005914:	fba3 2302 	umull	r2, r3, r3, r2
 8005918:	095b      	lsrs	r3, r3, #5
 800591a:	005b      	lsls	r3, r3, #1
 800591c:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8005920:	441c      	add	r4, r3
 8005922:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8005926:	2200      	movs	r2, #0
 8005928:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800592c:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 8005930:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 8005934:	4642      	mov	r2, r8
 8005936:	464b      	mov	r3, r9
 8005938:	1891      	adds	r1, r2, r2
 800593a:	63b9      	str	r1, [r7, #56]	; 0x38
 800593c:	415b      	adcs	r3, r3
 800593e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8005940:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 8005944:	4641      	mov	r1, r8
 8005946:	1851      	adds	r1, r2, r1
 8005948:	6339      	str	r1, [r7, #48]	; 0x30
 800594a:	4649      	mov	r1, r9
 800594c:	414b      	adcs	r3, r1
 800594e:	637b      	str	r3, [r7, #52]	; 0x34
 8005950:	f04f 0200 	mov.w	r2, #0
 8005954:	f04f 0300 	mov.w	r3, #0
 8005958:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 800595c:	4659      	mov	r1, fp
 800595e:	00cb      	lsls	r3, r1, #3
 8005960:	4651      	mov	r1, sl
 8005962:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8005966:	4651      	mov	r1, sl
 8005968:	00ca      	lsls	r2, r1, #3
 800596a:	4610      	mov	r0, r2
 800596c:	4619      	mov	r1, r3
 800596e:	4603      	mov	r3, r0
 8005970:	4642      	mov	r2, r8
 8005972:	189b      	adds	r3, r3, r2
 8005974:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8005978:	464b      	mov	r3, r9
 800597a:	460a      	mov	r2, r1
 800597c:	eb42 0303 	adc.w	r3, r2, r3
 8005980:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8005984:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8005988:	685b      	ldr	r3, [r3, #4]
 800598a:	2200      	movs	r2, #0
 800598c:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8005990:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 8005994:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 8005998:	460b      	mov	r3, r1
 800599a:	18db      	adds	r3, r3, r3
 800599c:	62bb      	str	r3, [r7, #40]	; 0x28
 800599e:	4613      	mov	r3, r2
 80059a0:	eb42 0303 	adc.w	r3, r2, r3
 80059a4:	62fb      	str	r3, [r7, #44]	; 0x2c
 80059a6:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 80059aa:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 80059ae:	f7fa fc87 	bl	80002c0 <__aeabi_uldivmod>
 80059b2:	4602      	mov	r2, r0
 80059b4:	460b      	mov	r3, r1
 80059b6:	4b0d      	ldr	r3, [pc, #52]	; (80059ec <UART_SetConfig+0x2d4>)
 80059b8:	fba3 1302 	umull	r1, r3, r3, r2
 80059bc:	095b      	lsrs	r3, r3, #5
 80059be:	2164      	movs	r1, #100	; 0x64
 80059c0:	fb01 f303 	mul.w	r3, r1, r3
 80059c4:	1ad3      	subs	r3, r2, r3
 80059c6:	00db      	lsls	r3, r3, #3
 80059c8:	3332      	adds	r3, #50	; 0x32
 80059ca:	4a08      	ldr	r2, [pc, #32]	; (80059ec <UART_SetConfig+0x2d4>)
 80059cc:	fba2 2303 	umull	r2, r3, r2, r3
 80059d0:	095b      	lsrs	r3, r3, #5
 80059d2:	f003 0207 	and.w	r2, r3, #7
 80059d6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80059da:	681b      	ldr	r3, [r3, #0]
 80059dc:	4422      	add	r2, r4
 80059de:	609a      	str	r2, [r3, #8]
 80059e0:	e106      	b.n	8005bf0 <UART_SetConfig+0x4d8>
 80059e2:	bf00      	nop
 80059e4:	40011000 	.word	0x40011000
 80059e8:	40011400 	.word	0x40011400
 80059ec:	51eb851f 	.word	0x51eb851f
 80059f0:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 80059f4:	2200      	movs	r2, #0
 80059f6:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 80059fa:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 80059fe:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 8005a02:	4642      	mov	r2, r8
 8005a04:	464b      	mov	r3, r9
 8005a06:	1891      	adds	r1, r2, r2
 8005a08:	6239      	str	r1, [r7, #32]
 8005a0a:	415b      	adcs	r3, r3
 8005a0c:	627b      	str	r3, [r7, #36]	; 0x24
 8005a0e:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8005a12:	4641      	mov	r1, r8
 8005a14:	1854      	adds	r4, r2, r1
 8005a16:	4649      	mov	r1, r9
 8005a18:	eb43 0501 	adc.w	r5, r3, r1
 8005a1c:	f04f 0200 	mov.w	r2, #0
 8005a20:	f04f 0300 	mov.w	r3, #0
 8005a24:	00eb      	lsls	r3, r5, #3
 8005a26:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8005a2a:	00e2      	lsls	r2, r4, #3
 8005a2c:	4614      	mov	r4, r2
 8005a2e:	461d      	mov	r5, r3
 8005a30:	4643      	mov	r3, r8
 8005a32:	18e3      	adds	r3, r4, r3
 8005a34:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8005a38:	464b      	mov	r3, r9
 8005a3a:	eb45 0303 	adc.w	r3, r5, r3
 8005a3e:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8005a42:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8005a46:	685b      	ldr	r3, [r3, #4]
 8005a48:	2200      	movs	r2, #0
 8005a4a:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8005a4e:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 8005a52:	f04f 0200 	mov.w	r2, #0
 8005a56:	f04f 0300 	mov.w	r3, #0
 8005a5a:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 8005a5e:	4629      	mov	r1, r5
 8005a60:	008b      	lsls	r3, r1, #2
 8005a62:	4621      	mov	r1, r4
 8005a64:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8005a68:	4621      	mov	r1, r4
 8005a6a:	008a      	lsls	r2, r1, #2
 8005a6c:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 8005a70:	f7fa fc26 	bl	80002c0 <__aeabi_uldivmod>
 8005a74:	4602      	mov	r2, r0
 8005a76:	460b      	mov	r3, r1
 8005a78:	4b60      	ldr	r3, [pc, #384]	; (8005bfc <UART_SetConfig+0x4e4>)
 8005a7a:	fba3 2302 	umull	r2, r3, r3, r2
 8005a7e:	095b      	lsrs	r3, r3, #5
 8005a80:	011c      	lsls	r4, r3, #4
 8005a82:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8005a86:	2200      	movs	r2, #0
 8005a88:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8005a8c:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8005a90:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 8005a94:	4642      	mov	r2, r8
 8005a96:	464b      	mov	r3, r9
 8005a98:	1891      	adds	r1, r2, r2
 8005a9a:	61b9      	str	r1, [r7, #24]
 8005a9c:	415b      	adcs	r3, r3
 8005a9e:	61fb      	str	r3, [r7, #28]
 8005aa0:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8005aa4:	4641      	mov	r1, r8
 8005aa6:	1851      	adds	r1, r2, r1
 8005aa8:	6139      	str	r1, [r7, #16]
 8005aaa:	4649      	mov	r1, r9
 8005aac:	414b      	adcs	r3, r1
 8005aae:	617b      	str	r3, [r7, #20]
 8005ab0:	f04f 0200 	mov.w	r2, #0
 8005ab4:	f04f 0300 	mov.w	r3, #0
 8005ab8:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8005abc:	4659      	mov	r1, fp
 8005abe:	00cb      	lsls	r3, r1, #3
 8005ac0:	4651      	mov	r1, sl
 8005ac2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8005ac6:	4651      	mov	r1, sl
 8005ac8:	00ca      	lsls	r2, r1, #3
 8005aca:	4610      	mov	r0, r2
 8005acc:	4619      	mov	r1, r3
 8005ace:	4603      	mov	r3, r0
 8005ad0:	4642      	mov	r2, r8
 8005ad2:	189b      	adds	r3, r3, r2
 8005ad4:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8005ad8:	464b      	mov	r3, r9
 8005ada:	460a      	mov	r2, r1
 8005adc:	eb42 0303 	adc.w	r3, r2, r3
 8005ae0:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8005ae4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8005ae8:	685b      	ldr	r3, [r3, #4]
 8005aea:	2200      	movs	r2, #0
 8005aec:	67bb      	str	r3, [r7, #120]	; 0x78
 8005aee:	67fa      	str	r2, [r7, #124]	; 0x7c
 8005af0:	f04f 0200 	mov.w	r2, #0
 8005af4:	f04f 0300 	mov.w	r3, #0
 8005af8:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 8005afc:	4649      	mov	r1, r9
 8005afe:	008b      	lsls	r3, r1, #2
 8005b00:	4641      	mov	r1, r8
 8005b02:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8005b06:	4641      	mov	r1, r8
 8005b08:	008a      	lsls	r2, r1, #2
 8005b0a:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 8005b0e:	f7fa fbd7 	bl	80002c0 <__aeabi_uldivmod>
 8005b12:	4602      	mov	r2, r0
 8005b14:	460b      	mov	r3, r1
 8005b16:	4611      	mov	r1, r2
 8005b18:	4b38      	ldr	r3, [pc, #224]	; (8005bfc <UART_SetConfig+0x4e4>)
 8005b1a:	fba3 2301 	umull	r2, r3, r3, r1
 8005b1e:	095b      	lsrs	r3, r3, #5
 8005b20:	2264      	movs	r2, #100	; 0x64
 8005b22:	fb02 f303 	mul.w	r3, r2, r3
 8005b26:	1acb      	subs	r3, r1, r3
 8005b28:	011b      	lsls	r3, r3, #4
 8005b2a:	3332      	adds	r3, #50	; 0x32
 8005b2c:	4a33      	ldr	r2, [pc, #204]	; (8005bfc <UART_SetConfig+0x4e4>)
 8005b2e:	fba2 2303 	umull	r2, r3, r2, r3
 8005b32:	095b      	lsrs	r3, r3, #5
 8005b34:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8005b38:	441c      	add	r4, r3
 8005b3a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8005b3e:	2200      	movs	r2, #0
 8005b40:	673b      	str	r3, [r7, #112]	; 0x70
 8005b42:	677a      	str	r2, [r7, #116]	; 0x74
 8005b44:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 8005b48:	4642      	mov	r2, r8
 8005b4a:	464b      	mov	r3, r9
 8005b4c:	1891      	adds	r1, r2, r2
 8005b4e:	60b9      	str	r1, [r7, #8]
 8005b50:	415b      	adcs	r3, r3
 8005b52:	60fb      	str	r3, [r7, #12]
 8005b54:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8005b58:	4641      	mov	r1, r8
 8005b5a:	1851      	adds	r1, r2, r1
 8005b5c:	6039      	str	r1, [r7, #0]
 8005b5e:	4649      	mov	r1, r9
 8005b60:	414b      	adcs	r3, r1
 8005b62:	607b      	str	r3, [r7, #4]
 8005b64:	f04f 0200 	mov.w	r2, #0
 8005b68:	f04f 0300 	mov.w	r3, #0
 8005b6c:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8005b70:	4659      	mov	r1, fp
 8005b72:	00cb      	lsls	r3, r1, #3
 8005b74:	4651      	mov	r1, sl
 8005b76:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8005b7a:	4651      	mov	r1, sl
 8005b7c:	00ca      	lsls	r2, r1, #3
 8005b7e:	4610      	mov	r0, r2
 8005b80:	4619      	mov	r1, r3
 8005b82:	4603      	mov	r3, r0
 8005b84:	4642      	mov	r2, r8
 8005b86:	189b      	adds	r3, r3, r2
 8005b88:	66bb      	str	r3, [r7, #104]	; 0x68
 8005b8a:	464b      	mov	r3, r9
 8005b8c:	460a      	mov	r2, r1
 8005b8e:	eb42 0303 	adc.w	r3, r2, r3
 8005b92:	66fb      	str	r3, [r7, #108]	; 0x6c
 8005b94:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8005b98:	685b      	ldr	r3, [r3, #4]
 8005b9a:	2200      	movs	r2, #0
 8005b9c:	663b      	str	r3, [r7, #96]	; 0x60
 8005b9e:	667a      	str	r2, [r7, #100]	; 0x64
 8005ba0:	f04f 0200 	mov.w	r2, #0
 8005ba4:	f04f 0300 	mov.w	r3, #0
 8005ba8:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 8005bac:	4649      	mov	r1, r9
 8005bae:	008b      	lsls	r3, r1, #2
 8005bb0:	4641      	mov	r1, r8
 8005bb2:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8005bb6:	4641      	mov	r1, r8
 8005bb8:	008a      	lsls	r2, r1, #2
 8005bba:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 8005bbe:	f7fa fb7f 	bl	80002c0 <__aeabi_uldivmod>
 8005bc2:	4602      	mov	r2, r0
 8005bc4:	460b      	mov	r3, r1
 8005bc6:	4b0d      	ldr	r3, [pc, #52]	; (8005bfc <UART_SetConfig+0x4e4>)
 8005bc8:	fba3 1302 	umull	r1, r3, r3, r2
 8005bcc:	095b      	lsrs	r3, r3, #5
 8005bce:	2164      	movs	r1, #100	; 0x64
 8005bd0:	fb01 f303 	mul.w	r3, r1, r3
 8005bd4:	1ad3      	subs	r3, r2, r3
 8005bd6:	011b      	lsls	r3, r3, #4
 8005bd8:	3332      	adds	r3, #50	; 0x32
 8005bda:	4a08      	ldr	r2, [pc, #32]	; (8005bfc <UART_SetConfig+0x4e4>)
 8005bdc:	fba2 2303 	umull	r2, r3, r2, r3
 8005be0:	095b      	lsrs	r3, r3, #5
 8005be2:	f003 020f 	and.w	r2, r3, #15
 8005be6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8005bea:	681b      	ldr	r3, [r3, #0]
 8005bec:	4422      	add	r2, r4
 8005bee:	609a      	str	r2, [r3, #8]
 8005bf0:	bf00      	nop
 8005bf2:	f507 7780 	add.w	r7, r7, #256	; 0x100
 8005bf6:	46bd      	mov	sp, r7
 8005bf8:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8005bfc:	51eb851f 	.word	0x51eb851f

08005c00 <USB_CoreInit>:
 8005c00:	b084      	sub	sp, #16
 8005c02:	b580      	push	{r7, lr}
 8005c04:	b084      	sub	sp, #16
 8005c06:	af00      	add	r7, sp, #0
 8005c08:	6078      	str	r0, [r7, #4]
 8005c0a:	f107 001c 	add.w	r0, r7, #28
 8005c0e:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8005c12:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005c14:	2b01      	cmp	r3, #1
 8005c16:	d122      	bne.n	8005c5e <USB_CoreInit+0x5e>
 8005c18:	687b      	ldr	r3, [r7, #4]
 8005c1a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005c1c:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 8005c20:	687b      	ldr	r3, [r7, #4]
 8005c22:	639a      	str	r2, [r3, #56]	; 0x38
 8005c24:	687b      	ldr	r3, [r7, #4]
 8005c26:	68db      	ldr	r3, [r3, #12]
 8005c28:	f423 0384 	bic.w	r3, r3, #4325376	; 0x420000
 8005c2c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8005c30:	687a      	ldr	r2, [r7, #4]
 8005c32:	60d3      	str	r3, [r2, #12]
 8005c34:	687b      	ldr	r3, [r7, #4]
 8005c36:	68db      	ldr	r3, [r3, #12]
 8005c38:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8005c3c:	687b      	ldr	r3, [r7, #4]
 8005c3e:	60da      	str	r2, [r3, #12]
 8005c40:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8005c42:	2b01      	cmp	r3, #1
 8005c44:	d105      	bne.n	8005c52 <USB_CoreInit+0x52>
 8005c46:	687b      	ldr	r3, [r7, #4]
 8005c48:	68db      	ldr	r3, [r3, #12]
 8005c4a:	f443 1280 	orr.w	r2, r3, #1048576	; 0x100000
 8005c4e:	687b      	ldr	r3, [r7, #4]
 8005c50:	60da      	str	r2, [r3, #12]
 8005c52:	6878      	ldr	r0, [r7, #4]
 8005c54:	f000 faa2 	bl	800619c <USB_CoreReset>
 8005c58:	4603      	mov	r3, r0
 8005c5a:	73fb      	strb	r3, [r7, #15]
 8005c5c:	e01a      	b.n	8005c94 <USB_CoreInit+0x94>
 8005c5e:	687b      	ldr	r3, [r7, #4]
 8005c60:	68db      	ldr	r3, [r3, #12]
 8005c62:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8005c66:	687b      	ldr	r3, [r7, #4]
 8005c68:	60da      	str	r2, [r3, #12]
 8005c6a:	6878      	ldr	r0, [r7, #4]
 8005c6c:	f000 fa96 	bl	800619c <USB_CoreReset>
 8005c70:	4603      	mov	r3, r0
 8005c72:	73fb      	strb	r3, [r7, #15]
 8005c74:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8005c76:	2b00      	cmp	r3, #0
 8005c78:	d106      	bne.n	8005c88 <USB_CoreInit+0x88>
 8005c7a:	687b      	ldr	r3, [r7, #4]
 8005c7c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005c7e:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 8005c82:	687b      	ldr	r3, [r7, #4]
 8005c84:	639a      	str	r2, [r3, #56]	; 0x38
 8005c86:	e005      	b.n	8005c94 <USB_CoreInit+0x94>
 8005c88:	687b      	ldr	r3, [r7, #4]
 8005c8a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005c8c:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 8005c90:	687b      	ldr	r3, [r7, #4]
 8005c92:	639a      	str	r2, [r3, #56]	; 0x38
 8005c94:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005c96:	2b01      	cmp	r3, #1
 8005c98:	d10b      	bne.n	8005cb2 <USB_CoreInit+0xb2>
 8005c9a:	687b      	ldr	r3, [r7, #4]
 8005c9c:	689b      	ldr	r3, [r3, #8]
 8005c9e:	f043 0206 	orr.w	r2, r3, #6
 8005ca2:	687b      	ldr	r3, [r7, #4]
 8005ca4:	609a      	str	r2, [r3, #8]
 8005ca6:	687b      	ldr	r3, [r7, #4]
 8005ca8:	689b      	ldr	r3, [r3, #8]
 8005caa:	f043 0220 	orr.w	r2, r3, #32
 8005cae:	687b      	ldr	r3, [r7, #4]
 8005cb0:	609a      	str	r2, [r3, #8]
 8005cb2:	7bfb      	ldrb	r3, [r7, #15]
 8005cb4:	4618      	mov	r0, r3
 8005cb6:	3710      	adds	r7, #16
 8005cb8:	46bd      	mov	sp, r7
 8005cba:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8005cbe:	b004      	add	sp, #16
 8005cc0:	4770      	bx	lr

08005cc2 <USB_DisableGlobalInt>:
 8005cc2:	b480      	push	{r7}
 8005cc4:	b083      	sub	sp, #12
 8005cc6:	af00      	add	r7, sp, #0
 8005cc8:	6078      	str	r0, [r7, #4]
 8005cca:	687b      	ldr	r3, [r7, #4]
 8005ccc:	689b      	ldr	r3, [r3, #8]
 8005cce:	f023 0201 	bic.w	r2, r3, #1
 8005cd2:	687b      	ldr	r3, [r7, #4]
 8005cd4:	609a      	str	r2, [r3, #8]
 8005cd6:	2300      	movs	r3, #0
 8005cd8:	4618      	mov	r0, r3
 8005cda:	370c      	adds	r7, #12
 8005cdc:	46bd      	mov	sp, r7
 8005cde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ce2:	4770      	bx	lr

08005ce4 <USB_SetCurrentMode>:
 8005ce4:	b580      	push	{r7, lr}
 8005ce6:	b084      	sub	sp, #16
 8005ce8:	af00      	add	r7, sp, #0
 8005cea:	6078      	str	r0, [r7, #4]
 8005cec:	460b      	mov	r3, r1
 8005cee:	70fb      	strb	r3, [r7, #3]
 8005cf0:	2300      	movs	r3, #0
 8005cf2:	60fb      	str	r3, [r7, #12]
 8005cf4:	687b      	ldr	r3, [r7, #4]
 8005cf6:	68db      	ldr	r3, [r3, #12]
 8005cf8:	f023 42c0 	bic.w	r2, r3, #1610612736	; 0x60000000
 8005cfc:	687b      	ldr	r3, [r7, #4]
 8005cfe:	60da      	str	r2, [r3, #12]
 8005d00:	78fb      	ldrb	r3, [r7, #3]
 8005d02:	2b01      	cmp	r3, #1
 8005d04:	d115      	bne.n	8005d32 <USB_SetCurrentMode+0x4e>
 8005d06:	687b      	ldr	r3, [r7, #4]
 8005d08:	68db      	ldr	r3, [r3, #12]
 8005d0a:	f043 5200 	orr.w	r2, r3, #536870912	; 0x20000000
 8005d0e:	687b      	ldr	r3, [r7, #4]
 8005d10:	60da      	str	r2, [r3, #12]
 8005d12:	2001      	movs	r0, #1
 8005d14:	f7fc f922 	bl	8001f5c <HAL_Delay>
 8005d18:	68fb      	ldr	r3, [r7, #12]
 8005d1a:	3301      	adds	r3, #1
 8005d1c:	60fb      	str	r3, [r7, #12]
 8005d1e:	6878      	ldr	r0, [r7, #4]
 8005d20:	f000 fa2e 	bl	8006180 <USB_GetMode>
 8005d24:	4603      	mov	r3, r0
 8005d26:	2b01      	cmp	r3, #1
 8005d28:	d01e      	beq.n	8005d68 <USB_SetCurrentMode+0x84>
 8005d2a:	68fb      	ldr	r3, [r7, #12]
 8005d2c:	2b31      	cmp	r3, #49	; 0x31
 8005d2e:	d9f0      	bls.n	8005d12 <USB_SetCurrentMode+0x2e>
 8005d30:	e01a      	b.n	8005d68 <USB_SetCurrentMode+0x84>
 8005d32:	78fb      	ldrb	r3, [r7, #3]
 8005d34:	2b00      	cmp	r3, #0
 8005d36:	d115      	bne.n	8005d64 <USB_SetCurrentMode+0x80>
 8005d38:	687b      	ldr	r3, [r7, #4]
 8005d3a:	68db      	ldr	r3, [r3, #12]
 8005d3c:	f043 4280 	orr.w	r2, r3, #1073741824	; 0x40000000
 8005d40:	687b      	ldr	r3, [r7, #4]
 8005d42:	60da      	str	r2, [r3, #12]
 8005d44:	2001      	movs	r0, #1
 8005d46:	f7fc f909 	bl	8001f5c <HAL_Delay>
 8005d4a:	68fb      	ldr	r3, [r7, #12]
 8005d4c:	3301      	adds	r3, #1
 8005d4e:	60fb      	str	r3, [r7, #12]
 8005d50:	6878      	ldr	r0, [r7, #4]
 8005d52:	f000 fa15 	bl	8006180 <USB_GetMode>
 8005d56:	4603      	mov	r3, r0
 8005d58:	2b00      	cmp	r3, #0
 8005d5a:	d005      	beq.n	8005d68 <USB_SetCurrentMode+0x84>
 8005d5c:	68fb      	ldr	r3, [r7, #12]
 8005d5e:	2b31      	cmp	r3, #49	; 0x31
 8005d60:	d9f0      	bls.n	8005d44 <USB_SetCurrentMode+0x60>
 8005d62:	e001      	b.n	8005d68 <USB_SetCurrentMode+0x84>
 8005d64:	2301      	movs	r3, #1
 8005d66:	e005      	b.n	8005d74 <USB_SetCurrentMode+0x90>
 8005d68:	68fb      	ldr	r3, [r7, #12]
 8005d6a:	2b32      	cmp	r3, #50	; 0x32
 8005d6c:	d101      	bne.n	8005d72 <USB_SetCurrentMode+0x8e>
 8005d6e:	2301      	movs	r3, #1
 8005d70:	e000      	b.n	8005d74 <USB_SetCurrentMode+0x90>
 8005d72:	2300      	movs	r3, #0
 8005d74:	4618      	mov	r0, r3
 8005d76:	3710      	adds	r7, #16
 8005d78:	46bd      	mov	sp, r7
 8005d7a:	bd80      	pop	{r7, pc}

08005d7c <USB_DevInit>:
 8005d7c:	b084      	sub	sp, #16
 8005d7e:	b580      	push	{r7, lr}
 8005d80:	b086      	sub	sp, #24
 8005d82:	af00      	add	r7, sp, #0
 8005d84:	6078      	str	r0, [r7, #4]
 8005d86:	f107 0024 	add.w	r0, r7, #36	; 0x24
 8005d8a:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8005d8e:	2300      	movs	r3, #0
 8005d90:	75fb      	strb	r3, [r7, #23]
 8005d92:	687b      	ldr	r3, [r7, #4]
 8005d94:	60fb      	str	r3, [r7, #12]
 8005d96:	2300      	movs	r3, #0
 8005d98:	613b      	str	r3, [r7, #16]
 8005d9a:	e009      	b.n	8005db0 <USB_DevInit+0x34>
 8005d9c:	687a      	ldr	r2, [r7, #4]
 8005d9e:	693b      	ldr	r3, [r7, #16]
 8005da0:	3340      	adds	r3, #64	; 0x40
 8005da2:	009b      	lsls	r3, r3, #2
 8005da4:	4413      	add	r3, r2
 8005da6:	2200      	movs	r2, #0
 8005da8:	605a      	str	r2, [r3, #4]
 8005daa:	693b      	ldr	r3, [r7, #16]
 8005dac:	3301      	adds	r3, #1
 8005dae:	613b      	str	r3, [r7, #16]
 8005db0:	693b      	ldr	r3, [r7, #16]
 8005db2:	2b0e      	cmp	r3, #14
 8005db4:	d9f2      	bls.n	8005d9c <USB_DevInit+0x20>
 8005db6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8005db8:	2b00      	cmp	r3, #0
 8005dba:	d11c      	bne.n	8005df6 <USB_DevInit+0x7a>
 8005dbc:	68fb      	ldr	r3, [r7, #12]
 8005dbe:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8005dc2:	685b      	ldr	r3, [r3, #4]
 8005dc4:	68fa      	ldr	r2, [r7, #12]
 8005dc6:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8005dca:	f043 0302 	orr.w	r3, r3, #2
 8005dce:	6053      	str	r3, [r2, #4]
 8005dd0:	687b      	ldr	r3, [r7, #4]
 8005dd2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005dd4:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 8005dd8:	687b      	ldr	r3, [r7, #4]
 8005dda:	639a      	str	r2, [r3, #56]	; 0x38
 8005ddc:	687b      	ldr	r3, [r7, #4]
 8005dde:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005de0:	f423 2200 	bic.w	r2, r3, #524288	; 0x80000
 8005de4:	687b      	ldr	r3, [r7, #4]
 8005de6:	639a      	str	r2, [r3, #56]	; 0x38
 8005de8:	687b      	ldr	r3, [r7, #4]
 8005dea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005dec:	f423 2280 	bic.w	r2, r3, #262144	; 0x40000
 8005df0:	687b      	ldr	r3, [r7, #4]
 8005df2:	639a      	str	r2, [r3, #56]	; 0x38
 8005df4:	e00b      	b.n	8005e0e <USB_DevInit+0x92>
 8005df6:	687b      	ldr	r3, [r7, #4]
 8005df8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005dfa:	f423 1200 	bic.w	r2, r3, #2097152	; 0x200000
 8005dfe:	687b      	ldr	r3, [r7, #4]
 8005e00:	639a      	str	r2, [r3, #56]	; 0x38
 8005e02:	687b      	ldr	r3, [r7, #4]
 8005e04:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005e06:	f443 2200 	orr.w	r2, r3, #524288	; 0x80000
 8005e0a:	687b      	ldr	r3, [r7, #4]
 8005e0c:	639a      	str	r2, [r3, #56]	; 0x38
 8005e0e:	68fb      	ldr	r3, [r7, #12]
 8005e10:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 8005e14:	461a      	mov	r2, r3
 8005e16:	2300      	movs	r3, #0
 8005e18:	6013      	str	r3, [r2, #0]
 8005e1a:	68fb      	ldr	r3, [r7, #12]
 8005e1c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8005e20:	4619      	mov	r1, r3
 8005e22:	68fb      	ldr	r3, [r7, #12]
 8005e24:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8005e28:	461a      	mov	r2, r3
 8005e2a:	680b      	ldr	r3, [r1, #0]
 8005e2c:	6013      	str	r3, [r2, #0]
 8005e2e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005e30:	2b01      	cmp	r3, #1
 8005e32:	d10c      	bne.n	8005e4e <USB_DevInit+0xd2>
 8005e34:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005e36:	2b00      	cmp	r3, #0
 8005e38:	d104      	bne.n	8005e44 <USB_DevInit+0xc8>
 8005e3a:	2100      	movs	r1, #0
 8005e3c:	6878      	ldr	r0, [r7, #4]
 8005e3e:	f000 f965 	bl	800610c <USB_SetDevSpeed>
 8005e42:	e008      	b.n	8005e56 <USB_DevInit+0xda>
 8005e44:	2101      	movs	r1, #1
 8005e46:	6878      	ldr	r0, [r7, #4]
 8005e48:	f000 f960 	bl	800610c <USB_SetDevSpeed>
 8005e4c:	e003      	b.n	8005e56 <USB_DevInit+0xda>
 8005e4e:	2103      	movs	r1, #3
 8005e50:	6878      	ldr	r0, [r7, #4]
 8005e52:	f000 f95b 	bl	800610c <USB_SetDevSpeed>
 8005e56:	2110      	movs	r1, #16
 8005e58:	6878      	ldr	r0, [r7, #4]
 8005e5a:	f000 f8f3 	bl	8006044 <USB_FlushTxFifo>
 8005e5e:	4603      	mov	r3, r0
 8005e60:	2b00      	cmp	r3, #0
 8005e62:	d001      	beq.n	8005e68 <USB_DevInit+0xec>
 8005e64:	2301      	movs	r3, #1
 8005e66:	75fb      	strb	r3, [r7, #23]
 8005e68:	6878      	ldr	r0, [r7, #4]
 8005e6a:	f000 f91f 	bl	80060ac <USB_FlushRxFifo>
 8005e6e:	4603      	mov	r3, r0
 8005e70:	2b00      	cmp	r3, #0
 8005e72:	d001      	beq.n	8005e78 <USB_DevInit+0xfc>
 8005e74:	2301      	movs	r3, #1
 8005e76:	75fb      	strb	r3, [r7, #23]
 8005e78:	68fb      	ldr	r3, [r7, #12]
 8005e7a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8005e7e:	461a      	mov	r2, r3
 8005e80:	2300      	movs	r3, #0
 8005e82:	6113      	str	r3, [r2, #16]
 8005e84:	68fb      	ldr	r3, [r7, #12]
 8005e86:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8005e8a:	461a      	mov	r2, r3
 8005e8c:	2300      	movs	r3, #0
 8005e8e:	6153      	str	r3, [r2, #20]
 8005e90:	68fb      	ldr	r3, [r7, #12]
 8005e92:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8005e96:	461a      	mov	r2, r3
 8005e98:	2300      	movs	r3, #0
 8005e9a:	61d3      	str	r3, [r2, #28]
 8005e9c:	2300      	movs	r3, #0
 8005e9e:	613b      	str	r3, [r7, #16]
 8005ea0:	e043      	b.n	8005f2a <USB_DevInit+0x1ae>
 8005ea2:	693b      	ldr	r3, [r7, #16]
 8005ea4:	015a      	lsls	r2, r3, #5
 8005ea6:	68fb      	ldr	r3, [r7, #12]
 8005ea8:	4413      	add	r3, r2
 8005eaa:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005eae:	681b      	ldr	r3, [r3, #0]
 8005eb0:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8005eb4:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8005eb8:	d118      	bne.n	8005eec <USB_DevInit+0x170>
 8005eba:	693b      	ldr	r3, [r7, #16]
 8005ebc:	2b00      	cmp	r3, #0
 8005ebe:	d10a      	bne.n	8005ed6 <USB_DevInit+0x15a>
 8005ec0:	693b      	ldr	r3, [r7, #16]
 8005ec2:	015a      	lsls	r2, r3, #5
 8005ec4:	68fb      	ldr	r3, [r7, #12]
 8005ec6:	4413      	add	r3, r2
 8005ec8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005ecc:	461a      	mov	r2, r3
 8005ece:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8005ed2:	6013      	str	r3, [r2, #0]
 8005ed4:	e013      	b.n	8005efe <USB_DevInit+0x182>
 8005ed6:	693b      	ldr	r3, [r7, #16]
 8005ed8:	015a      	lsls	r2, r3, #5
 8005eda:	68fb      	ldr	r3, [r7, #12]
 8005edc:	4413      	add	r3, r2
 8005ede:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005ee2:	461a      	mov	r2, r3
 8005ee4:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8005ee8:	6013      	str	r3, [r2, #0]
 8005eea:	e008      	b.n	8005efe <USB_DevInit+0x182>
 8005eec:	693b      	ldr	r3, [r7, #16]
 8005eee:	015a      	lsls	r2, r3, #5
 8005ef0:	68fb      	ldr	r3, [r7, #12]
 8005ef2:	4413      	add	r3, r2
 8005ef4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005ef8:	461a      	mov	r2, r3
 8005efa:	2300      	movs	r3, #0
 8005efc:	6013      	str	r3, [r2, #0]
 8005efe:	693b      	ldr	r3, [r7, #16]
 8005f00:	015a      	lsls	r2, r3, #5
 8005f02:	68fb      	ldr	r3, [r7, #12]
 8005f04:	4413      	add	r3, r2
 8005f06:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005f0a:	461a      	mov	r2, r3
 8005f0c:	2300      	movs	r3, #0
 8005f0e:	6113      	str	r3, [r2, #16]
 8005f10:	693b      	ldr	r3, [r7, #16]
 8005f12:	015a      	lsls	r2, r3, #5
 8005f14:	68fb      	ldr	r3, [r7, #12]
 8005f16:	4413      	add	r3, r2
 8005f18:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005f1c:	461a      	mov	r2, r3
 8005f1e:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 8005f22:	6093      	str	r3, [r2, #8]
 8005f24:	693b      	ldr	r3, [r7, #16]
 8005f26:	3301      	adds	r3, #1
 8005f28:	613b      	str	r3, [r7, #16]
 8005f2a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005f2c:	693a      	ldr	r2, [r7, #16]
 8005f2e:	429a      	cmp	r2, r3
 8005f30:	d3b7      	bcc.n	8005ea2 <USB_DevInit+0x126>
 8005f32:	2300      	movs	r3, #0
 8005f34:	613b      	str	r3, [r7, #16]
 8005f36:	e043      	b.n	8005fc0 <USB_DevInit+0x244>
 8005f38:	693b      	ldr	r3, [r7, #16]
 8005f3a:	015a      	lsls	r2, r3, #5
 8005f3c:	68fb      	ldr	r3, [r7, #12]
 8005f3e:	4413      	add	r3, r2
 8005f40:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005f44:	681b      	ldr	r3, [r3, #0]
 8005f46:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8005f4a:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8005f4e:	d118      	bne.n	8005f82 <USB_DevInit+0x206>
 8005f50:	693b      	ldr	r3, [r7, #16]
 8005f52:	2b00      	cmp	r3, #0
 8005f54:	d10a      	bne.n	8005f6c <USB_DevInit+0x1f0>
 8005f56:	693b      	ldr	r3, [r7, #16]
 8005f58:	015a      	lsls	r2, r3, #5
 8005f5a:	68fb      	ldr	r3, [r7, #12]
 8005f5c:	4413      	add	r3, r2
 8005f5e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005f62:	461a      	mov	r2, r3
 8005f64:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8005f68:	6013      	str	r3, [r2, #0]
 8005f6a:	e013      	b.n	8005f94 <USB_DevInit+0x218>
 8005f6c:	693b      	ldr	r3, [r7, #16]
 8005f6e:	015a      	lsls	r2, r3, #5
 8005f70:	68fb      	ldr	r3, [r7, #12]
 8005f72:	4413      	add	r3, r2
 8005f74:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005f78:	461a      	mov	r2, r3
 8005f7a:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8005f7e:	6013      	str	r3, [r2, #0]
 8005f80:	e008      	b.n	8005f94 <USB_DevInit+0x218>
 8005f82:	693b      	ldr	r3, [r7, #16]
 8005f84:	015a      	lsls	r2, r3, #5
 8005f86:	68fb      	ldr	r3, [r7, #12]
 8005f88:	4413      	add	r3, r2
 8005f8a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005f8e:	461a      	mov	r2, r3
 8005f90:	2300      	movs	r3, #0
 8005f92:	6013      	str	r3, [r2, #0]
 8005f94:	693b      	ldr	r3, [r7, #16]
 8005f96:	015a      	lsls	r2, r3, #5
 8005f98:	68fb      	ldr	r3, [r7, #12]
 8005f9a:	4413      	add	r3, r2
 8005f9c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005fa0:	461a      	mov	r2, r3
 8005fa2:	2300      	movs	r3, #0
 8005fa4:	6113      	str	r3, [r2, #16]
 8005fa6:	693b      	ldr	r3, [r7, #16]
 8005fa8:	015a      	lsls	r2, r3, #5
 8005faa:	68fb      	ldr	r3, [r7, #12]
 8005fac:	4413      	add	r3, r2
 8005fae:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005fb2:	461a      	mov	r2, r3
 8005fb4:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 8005fb8:	6093      	str	r3, [r2, #8]
 8005fba:	693b      	ldr	r3, [r7, #16]
 8005fbc:	3301      	adds	r3, #1
 8005fbe:	613b      	str	r3, [r7, #16]
 8005fc0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005fc2:	693a      	ldr	r2, [r7, #16]
 8005fc4:	429a      	cmp	r2, r3
 8005fc6:	d3b7      	bcc.n	8005f38 <USB_DevInit+0x1bc>
 8005fc8:	68fb      	ldr	r3, [r7, #12]
 8005fca:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8005fce:	691b      	ldr	r3, [r3, #16]
 8005fd0:	68fa      	ldr	r2, [r7, #12]
 8005fd2:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8005fd6:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8005fda:	6113      	str	r3, [r2, #16]
 8005fdc:	687b      	ldr	r3, [r7, #4]
 8005fde:	2200      	movs	r2, #0
 8005fe0:	619a      	str	r2, [r3, #24]
 8005fe2:	687b      	ldr	r3, [r7, #4]
 8005fe4:	f06f 4280 	mvn.w	r2, #1073741824	; 0x40000000
 8005fe8:	615a      	str	r2, [r3, #20]
 8005fea:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005fec:	2b00      	cmp	r3, #0
 8005fee:	d105      	bne.n	8005ffc <USB_DevInit+0x280>
 8005ff0:	687b      	ldr	r3, [r7, #4]
 8005ff2:	699b      	ldr	r3, [r3, #24]
 8005ff4:	f043 0210 	orr.w	r2, r3, #16
 8005ff8:	687b      	ldr	r3, [r7, #4]
 8005ffa:	619a      	str	r2, [r3, #24]
 8005ffc:	687b      	ldr	r3, [r7, #4]
 8005ffe:	699a      	ldr	r2, [r3, #24]
 8006000:	4b0f      	ldr	r3, [pc, #60]	; (8006040 <USB_DevInit+0x2c4>)
 8006002:	4313      	orrs	r3, r2
 8006004:	687a      	ldr	r2, [r7, #4]
 8006006:	6193      	str	r3, [r2, #24]
 8006008:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800600a:	2b00      	cmp	r3, #0
 800600c:	d005      	beq.n	800601a <USB_DevInit+0x29e>
 800600e:	687b      	ldr	r3, [r7, #4]
 8006010:	699b      	ldr	r3, [r3, #24]
 8006012:	f043 0208 	orr.w	r2, r3, #8
 8006016:	687b      	ldr	r3, [r7, #4]
 8006018:	619a      	str	r2, [r3, #24]
 800601a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800601c:	2b01      	cmp	r3, #1
 800601e:	d107      	bne.n	8006030 <USB_DevInit+0x2b4>
 8006020:	687b      	ldr	r3, [r7, #4]
 8006022:	699b      	ldr	r3, [r3, #24]
 8006024:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8006028:	f043 0304 	orr.w	r3, r3, #4
 800602c:	687a      	ldr	r2, [r7, #4]
 800602e:	6193      	str	r3, [r2, #24]
 8006030:	7dfb      	ldrb	r3, [r7, #23]
 8006032:	4618      	mov	r0, r3
 8006034:	3718      	adds	r7, #24
 8006036:	46bd      	mov	sp, r7
 8006038:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800603c:	b004      	add	sp, #16
 800603e:	4770      	bx	lr
 8006040:	803c3800 	.word	0x803c3800

08006044 <USB_FlushTxFifo>:
 8006044:	b480      	push	{r7}
 8006046:	b085      	sub	sp, #20
 8006048:	af00      	add	r7, sp, #0
 800604a:	6078      	str	r0, [r7, #4]
 800604c:	6039      	str	r1, [r7, #0]
 800604e:	2300      	movs	r3, #0
 8006050:	60fb      	str	r3, [r7, #12]
 8006052:	68fb      	ldr	r3, [r7, #12]
 8006054:	3301      	adds	r3, #1
 8006056:	60fb      	str	r3, [r7, #12]
 8006058:	68fb      	ldr	r3, [r7, #12]
 800605a:	4a13      	ldr	r2, [pc, #76]	; (80060a8 <USB_FlushTxFifo+0x64>)
 800605c:	4293      	cmp	r3, r2
 800605e:	d901      	bls.n	8006064 <USB_FlushTxFifo+0x20>
 8006060:	2303      	movs	r3, #3
 8006062:	e01b      	b.n	800609c <USB_FlushTxFifo+0x58>
 8006064:	687b      	ldr	r3, [r7, #4]
 8006066:	691b      	ldr	r3, [r3, #16]
 8006068:	2b00      	cmp	r3, #0
 800606a:	daf2      	bge.n	8006052 <USB_FlushTxFifo+0xe>
 800606c:	2300      	movs	r3, #0
 800606e:	60fb      	str	r3, [r7, #12]
 8006070:	683b      	ldr	r3, [r7, #0]
 8006072:	019b      	lsls	r3, r3, #6
 8006074:	f043 0220 	orr.w	r2, r3, #32
 8006078:	687b      	ldr	r3, [r7, #4]
 800607a:	611a      	str	r2, [r3, #16]
 800607c:	68fb      	ldr	r3, [r7, #12]
 800607e:	3301      	adds	r3, #1
 8006080:	60fb      	str	r3, [r7, #12]
 8006082:	68fb      	ldr	r3, [r7, #12]
 8006084:	4a08      	ldr	r2, [pc, #32]	; (80060a8 <USB_FlushTxFifo+0x64>)
 8006086:	4293      	cmp	r3, r2
 8006088:	d901      	bls.n	800608e <USB_FlushTxFifo+0x4a>
 800608a:	2303      	movs	r3, #3
 800608c:	e006      	b.n	800609c <USB_FlushTxFifo+0x58>
 800608e:	687b      	ldr	r3, [r7, #4]
 8006090:	691b      	ldr	r3, [r3, #16]
 8006092:	f003 0320 	and.w	r3, r3, #32
 8006096:	2b20      	cmp	r3, #32
 8006098:	d0f0      	beq.n	800607c <USB_FlushTxFifo+0x38>
 800609a:	2300      	movs	r3, #0
 800609c:	4618      	mov	r0, r3
 800609e:	3714      	adds	r7, #20
 80060a0:	46bd      	mov	sp, r7
 80060a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80060a6:	4770      	bx	lr
 80060a8:	00030d40 	.word	0x00030d40

080060ac <USB_FlushRxFifo>:
 80060ac:	b480      	push	{r7}
 80060ae:	b085      	sub	sp, #20
 80060b0:	af00      	add	r7, sp, #0
 80060b2:	6078      	str	r0, [r7, #4]
 80060b4:	2300      	movs	r3, #0
 80060b6:	60fb      	str	r3, [r7, #12]
 80060b8:	68fb      	ldr	r3, [r7, #12]
 80060ba:	3301      	adds	r3, #1
 80060bc:	60fb      	str	r3, [r7, #12]
 80060be:	68fb      	ldr	r3, [r7, #12]
 80060c0:	4a11      	ldr	r2, [pc, #68]	; (8006108 <USB_FlushRxFifo+0x5c>)
 80060c2:	4293      	cmp	r3, r2
 80060c4:	d901      	bls.n	80060ca <USB_FlushRxFifo+0x1e>
 80060c6:	2303      	movs	r3, #3
 80060c8:	e018      	b.n	80060fc <USB_FlushRxFifo+0x50>
 80060ca:	687b      	ldr	r3, [r7, #4]
 80060cc:	691b      	ldr	r3, [r3, #16]
 80060ce:	2b00      	cmp	r3, #0
 80060d0:	daf2      	bge.n	80060b8 <USB_FlushRxFifo+0xc>
 80060d2:	2300      	movs	r3, #0
 80060d4:	60fb      	str	r3, [r7, #12]
 80060d6:	687b      	ldr	r3, [r7, #4]
 80060d8:	2210      	movs	r2, #16
 80060da:	611a      	str	r2, [r3, #16]
 80060dc:	68fb      	ldr	r3, [r7, #12]
 80060de:	3301      	adds	r3, #1
 80060e0:	60fb      	str	r3, [r7, #12]
 80060e2:	68fb      	ldr	r3, [r7, #12]
 80060e4:	4a08      	ldr	r2, [pc, #32]	; (8006108 <USB_FlushRxFifo+0x5c>)
 80060e6:	4293      	cmp	r3, r2
 80060e8:	d901      	bls.n	80060ee <USB_FlushRxFifo+0x42>
 80060ea:	2303      	movs	r3, #3
 80060ec:	e006      	b.n	80060fc <USB_FlushRxFifo+0x50>
 80060ee:	687b      	ldr	r3, [r7, #4]
 80060f0:	691b      	ldr	r3, [r3, #16]
 80060f2:	f003 0310 	and.w	r3, r3, #16
 80060f6:	2b10      	cmp	r3, #16
 80060f8:	d0f0      	beq.n	80060dc <USB_FlushRxFifo+0x30>
 80060fa:	2300      	movs	r3, #0
 80060fc:	4618      	mov	r0, r3
 80060fe:	3714      	adds	r7, #20
 8006100:	46bd      	mov	sp, r7
 8006102:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006106:	4770      	bx	lr
 8006108:	00030d40 	.word	0x00030d40

0800610c <USB_SetDevSpeed>:
 800610c:	b480      	push	{r7}
 800610e:	b085      	sub	sp, #20
 8006110:	af00      	add	r7, sp, #0
 8006112:	6078      	str	r0, [r7, #4]
 8006114:	460b      	mov	r3, r1
 8006116:	70fb      	strb	r3, [r7, #3]
 8006118:	687b      	ldr	r3, [r7, #4]
 800611a:	60fb      	str	r3, [r7, #12]
 800611c:	68fb      	ldr	r3, [r7, #12]
 800611e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8006122:	681a      	ldr	r2, [r3, #0]
 8006124:	78fb      	ldrb	r3, [r7, #3]
 8006126:	68f9      	ldr	r1, [r7, #12]
 8006128:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 800612c:	4313      	orrs	r3, r2
 800612e:	600b      	str	r3, [r1, #0]
 8006130:	2300      	movs	r3, #0
 8006132:	4618      	mov	r0, r3
 8006134:	3714      	adds	r7, #20
 8006136:	46bd      	mov	sp, r7
 8006138:	f85d 7b04 	ldr.w	r7, [sp], #4
 800613c:	4770      	bx	lr

0800613e <USB_DevDisconnect>:
 800613e:	b480      	push	{r7}
 8006140:	b085      	sub	sp, #20
 8006142:	af00      	add	r7, sp, #0
 8006144:	6078      	str	r0, [r7, #4]
 8006146:	687b      	ldr	r3, [r7, #4]
 8006148:	60fb      	str	r3, [r7, #12]
 800614a:	68fb      	ldr	r3, [r7, #12]
 800614c:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 8006150:	681b      	ldr	r3, [r3, #0]
 8006152:	68fa      	ldr	r2, [r7, #12]
 8006154:	f502 6260 	add.w	r2, r2, #3584	; 0xe00
 8006158:	f023 0303 	bic.w	r3, r3, #3
 800615c:	6013      	str	r3, [r2, #0]
 800615e:	68fb      	ldr	r3, [r7, #12]
 8006160:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8006164:	685b      	ldr	r3, [r3, #4]
 8006166:	68fa      	ldr	r2, [r7, #12]
 8006168:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 800616c:	f043 0302 	orr.w	r3, r3, #2
 8006170:	6053      	str	r3, [r2, #4]
 8006172:	2300      	movs	r3, #0
 8006174:	4618      	mov	r0, r3
 8006176:	3714      	adds	r7, #20
 8006178:	46bd      	mov	sp, r7
 800617a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800617e:	4770      	bx	lr

08006180 <USB_GetMode>:
 8006180:	b480      	push	{r7}
 8006182:	b083      	sub	sp, #12
 8006184:	af00      	add	r7, sp, #0
 8006186:	6078      	str	r0, [r7, #4]
 8006188:	687b      	ldr	r3, [r7, #4]
 800618a:	695b      	ldr	r3, [r3, #20]
 800618c:	f003 0301 	and.w	r3, r3, #1
 8006190:	4618      	mov	r0, r3
 8006192:	370c      	adds	r7, #12
 8006194:	46bd      	mov	sp, r7
 8006196:	f85d 7b04 	ldr.w	r7, [sp], #4
 800619a:	4770      	bx	lr

0800619c <USB_CoreReset>:
 800619c:	b480      	push	{r7}
 800619e:	b085      	sub	sp, #20
 80061a0:	af00      	add	r7, sp, #0
 80061a2:	6078      	str	r0, [r7, #4]
 80061a4:	2300      	movs	r3, #0
 80061a6:	60fb      	str	r3, [r7, #12]
 80061a8:	68fb      	ldr	r3, [r7, #12]
 80061aa:	3301      	adds	r3, #1
 80061ac:	60fb      	str	r3, [r7, #12]
 80061ae:	68fb      	ldr	r3, [r7, #12]
 80061b0:	4a13      	ldr	r2, [pc, #76]	; (8006200 <USB_CoreReset+0x64>)
 80061b2:	4293      	cmp	r3, r2
 80061b4:	d901      	bls.n	80061ba <USB_CoreReset+0x1e>
 80061b6:	2303      	movs	r3, #3
 80061b8:	e01b      	b.n	80061f2 <USB_CoreReset+0x56>
 80061ba:	687b      	ldr	r3, [r7, #4]
 80061bc:	691b      	ldr	r3, [r3, #16]
 80061be:	2b00      	cmp	r3, #0
 80061c0:	daf2      	bge.n	80061a8 <USB_CoreReset+0xc>
 80061c2:	2300      	movs	r3, #0
 80061c4:	60fb      	str	r3, [r7, #12]
 80061c6:	687b      	ldr	r3, [r7, #4]
 80061c8:	691b      	ldr	r3, [r3, #16]
 80061ca:	f043 0201 	orr.w	r2, r3, #1
 80061ce:	687b      	ldr	r3, [r7, #4]
 80061d0:	611a      	str	r2, [r3, #16]
 80061d2:	68fb      	ldr	r3, [r7, #12]
 80061d4:	3301      	adds	r3, #1
 80061d6:	60fb      	str	r3, [r7, #12]
 80061d8:	68fb      	ldr	r3, [r7, #12]
 80061da:	4a09      	ldr	r2, [pc, #36]	; (8006200 <USB_CoreReset+0x64>)
 80061dc:	4293      	cmp	r3, r2
 80061de:	d901      	bls.n	80061e4 <USB_CoreReset+0x48>
 80061e0:	2303      	movs	r3, #3
 80061e2:	e006      	b.n	80061f2 <USB_CoreReset+0x56>
 80061e4:	687b      	ldr	r3, [r7, #4]
 80061e6:	691b      	ldr	r3, [r3, #16]
 80061e8:	f003 0301 	and.w	r3, r3, #1
 80061ec:	2b01      	cmp	r3, #1
 80061ee:	d0f0      	beq.n	80061d2 <USB_CoreReset+0x36>
 80061f0:	2300      	movs	r3, #0
 80061f2:	4618      	mov	r0, r3
 80061f4:	3714      	adds	r7, #20
 80061f6:	46bd      	mov	sp, r7
 80061f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80061fc:	4770      	bx	lr
 80061fe:	bf00      	nop
 8006200:	00030d40 	.word	0x00030d40

08006204 <__NVIC_SetPriority>:
 8006204:	b480      	push	{r7}
 8006206:	b083      	sub	sp, #12
 8006208:	af00      	add	r7, sp, #0
 800620a:	4603      	mov	r3, r0
 800620c:	6039      	str	r1, [r7, #0]
 800620e:	71fb      	strb	r3, [r7, #7]
 8006210:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006214:	2b00      	cmp	r3, #0
 8006216:	db0a      	blt.n	800622e <__NVIC_SetPriority+0x2a>
 8006218:	683b      	ldr	r3, [r7, #0]
 800621a:	b2da      	uxtb	r2, r3
 800621c:	490c      	ldr	r1, [pc, #48]	; (8006250 <__NVIC_SetPriority+0x4c>)
 800621e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006222:	0112      	lsls	r2, r2, #4
 8006224:	b2d2      	uxtb	r2, r2
 8006226:	440b      	add	r3, r1
 8006228:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 800622c:	e00a      	b.n	8006244 <__NVIC_SetPriority+0x40>
 800622e:	683b      	ldr	r3, [r7, #0]
 8006230:	b2da      	uxtb	r2, r3
 8006232:	4908      	ldr	r1, [pc, #32]	; (8006254 <__NVIC_SetPriority+0x50>)
 8006234:	79fb      	ldrb	r3, [r7, #7]
 8006236:	f003 030f 	and.w	r3, r3, #15
 800623a:	3b04      	subs	r3, #4
 800623c:	0112      	lsls	r2, r2, #4
 800623e:	b2d2      	uxtb	r2, r2
 8006240:	440b      	add	r3, r1
 8006242:	761a      	strb	r2, [r3, #24]
 8006244:	bf00      	nop
 8006246:	370c      	adds	r7, #12
 8006248:	46bd      	mov	sp, r7
 800624a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800624e:	4770      	bx	lr
 8006250:	e000e100 	.word	0xe000e100
 8006254:	e000ed00 	.word	0xe000ed00

08006258 <SVC_Setup>:
 8006258:	b580      	push	{r7, lr}
 800625a:	af00      	add	r7, sp, #0
 800625c:	2100      	movs	r1, #0
 800625e:	f06f 0004 	mvn.w	r0, #4
 8006262:	f7ff ffcf 	bl	8006204 <__NVIC_SetPriority>
 8006266:	bf00      	nop
 8006268:	bd80      	pop	{r7, pc}
	...

0800626c <osKernelInitialize>:
 800626c:	b480      	push	{r7}
 800626e:	b083      	sub	sp, #12
 8006270:	af00      	add	r7, sp, #0
 8006272:	f3ef 8305 	mrs	r3, IPSR
 8006276:	603b      	str	r3, [r7, #0]
 8006278:	683b      	ldr	r3, [r7, #0]
 800627a:	2b00      	cmp	r3, #0
 800627c:	d003      	beq.n	8006286 <osKernelInitialize+0x1a>
 800627e:	f06f 0305 	mvn.w	r3, #5
 8006282:	607b      	str	r3, [r7, #4]
 8006284:	e00c      	b.n	80062a0 <osKernelInitialize+0x34>
 8006286:	4b0a      	ldr	r3, [pc, #40]	; (80062b0 <osKernelInitialize+0x44>)
 8006288:	681b      	ldr	r3, [r3, #0]
 800628a:	2b00      	cmp	r3, #0
 800628c:	d105      	bne.n	800629a <osKernelInitialize+0x2e>
 800628e:	4b08      	ldr	r3, [pc, #32]	; (80062b0 <osKernelInitialize+0x44>)
 8006290:	2201      	movs	r2, #1
 8006292:	601a      	str	r2, [r3, #0]
 8006294:	2300      	movs	r3, #0
 8006296:	607b      	str	r3, [r7, #4]
 8006298:	e002      	b.n	80062a0 <osKernelInitialize+0x34>
 800629a:	f04f 33ff 	mov.w	r3, #4294967295
 800629e:	607b      	str	r3, [r7, #4]
 80062a0:	687b      	ldr	r3, [r7, #4]
 80062a2:	4618      	mov	r0, r3
 80062a4:	370c      	adds	r7, #12
 80062a6:	46bd      	mov	sp, r7
 80062a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062ac:	4770      	bx	lr
 80062ae:	bf00      	nop
 80062b0:	20000c70 	.word	0x20000c70

080062b4 <osKernelStart>:
 80062b4:	b580      	push	{r7, lr}
 80062b6:	b082      	sub	sp, #8
 80062b8:	af00      	add	r7, sp, #0
 80062ba:	f3ef 8305 	mrs	r3, IPSR
 80062be:	603b      	str	r3, [r7, #0]
 80062c0:	683b      	ldr	r3, [r7, #0]
 80062c2:	2b00      	cmp	r3, #0
 80062c4:	d003      	beq.n	80062ce <osKernelStart+0x1a>
 80062c6:	f06f 0305 	mvn.w	r3, #5
 80062ca:	607b      	str	r3, [r7, #4]
 80062cc:	e010      	b.n	80062f0 <osKernelStart+0x3c>
 80062ce:	4b0b      	ldr	r3, [pc, #44]	; (80062fc <osKernelStart+0x48>)
 80062d0:	681b      	ldr	r3, [r3, #0]
 80062d2:	2b01      	cmp	r3, #1
 80062d4:	d109      	bne.n	80062ea <osKernelStart+0x36>
 80062d6:	f7ff ffbf 	bl	8006258 <SVC_Setup>
 80062da:	4b08      	ldr	r3, [pc, #32]	; (80062fc <osKernelStart+0x48>)
 80062dc:	2202      	movs	r2, #2
 80062de:	601a      	str	r2, [r3, #0]
 80062e0:	f001 fb28 	bl	8007934 <vTaskStartScheduler>
 80062e4:	2300      	movs	r3, #0
 80062e6:	607b      	str	r3, [r7, #4]
 80062e8:	e002      	b.n	80062f0 <osKernelStart+0x3c>
 80062ea:	f04f 33ff 	mov.w	r3, #4294967295
 80062ee:	607b      	str	r3, [r7, #4]
 80062f0:	687b      	ldr	r3, [r7, #4]
 80062f2:	4618      	mov	r0, r3
 80062f4:	3708      	adds	r7, #8
 80062f6:	46bd      	mov	sp, r7
 80062f8:	bd80      	pop	{r7, pc}
 80062fa:	bf00      	nop
 80062fc:	20000c70 	.word	0x20000c70

08006300 <osThreadNew>:
 8006300:	b580      	push	{r7, lr}
 8006302:	b08e      	sub	sp, #56	; 0x38
 8006304:	af04      	add	r7, sp, #16
 8006306:	60f8      	str	r0, [r7, #12]
 8006308:	60b9      	str	r1, [r7, #8]
 800630a:	607a      	str	r2, [r7, #4]
 800630c:	2300      	movs	r3, #0
 800630e:	613b      	str	r3, [r7, #16]
 8006310:	f3ef 8305 	mrs	r3, IPSR
 8006314:	617b      	str	r3, [r7, #20]
 8006316:	697b      	ldr	r3, [r7, #20]
 8006318:	2b00      	cmp	r3, #0
 800631a:	d17f      	bne.n	800641c <osThreadNew+0x11c>
 800631c:	68fb      	ldr	r3, [r7, #12]
 800631e:	2b00      	cmp	r3, #0
 8006320:	d07c      	beq.n	800641c <osThreadNew+0x11c>
 8006322:	f44f 7380 	mov.w	r3, #256	; 0x100
 8006326:	623b      	str	r3, [r7, #32]
 8006328:	2318      	movs	r3, #24
 800632a:	61fb      	str	r3, [r7, #28]
 800632c:	2300      	movs	r3, #0
 800632e:	627b      	str	r3, [r7, #36]	; 0x24
 8006330:	f04f 33ff 	mov.w	r3, #4294967295
 8006334:	61bb      	str	r3, [r7, #24]
 8006336:	687b      	ldr	r3, [r7, #4]
 8006338:	2b00      	cmp	r3, #0
 800633a:	d045      	beq.n	80063c8 <osThreadNew+0xc8>
 800633c:	687b      	ldr	r3, [r7, #4]
 800633e:	681b      	ldr	r3, [r3, #0]
 8006340:	2b00      	cmp	r3, #0
 8006342:	d002      	beq.n	800634a <osThreadNew+0x4a>
 8006344:	687b      	ldr	r3, [r7, #4]
 8006346:	681b      	ldr	r3, [r3, #0]
 8006348:	627b      	str	r3, [r7, #36]	; 0x24
 800634a:	687b      	ldr	r3, [r7, #4]
 800634c:	699b      	ldr	r3, [r3, #24]
 800634e:	2b00      	cmp	r3, #0
 8006350:	d002      	beq.n	8006358 <osThreadNew+0x58>
 8006352:	687b      	ldr	r3, [r7, #4]
 8006354:	699b      	ldr	r3, [r3, #24]
 8006356:	61fb      	str	r3, [r7, #28]
 8006358:	69fb      	ldr	r3, [r7, #28]
 800635a:	2b00      	cmp	r3, #0
 800635c:	d008      	beq.n	8006370 <osThreadNew+0x70>
 800635e:	69fb      	ldr	r3, [r7, #28]
 8006360:	2b38      	cmp	r3, #56	; 0x38
 8006362:	d805      	bhi.n	8006370 <osThreadNew+0x70>
 8006364:	687b      	ldr	r3, [r7, #4]
 8006366:	685b      	ldr	r3, [r3, #4]
 8006368:	f003 0301 	and.w	r3, r3, #1
 800636c:	2b00      	cmp	r3, #0
 800636e:	d001      	beq.n	8006374 <osThreadNew+0x74>
 8006370:	2300      	movs	r3, #0
 8006372:	e054      	b.n	800641e <osThreadNew+0x11e>
 8006374:	687b      	ldr	r3, [r7, #4]
 8006376:	695b      	ldr	r3, [r3, #20]
 8006378:	2b00      	cmp	r3, #0
 800637a:	d003      	beq.n	8006384 <osThreadNew+0x84>
 800637c:	687b      	ldr	r3, [r7, #4]
 800637e:	695b      	ldr	r3, [r3, #20]
 8006380:	089b      	lsrs	r3, r3, #2
 8006382:	623b      	str	r3, [r7, #32]
 8006384:	687b      	ldr	r3, [r7, #4]
 8006386:	689b      	ldr	r3, [r3, #8]
 8006388:	2b00      	cmp	r3, #0
 800638a:	d00e      	beq.n	80063aa <osThreadNew+0xaa>
 800638c:	687b      	ldr	r3, [r7, #4]
 800638e:	68db      	ldr	r3, [r3, #12]
 8006390:	2ba7      	cmp	r3, #167	; 0xa7
 8006392:	d90a      	bls.n	80063aa <osThreadNew+0xaa>
 8006394:	687b      	ldr	r3, [r7, #4]
 8006396:	691b      	ldr	r3, [r3, #16]
 8006398:	2b00      	cmp	r3, #0
 800639a:	d006      	beq.n	80063aa <osThreadNew+0xaa>
 800639c:	687b      	ldr	r3, [r7, #4]
 800639e:	695b      	ldr	r3, [r3, #20]
 80063a0:	2b00      	cmp	r3, #0
 80063a2:	d002      	beq.n	80063aa <osThreadNew+0xaa>
 80063a4:	2301      	movs	r3, #1
 80063a6:	61bb      	str	r3, [r7, #24]
 80063a8:	e010      	b.n	80063cc <osThreadNew+0xcc>
 80063aa:	687b      	ldr	r3, [r7, #4]
 80063ac:	689b      	ldr	r3, [r3, #8]
 80063ae:	2b00      	cmp	r3, #0
 80063b0:	d10c      	bne.n	80063cc <osThreadNew+0xcc>
 80063b2:	687b      	ldr	r3, [r7, #4]
 80063b4:	68db      	ldr	r3, [r3, #12]
 80063b6:	2b00      	cmp	r3, #0
 80063b8:	d108      	bne.n	80063cc <osThreadNew+0xcc>
 80063ba:	687b      	ldr	r3, [r7, #4]
 80063bc:	691b      	ldr	r3, [r3, #16]
 80063be:	2b00      	cmp	r3, #0
 80063c0:	d104      	bne.n	80063cc <osThreadNew+0xcc>
 80063c2:	2300      	movs	r3, #0
 80063c4:	61bb      	str	r3, [r7, #24]
 80063c6:	e001      	b.n	80063cc <osThreadNew+0xcc>
 80063c8:	2300      	movs	r3, #0
 80063ca:	61bb      	str	r3, [r7, #24]
 80063cc:	69bb      	ldr	r3, [r7, #24]
 80063ce:	2b01      	cmp	r3, #1
 80063d0:	d110      	bne.n	80063f4 <osThreadNew+0xf4>
 80063d2:	687b      	ldr	r3, [r7, #4]
 80063d4:	691b      	ldr	r3, [r3, #16]
 80063d6:	687a      	ldr	r2, [r7, #4]
 80063d8:	6892      	ldr	r2, [r2, #8]
 80063da:	9202      	str	r2, [sp, #8]
 80063dc:	9301      	str	r3, [sp, #4]
 80063de:	69fb      	ldr	r3, [r7, #28]
 80063e0:	9300      	str	r3, [sp, #0]
 80063e2:	68bb      	ldr	r3, [r7, #8]
 80063e4:	6a3a      	ldr	r2, [r7, #32]
 80063e6:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80063e8:	68f8      	ldr	r0, [r7, #12]
 80063ea:	f001 f8b7 	bl	800755c <xTaskCreateStatic>
 80063ee:	4603      	mov	r3, r0
 80063f0:	613b      	str	r3, [r7, #16]
 80063f2:	e013      	b.n	800641c <osThreadNew+0x11c>
 80063f4:	69bb      	ldr	r3, [r7, #24]
 80063f6:	2b00      	cmp	r3, #0
 80063f8:	d110      	bne.n	800641c <osThreadNew+0x11c>
 80063fa:	6a3b      	ldr	r3, [r7, #32]
 80063fc:	b29a      	uxth	r2, r3
 80063fe:	f107 0310 	add.w	r3, r7, #16
 8006402:	9301      	str	r3, [sp, #4]
 8006404:	69fb      	ldr	r3, [r7, #28]
 8006406:	9300      	str	r3, [sp, #0]
 8006408:	68bb      	ldr	r3, [r7, #8]
 800640a:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800640c:	68f8      	ldr	r0, [r7, #12]
 800640e:	f001 f902 	bl	8007616 <xTaskCreate>
 8006412:	4603      	mov	r3, r0
 8006414:	2b01      	cmp	r3, #1
 8006416:	d001      	beq.n	800641c <osThreadNew+0x11c>
 8006418:	2300      	movs	r3, #0
 800641a:	613b      	str	r3, [r7, #16]
 800641c:	693b      	ldr	r3, [r7, #16]
 800641e:	4618      	mov	r0, r3
 8006420:	3728      	adds	r7, #40	; 0x28
 8006422:	46bd      	mov	sp, r7
 8006424:	bd80      	pop	{r7, pc}

08006426 <osDelay>:
 8006426:	b580      	push	{r7, lr}
 8006428:	b084      	sub	sp, #16
 800642a:	af00      	add	r7, sp, #0
 800642c:	6078      	str	r0, [r7, #4]
 800642e:	f3ef 8305 	mrs	r3, IPSR
 8006432:	60bb      	str	r3, [r7, #8]
 8006434:	68bb      	ldr	r3, [r7, #8]
 8006436:	2b00      	cmp	r3, #0
 8006438:	d003      	beq.n	8006442 <osDelay+0x1c>
 800643a:	f06f 0305 	mvn.w	r3, #5
 800643e:	60fb      	str	r3, [r7, #12]
 8006440:	e007      	b.n	8006452 <osDelay+0x2c>
 8006442:	2300      	movs	r3, #0
 8006444:	60fb      	str	r3, [r7, #12]
 8006446:	687b      	ldr	r3, [r7, #4]
 8006448:	2b00      	cmp	r3, #0
 800644a:	d002      	beq.n	8006452 <osDelay+0x2c>
 800644c:	6878      	ldr	r0, [r7, #4]
 800644e:	f001 fa3d 	bl	80078cc <vTaskDelay>
 8006452:	68fb      	ldr	r3, [r7, #12]
 8006454:	4618      	mov	r0, r3
 8006456:	3710      	adds	r7, #16
 8006458:	46bd      	mov	sp, r7
 800645a:	bd80      	pop	{r7, pc}

0800645c <TimerCallback>:
 800645c:	b580      	push	{r7, lr}
 800645e:	b084      	sub	sp, #16
 8006460:	af00      	add	r7, sp, #0
 8006462:	6078      	str	r0, [r7, #4]
 8006464:	6878      	ldr	r0, [r7, #4]
 8006466:	f002 fb89 	bl	8008b7c <pvTimerGetTimerID>
 800646a:	60f8      	str	r0, [r7, #12]
 800646c:	68fb      	ldr	r3, [r7, #12]
 800646e:	2b00      	cmp	r3, #0
 8006470:	d005      	beq.n	800647e <TimerCallback+0x22>
 8006472:	68fb      	ldr	r3, [r7, #12]
 8006474:	681b      	ldr	r3, [r3, #0]
 8006476:	68fa      	ldr	r2, [r7, #12]
 8006478:	6852      	ldr	r2, [r2, #4]
 800647a:	4610      	mov	r0, r2
 800647c:	4798      	blx	r3
 800647e:	bf00      	nop
 8006480:	3710      	adds	r7, #16
 8006482:	46bd      	mov	sp, r7
 8006484:	bd80      	pop	{r7, pc}
	...

08006488 <osTimerNew>:
 8006488:	b580      	push	{r7, lr}
 800648a:	b08c      	sub	sp, #48	; 0x30
 800648c:	af02      	add	r7, sp, #8
 800648e:	60f8      	str	r0, [r7, #12]
 8006490:	607a      	str	r2, [r7, #4]
 8006492:	603b      	str	r3, [r7, #0]
 8006494:	460b      	mov	r3, r1
 8006496:	72fb      	strb	r3, [r7, #11]
 8006498:	2300      	movs	r3, #0
 800649a:	623b      	str	r3, [r7, #32]
 800649c:	f3ef 8305 	mrs	r3, IPSR
 80064a0:	613b      	str	r3, [r7, #16]
 80064a2:	693b      	ldr	r3, [r7, #16]
 80064a4:	2b00      	cmp	r3, #0
 80064a6:	d163      	bne.n	8006570 <osTimerNew+0xe8>
 80064a8:	68fb      	ldr	r3, [r7, #12]
 80064aa:	2b00      	cmp	r3, #0
 80064ac:	d060      	beq.n	8006570 <osTimerNew+0xe8>
 80064ae:	2008      	movs	r0, #8
 80064b0:	f002 fdd2 	bl	8009058 <pvPortMalloc>
 80064b4:	6178      	str	r0, [r7, #20]
 80064b6:	697b      	ldr	r3, [r7, #20]
 80064b8:	2b00      	cmp	r3, #0
 80064ba:	d059      	beq.n	8006570 <osTimerNew+0xe8>
 80064bc:	697b      	ldr	r3, [r7, #20]
 80064be:	68fa      	ldr	r2, [r7, #12]
 80064c0:	601a      	str	r2, [r3, #0]
 80064c2:	697b      	ldr	r3, [r7, #20]
 80064c4:	687a      	ldr	r2, [r7, #4]
 80064c6:	605a      	str	r2, [r3, #4]
 80064c8:	7afb      	ldrb	r3, [r7, #11]
 80064ca:	2b00      	cmp	r3, #0
 80064cc:	d102      	bne.n	80064d4 <osTimerNew+0x4c>
 80064ce:	2300      	movs	r3, #0
 80064d0:	61fb      	str	r3, [r7, #28]
 80064d2:	e001      	b.n	80064d8 <osTimerNew+0x50>
 80064d4:	2301      	movs	r3, #1
 80064d6:	61fb      	str	r3, [r7, #28]
 80064d8:	f04f 33ff 	mov.w	r3, #4294967295
 80064dc:	61bb      	str	r3, [r7, #24]
 80064de:	2300      	movs	r3, #0
 80064e0:	627b      	str	r3, [r7, #36]	; 0x24
 80064e2:	683b      	ldr	r3, [r7, #0]
 80064e4:	2b00      	cmp	r3, #0
 80064e6:	d01c      	beq.n	8006522 <osTimerNew+0x9a>
 80064e8:	683b      	ldr	r3, [r7, #0]
 80064ea:	681b      	ldr	r3, [r3, #0]
 80064ec:	2b00      	cmp	r3, #0
 80064ee:	d002      	beq.n	80064f6 <osTimerNew+0x6e>
 80064f0:	683b      	ldr	r3, [r7, #0]
 80064f2:	681b      	ldr	r3, [r3, #0]
 80064f4:	627b      	str	r3, [r7, #36]	; 0x24
 80064f6:	683b      	ldr	r3, [r7, #0]
 80064f8:	689b      	ldr	r3, [r3, #8]
 80064fa:	2b00      	cmp	r3, #0
 80064fc:	d006      	beq.n	800650c <osTimerNew+0x84>
 80064fe:	683b      	ldr	r3, [r7, #0]
 8006500:	68db      	ldr	r3, [r3, #12]
 8006502:	2b2b      	cmp	r3, #43	; 0x2b
 8006504:	d902      	bls.n	800650c <osTimerNew+0x84>
 8006506:	2301      	movs	r3, #1
 8006508:	61bb      	str	r3, [r7, #24]
 800650a:	e00c      	b.n	8006526 <osTimerNew+0x9e>
 800650c:	683b      	ldr	r3, [r7, #0]
 800650e:	689b      	ldr	r3, [r3, #8]
 8006510:	2b00      	cmp	r3, #0
 8006512:	d108      	bne.n	8006526 <osTimerNew+0x9e>
 8006514:	683b      	ldr	r3, [r7, #0]
 8006516:	68db      	ldr	r3, [r3, #12]
 8006518:	2b00      	cmp	r3, #0
 800651a:	d104      	bne.n	8006526 <osTimerNew+0x9e>
 800651c:	2300      	movs	r3, #0
 800651e:	61bb      	str	r3, [r7, #24]
 8006520:	e001      	b.n	8006526 <osTimerNew+0x9e>
 8006522:	2300      	movs	r3, #0
 8006524:	61bb      	str	r3, [r7, #24]
 8006526:	69bb      	ldr	r3, [r7, #24]
 8006528:	2b01      	cmp	r3, #1
 800652a:	d10c      	bne.n	8006546 <osTimerNew+0xbe>
 800652c:	683b      	ldr	r3, [r7, #0]
 800652e:	689b      	ldr	r3, [r3, #8]
 8006530:	9301      	str	r3, [sp, #4]
 8006532:	4b12      	ldr	r3, [pc, #72]	; (800657c <osTimerNew+0xf4>)
 8006534:	9300      	str	r3, [sp, #0]
 8006536:	697b      	ldr	r3, [r7, #20]
 8006538:	69fa      	ldr	r2, [r7, #28]
 800653a:	2101      	movs	r1, #1
 800653c:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800653e:	f001 ff9e 	bl	800847e <xTimerCreateStatic>
 8006542:	6238      	str	r0, [r7, #32]
 8006544:	e00b      	b.n	800655e <osTimerNew+0xd6>
 8006546:	69bb      	ldr	r3, [r7, #24]
 8006548:	2b00      	cmp	r3, #0
 800654a:	d108      	bne.n	800655e <osTimerNew+0xd6>
 800654c:	4b0b      	ldr	r3, [pc, #44]	; (800657c <osTimerNew+0xf4>)
 800654e:	9300      	str	r3, [sp, #0]
 8006550:	697b      	ldr	r3, [r7, #20]
 8006552:	69fa      	ldr	r2, [r7, #28]
 8006554:	2101      	movs	r1, #1
 8006556:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8006558:	f001 ff70 	bl	800843c <xTimerCreate>
 800655c:	6238      	str	r0, [r7, #32]
 800655e:	6a3b      	ldr	r3, [r7, #32]
 8006560:	2b00      	cmp	r3, #0
 8006562:	d105      	bne.n	8006570 <osTimerNew+0xe8>
 8006564:	697b      	ldr	r3, [r7, #20]
 8006566:	2b00      	cmp	r3, #0
 8006568:	d002      	beq.n	8006570 <osTimerNew+0xe8>
 800656a:	6978      	ldr	r0, [r7, #20]
 800656c:	f002 fe40 	bl	80091f0 <vPortFree>
 8006570:	6a3b      	ldr	r3, [r7, #32]
 8006572:	4618      	mov	r0, r3
 8006574:	3728      	adds	r7, #40	; 0x28
 8006576:	46bd      	mov	sp, r7
 8006578:	bd80      	pop	{r7, pc}
 800657a:	bf00      	nop
 800657c:	0800645d 	.word	0x0800645d

08006580 <osTimerStart>:
 8006580:	b580      	push	{r7, lr}
 8006582:	b088      	sub	sp, #32
 8006584:	af02      	add	r7, sp, #8
 8006586:	6078      	str	r0, [r7, #4]
 8006588:	6039      	str	r1, [r7, #0]
 800658a:	687b      	ldr	r3, [r7, #4]
 800658c:	613b      	str	r3, [r7, #16]
 800658e:	f3ef 8305 	mrs	r3, IPSR
 8006592:	60fb      	str	r3, [r7, #12]
 8006594:	68fb      	ldr	r3, [r7, #12]
 8006596:	2b00      	cmp	r3, #0
 8006598:	d003      	beq.n	80065a2 <osTimerStart+0x22>
 800659a:	f06f 0305 	mvn.w	r3, #5
 800659e:	617b      	str	r3, [r7, #20]
 80065a0:	e017      	b.n	80065d2 <osTimerStart+0x52>
 80065a2:	693b      	ldr	r3, [r7, #16]
 80065a4:	2b00      	cmp	r3, #0
 80065a6:	d103      	bne.n	80065b0 <osTimerStart+0x30>
 80065a8:	f06f 0303 	mvn.w	r3, #3
 80065ac:	617b      	str	r3, [r7, #20]
 80065ae:	e010      	b.n	80065d2 <osTimerStart+0x52>
 80065b0:	2300      	movs	r3, #0
 80065b2:	9300      	str	r3, [sp, #0]
 80065b4:	2300      	movs	r3, #0
 80065b6:	683a      	ldr	r2, [r7, #0]
 80065b8:	2104      	movs	r1, #4
 80065ba:	6938      	ldr	r0, [r7, #16]
 80065bc:	f001 ffd8 	bl	8008570 <xTimerGenericCommand>
 80065c0:	4603      	mov	r3, r0
 80065c2:	2b01      	cmp	r3, #1
 80065c4:	d102      	bne.n	80065cc <osTimerStart+0x4c>
 80065c6:	2300      	movs	r3, #0
 80065c8:	617b      	str	r3, [r7, #20]
 80065ca:	e002      	b.n	80065d2 <osTimerStart+0x52>
 80065cc:	f06f 0302 	mvn.w	r3, #2
 80065d0:	617b      	str	r3, [r7, #20]
 80065d2:	697b      	ldr	r3, [r7, #20]
 80065d4:	4618      	mov	r0, r3
 80065d6:	3718      	adds	r7, #24
 80065d8:	46bd      	mov	sp, r7
 80065da:	bd80      	pop	{r7, pc}

080065dc <osMessageQueueNew>:
 80065dc:	b580      	push	{r7, lr}
 80065de:	b08a      	sub	sp, #40	; 0x28
 80065e0:	af02      	add	r7, sp, #8
 80065e2:	60f8      	str	r0, [r7, #12]
 80065e4:	60b9      	str	r1, [r7, #8]
 80065e6:	607a      	str	r2, [r7, #4]
 80065e8:	2300      	movs	r3, #0
 80065ea:	61fb      	str	r3, [r7, #28]
 80065ec:	f3ef 8305 	mrs	r3, IPSR
 80065f0:	613b      	str	r3, [r7, #16]
 80065f2:	693b      	ldr	r3, [r7, #16]
 80065f4:	2b00      	cmp	r3, #0
 80065f6:	d15f      	bne.n	80066b8 <osMessageQueueNew+0xdc>
 80065f8:	68fb      	ldr	r3, [r7, #12]
 80065fa:	2b00      	cmp	r3, #0
 80065fc:	d05c      	beq.n	80066b8 <osMessageQueueNew+0xdc>
 80065fe:	68bb      	ldr	r3, [r7, #8]
 8006600:	2b00      	cmp	r3, #0
 8006602:	d059      	beq.n	80066b8 <osMessageQueueNew+0xdc>
 8006604:	f04f 33ff 	mov.w	r3, #4294967295
 8006608:	61bb      	str	r3, [r7, #24]
 800660a:	687b      	ldr	r3, [r7, #4]
 800660c:	2b00      	cmp	r3, #0
 800660e:	d029      	beq.n	8006664 <osMessageQueueNew+0x88>
 8006610:	687b      	ldr	r3, [r7, #4]
 8006612:	689b      	ldr	r3, [r3, #8]
 8006614:	2b00      	cmp	r3, #0
 8006616:	d012      	beq.n	800663e <osMessageQueueNew+0x62>
 8006618:	687b      	ldr	r3, [r7, #4]
 800661a:	68db      	ldr	r3, [r3, #12]
 800661c:	2b4f      	cmp	r3, #79	; 0x4f
 800661e:	d90e      	bls.n	800663e <osMessageQueueNew+0x62>
 8006620:	687b      	ldr	r3, [r7, #4]
 8006622:	691b      	ldr	r3, [r3, #16]
 8006624:	2b00      	cmp	r3, #0
 8006626:	d00a      	beq.n	800663e <osMessageQueueNew+0x62>
 8006628:	687b      	ldr	r3, [r7, #4]
 800662a:	695a      	ldr	r2, [r3, #20]
 800662c:	68fb      	ldr	r3, [r7, #12]
 800662e:	68b9      	ldr	r1, [r7, #8]
 8006630:	fb01 f303 	mul.w	r3, r1, r3
 8006634:	429a      	cmp	r2, r3
 8006636:	d302      	bcc.n	800663e <osMessageQueueNew+0x62>
 8006638:	2301      	movs	r3, #1
 800663a:	61bb      	str	r3, [r7, #24]
 800663c:	e014      	b.n	8006668 <osMessageQueueNew+0x8c>
 800663e:	687b      	ldr	r3, [r7, #4]
 8006640:	689b      	ldr	r3, [r3, #8]
 8006642:	2b00      	cmp	r3, #0
 8006644:	d110      	bne.n	8006668 <osMessageQueueNew+0x8c>
 8006646:	687b      	ldr	r3, [r7, #4]
 8006648:	68db      	ldr	r3, [r3, #12]
 800664a:	2b00      	cmp	r3, #0
 800664c:	d10c      	bne.n	8006668 <osMessageQueueNew+0x8c>
 800664e:	687b      	ldr	r3, [r7, #4]
 8006650:	691b      	ldr	r3, [r3, #16]
 8006652:	2b00      	cmp	r3, #0
 8006654:	d108      	bne.n	8006668 <osMessageQueueNew+0x8c>
 8006656:	687b      	ldr	r3, [r7, #4]
 8006658:	695b      	ldr	r3, [r3, #20]
 800665a:	2b00      	cmp	r3, #0
 800665c:	d104      	bne.n	8006668 <osMessageQueueNew+0x8c>
 800665e:	2300      	movs	r3, #0
 8006660:	61bb      	str	r3, [r7, #24]
 8006662:	e001      	b.n	8006668 <osMessageQueueNew+0x8c>
 8006664:	2300      	movs	r3, #0
 8006666:	61bb      	str	r3, [r7, #24]
 8006668:	69bb      	ldr	r3, [r7, #24]
 800666a:	2b01      	cmp	r3, #1
 800666c:	d10b      	bne.n	8006686 <osMessageQueueNew+0xaa>
 800666e:	687b      	ldr	r3, [r7, #4]
 8006670:	691a      	ldr	r2, [r3, #16]
 8006672:	687b      	ldr	r3, [r7, #4]
 8006674:	689b      	ldr	r3, [r3, #8]
 8006676:	2100      	movs	r1, #0
 8006678:	9100      	str	r1, [sp, #0]
 800667a:	68b9      	ldr	r1, [r7, #8]
 800667c:	68f8      	ldr	r0, [r7, #12]
 800667e:	f000 fa2f 	bl	8006ae0 <xQueueGenericCreateStatic>
 8006682:	61f8      	str	r0, [r7, #28]
 8006684:	e008      	b.n	8006698 <osMessageQueueNew+0xbc>
 8006686:	69bb      	ldr	r3, [r7, #24]
 8006688:	2b00      	cmp	r3, #0
 800668a:	d105      	bne.n	8006698 <osMessageQueueNew+0xbc>
 800668c:	2200      	movs	r2, #0
 800668e:	68b9      	ldr	r1, [r7, #8]
 8006690:	68f8      	ldr	r0, [r7, #12]
 8006692:	f000 fa9d 	bl	8006bd0 <xQueueGenericCreate>
 8006696:	61f8      	str	r0, [r7, #28]
 8006698:	69fb      	ldr	r3, [r7, #28]
 800669a:	2b00      	cmp	r3, #0
 800669c:	d00c      	beq.n	80066b8 <osMessageQueueNew+0xdc>
 800669e:	687b      	ldr	r3, [r7, #4]
 80066a0:	2b00      	cmp	r3, #0
 80066a2:	d003      	beq.n	80066ac <osMessageQueueNew+0xd0>
 80066a4:	687b      	ldr	r3, [r7, #4]
 80066a6:	681b      	ldr	r3, [r3, #0]
 80066a8:	617b      	str	r3, [r7, #20]
 80066aa:	e001      	b.n	80066b0 <osMessageQueueNew+0xd4>
 80066ac:	2300      	movs	r3, #0
 80066ae:	617b      	str	r3, [r7, #20]
 80066b0:	6979      	ldr	r1, [r7, #20]
 80066b2:	69f8      	ldr	r0, [r7, #28]
 80066b4:	f000 fef4 	bl	80074a0 <vQueueAddToRegistry>
 80066b8:	69fb      	ldr	r3, [r7, #28]
 80066ba:	4618      	mov	r0, r3
 80066bc:	3720      	adds	r7, #32
 80066be:	46bd      	mov	sp, r7
 80066c0:	bd80      	pop	{r7, pc}
	...

080066c4 <osMessageQueuePut>:
 80066c4:	b580      	push	{r7, lr}
 80066c6:	b088      	sub	sp, #32
 80066c8:	af00      	add	r7, sp, #0
 80066ca:	60f8      	str	r0, [r7, #12]
 80066cc:	60b9      	str	r1, [r7, #8]
 80066ce:	603b      	str	r3, [r7, #0]
 80066d0:	4613      	mov	r3, r2
 80066d2:	71fb      	strb	r3, [r7, #7]
 80066d4:	68fb      	ldr	r3, [r7, #12]
 80066d6:	61bb      	str	r3, [r7, #24]
 80066d8:	2300      	movs	r3, #0
 80066da:	61fb      	str	r3, [r7, #28]
 80066dc:	f3ef 8305 	mrs	r3, IPSR
 80066e0:	617b      	str	r3, [r7, #20]
 80066e2:	697b      	ldr	r3, [r7, #20]
 80066e4:	2b00      	cmp	r3, #0
 80066e6:	d028      	beq.n	800673a <osMessageQueuePut+0x76>
 80066e8:	69bb      	ldr	r3, [r7, #24]
 80066ea:	2b00      	cmp	r3, #0
 80066ec:	d005      	beq.n	80066fa <osMessageQueuePut+0x36>
 80066ee:	68bb      	ldr	r3, [r7, #8]
 80066f0:	2b00      	cmp	r3, #0
 80066f2:	d002      	beq.n	80066fa <osMessageQueuePut+0x36>
 80066f4:	683b      	ldr	r3, [r7, #0]
 80066f6:	2b00      	cmp	r3, #0
 80066f8:	d003      	beq.n	8006702 <osMessageQueuePut+0x3e>
 80066fa:	f06f 0303 	mvn.w	r3, #3
 80066fe:	61fb      	str	r3, [r7, #28]
 8006700:	e038      	b.n	8006774 <osMessageQueuePut+0xb0>
 8006702:	2300      	movs	r3, #0
 8006704:	613b      	str	r3, [r7, #16]
 8006706:	f107 0210 	add.w	r2, r7, #16
 800670a:	2300      	movs	r3, #0
 800670c:	68b9      	ldr	r1, [r7, #8]
 800670e:	69b8      	ldr	r0, [r7, #24]
 8006710:	f000 fbba 	bl	8006e88 <xQueueGenericSendFromISR>
 8006714:	4603      	mov	r3, r0
 8006716:	2b01      	cmp	r3, #1
 8006718:	d003      	beq.n	8006722 <osMessageQueuePut+0x5e>
 800671a:	f06f 0302 	mvn.w	r3, #2
 800671e:	61fb      	str	r3, [r7, #28]
 8006720:	e028      	b.n	8006774 <osMessageQueuePut+0xb0>
 8006722:	693b      	ldr	r3, [r7, #16]
 8006724:	2b00      	cmp	r3, #0
 8006726:	d025      	beq.n	8006774 <osMessageQueuePut+0xb0>
 8006728:	4b15      	ldr	r3, [pc, #84]	; (8006780 <osMessageQueuePut+0xbc>)
 800672a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800672e:	601a      	str	r2, [r3, #0]
 8006730:	f3bf 8f4f 	dsb	sy
 8006734:	f3bf 8f6f 	isb	sy
 8006738:	e01c      	b.n	8006774 <osMessageQueuePut+0xb0>
 800673a:	69bb      	ldr	r3, [r7, #24]
 800673c:	2b00      	cmp	r3, #0
 800673e:	d002      	beq.n	8006746 <osMessageQueuePut+0x82>
 8006740:	68bb      	ldr	r3, [r7, #8]
 8006742:	2b00      	cmp	r3, #0
 8006744:	d103      	bne.n	800674e <osMessageQueuePut+0x8a>
 8006746:	f06f 0303 	mvn.w	r3, #3
 800674a:	61fb      	str	r3, [r7, #28]
 800674c:	e012      	b.n	8006774 <osMessageQueuePut+0xb0>
 800674e:	2300      	movs	r3, #0
 8006750:	683a      	ldr	r2, [r7, #0]
 8006752:	68b9      	ldr	r1, [r7, #8]
 8006754:	69b8      	ldr	r0, [r7, #24]
 8006756:	f000 fa99 	bl	8006c8c <xQueueGenericSend>
 800675a:	4603      	mov	r3, r0
 800675c:	2b01      	cmp	r3, #1
 800675e:	d009      	beq.n	8006774 <osMessageQueuePut+0xb0>
 8006760:	683b      	ldr	r3, [r7, #0]
 8006762:	2b00      	cmp	r3, #0
 8006764:	d003      	beq.n	800676e <osMessageQueuePut+0xaa>
 8006766:	f06f 0301 	mvn.w	r3, #1
 800676a:	61fb      	str	r3, [r7, #28]
 800676c:	e002      	b.n	8006774 <osMessageQueuePut+0xb0>
 800676e:	f06f 0302 	mvn.w	r3, #2
 8006772:	61fb      	str	r3, [r7, #28]
 8006774:	69fb      	ldr	r3, [r7, #28]
 8006776:	4618      	mov	r0, r3
 8006778:	3720      	adds	r7, #32
 800677a:	46bd      	mov	sp, r7
 800677c:	bd80      	pop	{r7, pc}
 800677e:	bf00      	nop
 8006780:	e000ed04 	.word	0xe000ed04

08006784 <osMessageQueueGet>:
 8006784:	b580      	push	{r7, lr}
 8006786:	b088      	sub	sp, #32
 8006788:	af00      	add	r7, sp, #0
 800678a:	60f8      	str	r0, [r7, #12]
 800678c:	60b9      	str	r1, [r7, #8]
 800678e:	607a      	str	r2, [r7, #4]
 8006790:	603b      	str	r3, [r7, #0]
 8006792:	68fb      	ldr	r3, [r7, #12]
 8006794:	61bb      	str	r3, [r7, #24]
 8006796:	2300      	movs	r3, #0
 8006798:	61fb      	str	r3, [r7, #28]
 800679a:	f3ef 8305 	mrs	r3, IPSR
 800679e:	617b      	str	r3, [r7, #20]
 80067a0:	697b      	ldr	r3, [r7, #20]
 80067a2:	2b00      	cmp	r3, #0
 80067a4:	d028      	beq.n	80067f8 <osMessageQueueGet+0x74>
 80067a6:	69bb      	ldr	r3, [r7, #24]
 80067a8:	2b00      	cmp	r3, #0
 80067aa:	d005      	beq.n	80067b8 <osMessageQueueGet+0x34>
 80067ac:	68bb      	ldr	r3, [r7, #8]
 80067ae:	2b00      	cmp	r3, #0
 80067b0:	d002      	beq.n	80067b8 <osMessageQueueGet+0x34>
 80067b2:	683b      	ldr	r3, [r7, #0]
 80067b4:	2b00      	cmp	r3, #0
 80067b6:	d003      	beq.n	80067c0 <osMessageQueueGet+0x3c>
 80067b8:	f06f 0303 	mvn.w	r3, #3
 80067bc:	61fb      	str	r3, [r7, #28]
 80067be:	e037      	b.n	8006830 <osMessageQueueGet+0xac>
 80067c0:	2300      	movs	r3, #0
 80067c2:	613b      	str	r3, [r7, #16]
 80067c4:	f107 0310 	add.w	r3, r7, #16
 80067c8:	461a      	mov	r2, r3
 80067ca:	68b9      	ldr	r1, [r7, #8]
 80067cc:	69b8      	ldr	r0, [r7, #24]
 80067ce:	f000 fcd7 	bl	8007180 <xQueueReceiveFromISR>
 80067d2:	4603      	mov	r3, r0
 80067d4:	2b01      	cmp	r3, #1
 80067d6:	d003      	beq.n	80067e0 <osMessageQueueGet+0x5c>
 80067d8:	f06f 0302 	mvn.w	r3, #2
 80067dc:	61fb      	str	r3, [r7, #28]
 80067de:	e027      	b.n	8006830 <osMessageQueueGet+0xac>
 80067e0:	693b      	ldr	r3, [r7, #16]
 80067e2:	2b00      	cmp	r3, #0
 80067e4:	d024      	beq.n	8006830 <osMessageQueueGet+0xac>
 80067e6:	4b15      	ldr	r3, [pc, #84]	; (800683c <osMessageQueueGet+0xb8>)
 80067e8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80067ec:	601a      	str	r2, [r3, #0]
 80067ee:	f3bf 8f4f 	dsb	sy
 80067f2:	f3bf 8f6f 	isb	sy
 80067f6:	e01b      	b.n	8006830 <osMessageQueueGet+0xac>
 80067f8:	69bb      	ldr	r3, [r7, #24]
 80067fa:	2b00      	cmp	r3, #0
 80067fc:	d002      	beq.n	8006804 <osMessageQueueGet+0x80>
 80067fe:	68bb      	ldr	r3, [r7, #8]
 8006800:	2b00      	cmp	r3, #0
 8006802:	d103      	bne.n	800680c <osMessageQueueGet+0x88>
 8006804:	f06f 0303 	mvn.w	r3, #3
 8006808:	61fb      	str	r3, [r7, #28]
 800680a:	e011      	b.n	8006830 <osMessageQueueGet+0xac>
 800680c:	683a      	ldr	r2, [r7, #0]
 800680e:	68b9      	ldr	r1, [r7, #8]
 8006810:	69b8      	ldr	r0, [r7, #24]
 8006812:	f000 fbd5 	bl	8006fc0 <xQueueReceive>
 8006816:	4603      	mov	r3, r0
 8006818:	2b01      	cmp	r3, #1
 800681a:	d009      	beq.n	8006830 <osMessageQueueGet+0xac>
 800681c:	683b      	ldr	r3, [r7, #0]
 800681e:	2b00      	cmp	r3, #0
 8006820:	d003      	beq.n	800682a <osMessageQueueGet+0xa6>
 8006822:	f06f 0301 	mvn.w	r3, #1
 8006826:	61fb      	str	r3, [r7, #28]
 8006828:	e002      	b.n	8006830 <osMessageQueueGet+0xac>
 800682a:	f06f 0302 	mvn.w	r3, #2
 800682e:	61fb      	str	r3, [r7, #28]
 8006830:	69fb      	ldr	r3, [r7, #28]
 8006832:	4618      	mov	r0, r3
 8006834:	3720      	adds	r7, #32
 8006836:	46bd      	mov	sp, r7
 8006838:	bd80      	pop	{r7, pc}
 800683a:	bf00      	nop
 800683c:	e000ed04 	.word	0xe000ed04

08006840 <vApplicationGetIdleTaskMemory>:
 8006840:	b480      	push	{r7}
 8006842:	b085      	sub	sp, #20
 8006844:	af00      	add	r7, sp, #0
 8006846:	60f8      	str	r0, [r7, #12]
 8006848:	60b9      	str	r1, [r7, #8]
 800684a:	607a      	str	r2, [r7, #4]
 800684c:	68fb      	ldr	r3, [r7, #12]
 800684e:	4a07      	ldr	r2, [pc, #28]	; (800686c <vApplicationGetIdleTaskMemory+0x2c>)
 8006850:	601a      	str	r2, [r3, #0]
 8006852:	68bb      	ldr	r3, [r7, #8]
 8006854:	4a06      	ldr	r2, [pc, #24]	; (8006870 <vApplicationGetIdleTaskMemory+0x30>)
 8006856:	601a      	str	r2, [r3, #0]
 8006858:	687b      	ldr	r3, [r7, #4]
 800685a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800685e:	601a      	str	r2, [r3, #0]
 8006860:	bf00      	nop
 8006862:	3714      	adds	r7, #20
 8006864:	46bd      	mov	sp, r7
 8006866:	f85d 7b04 	ldr.w	r7, [sp], #4
 800686a:	4770      	bx	lr
 800686c:	20000c74 	.word	0x20000c74
 8006870:	20000d1c 	.word	0x20000d1c

08006874 <vApplicationGetTimerTaskMemory>:
 8006874:	b480      	push	{r7}
 8006876:	b085      	sub	sp, #20
 8006878:	af00      	add	r7, sp, #0
 800687a:	60f8      	str	r0, [r7, #12]
 800687c:	60b9      	str	r1, [r7, #8]
 800687e:	607a      	str	r2, [r7, #4]
 8006880:	68fb      	ldr	r3, [r7, #12]
 8006882:	4a07      	ldr	r2, [pc, #28]	; (80068a0 <vApplicationGetTimerTaskMemory+0x2c>)
 8006884:	601a      	str	r2, [r3, #0]
 8006886:	68bb      	ldr	r3, [r7, #8]
 8006888:	4a06      	ldr	r2, [pc, #24]	; (80068a4 <vApplicationGetTimerTaskMemory+0x30>)
 800688a:	601a      	str	r2, [r3, #0]
 800688c:	687b      	ldr	r3, [r7, #4]
 800688e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8006892:	601a      	str	r2, [r3, #0]
 8006894:	bf00      	nop
 8006896:	3714      	adds	r7, #20
 8006898:	46bd      	mov	sp, r7
 800689a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800689e:	4770      	bx	lr
 80068a0:	2000111c 	.word	0x2000111c
 80068a4:	200011c4 	.word	0x200011c4

080068a8 <vListInitialise>:
 80068a8:	b480      	push	{r7}
 80068aa:	b083      	sub	sp, #12
 80068ac:	af00      	add	r7, sp, #0
 80068ae:	6078      	str	r0, [r7, #4]
 80068b0:	687b      	ldr	r3, [r7, #4]
 80068b2:	f103 0208 	add.w	r2, r3, #8
 80068b6:	687b      	ldr	r3, [r7, #4]
 80068b8:	605a      	str	r2, [r3, #4]
 80068ba:	687b      	ldr	r3, [r7, #4]
 80068bc:	f04f 32ff 	mov.w	r2, #4294967295
 80068c0:	609a      	str	r2, [r3, #8]
 80068c2:	687b      	ldr	r3, [r7, #4]
 80068c4:	f103 0208 	add.w	r2, r3, #8
 80068c8:	687b      	ldr	r3, [r7, #4]
 80068ca:	60da      	str	r2, [r3, #12]
 80068cc:	687b      	ldr	r3, [r7, #4]
 80068ce:	f103 0208 	add.w	r2, r3, #8
 80068d2:	687b      	ldr	r3, [r7, #4]
 80068d4:	611a      	str	r2, [r3, #16]
 80068d6:	687b      	ldr	r3, [r7, #4]
 80068d8:	2200      	movs	r2, #0
 80068da:	601a      	str	r2, [r3, #0]
 80068dc:	bf00      	nop
 80068de:	370c      	adds	r7, #12
 80068e0:	46bd      	mov	sp, r7
 80068e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80068e6:	4770      	bx	lr

080068e8 <vListInitialiseItem>:
 80068e8:	b480      	push	{r7}
 80068ea:	b083      	sub	sp, #12
 80068ec:	af00      	add	r7, sp, #0
 80068ee:	6078      	str	r0, [r7, #4]
 80068f0:	687b      	ldr	r3, [r7, #4]
 80068f2:	2200      	movs	r2, #0
 80068f4:	611a      	str	r2, [r3, #16]
 80068f6:	bf00      	nop
 80068f8:	370c      	adds	r7, #12
 80068fa:	46bd      	mov	sp, r7
 80068fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006900:	4770      	bx	lr

08006902 <vListInsertEnd>:
 8006902:	b480      	push	{r7}
 8006904:	b085      	sub	sp, #20
 8006906:	af00      	add	r7, sp, #0
 8006908:	6078      	str	r0, [r7, #4]
 800690a:	6039      	str	r1, [r7, #0]
 800690c:	687b      	ldr	r3, [r7, #4]
 800690e:	685b      	ldr	r3, [r3, #4]
 8006910:	60fb      	str	r3, [r7, #12]
 8006912:	683b      	ldr	r3, [r7, #0]
 8006914:	68fa      	ldr	r2, [r7, #12]
 8006916:	605a      	str	r2, [r3, #4]
 8006918:	68fb      	ldr	r3, [r7, #12]
 800691a:	689a      	ldr	r2, [r3, #8]
 800691c:	683b      	ldr	r3, [r7, #0]
 800691e:	609a      	str	r2, [r3, #8]
 8006920:	68fb      	ldr	r3, [r7, #12]
 8006922:	689b      	ldr	r3, [r3, #8]
 8006924:	683a      	ldr	r2, [r7, #0]
 8006926:	605a      	str	r2, [r3, #4]
 8006928:	68fb      	ldr	r3, [r7, #12]
 800692a:	683a      	ldr	r2, [r7, #0]
 800692c:	609a      	str	r2, [r3, #8]
 800692e:	683b      	ldr	r3, [r7, #0]
 8006930:	687a      	ldr	r2, [r7, #4]
 8006932:	611a      	str	r2, [r3, #16]
 8006934:	687b      	ldr	r3, [r7, #4]
 8006936:	681b      	ldr	r3, [r3, #0]
 8006938:	1c5a      	adds	r2, r3, #1
 800693a:	687b      	ldr	r3, [r7, #4]
 800693c:	601a      	str	r2, [r3, #0]
 800693e:	bf00      	nop
 8006940:	3714      	adds	r7, #20
 8006942:	46bd      	mov	sp, r7
 8006944:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006948:	4770      	bx	lr

0800694a <vListInsert>:
 800694a:	b480      	push	{r7}
 800694c:	b085      	sub	sp, #20
 800694e:	af00      	add	r7, sp, #0
 8006950:	6078      	str	r0, [r7, #4]
 8006952:	6039      	str	r1, [r7, #0]
 8006954:	683b      	ldr	r3, [r7, #0]
 8006956:	681b      	ldr	r3, [r3, #0]
 8006958:	60bb      	str	r3, [r7, #8]
 800695a:	68bb      	ldr	r3, [r7, #8]
 800695c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006960:	d103      	bne.n	800696a <vListInsert+0x20>
 8006962:	687b      	ldr	r3, [r7, #4]
 8006964:	691b      	ldr	r3, [r3, #16]
 8006966:	60fb      	str	r3, [r7, #12]
 8006968:	e00c      	b.n	8006984 <vListInsert+0x3a>
 800696a:	687b      	ldr	r3, [r7, #4]
 800696c:	3308      	adds	r3, #8
 800696e:	60fb      	str	r3, [r7, #12]
 8006970:	e002      	b.n	8006978 <vListInsert+0x2e>
 8006972:	68fb      	ldr	r3, [r7, #12]
 8006974:	685b      	ldr	r3, [r3, #4]
 8006976:	60fb      	str	r3, [r7, #12]
 8006978:	68fb      	ldr	r3, [r7, #12]
 800697a:	685b      	ldr	r3, [r3, #4]
 800697c:	681b      	ldr	r3, [r3, #0]
 800697e:	68ba      	ldr	r2, [r7, #8]
 8006980:	429a      	cmp	r2, r3
 8006982:	d2f6      	bcs.n	8006972 <vListInsert+0x28>
 8006984:	68fb      	ldr	r3, [r7, #12]
 8006986:	685a      	ldr	r2, [r3, #4]
 8006988:	683b      	ldr	r3, [r7, #0]
 800698a:	605a      	str	r2, [r3, #4]
 800698c:	683b      	ldr	r3, [r7, #0]
 800698e:	685b      	ldr	r3, [r3, #4]
 8006990:	683a      	ldr	r2, [r7, #0]
 8006992:	609a      	str	r2, [r3, #8]
 8006994:	683b      	ldr	r3, [r7, #0]
 8006996:	68fa      	ldr	r2, [r7, #12]
 8006998:	609a      	str	r2, [r3, #8]
 800699a:	68fb      	ldr	r3, [r7, #12]
 800699c:	683a      	ldr	r2, [r7, #0]
 800699e:	605a      	str	r2, [r3, #4]
 80069a0:	683b      	ldr	r3, [r7, #0]
 80069a2:	687a      	ldr	r2, [r7, #4]
 80069a4:	611a      	str	r2, [r3, #16]
 80069a6:	687b      	ldr	r3, [r7, #4]
 80069a8:	681b      	ldr	r3, [r3, #0]
 80069aa:	1c5a      	adds	r2, r3, #1
 80069ac:	687b      	ldr	r3, [r7, #4]
 80069ae:	601a      	str	r2, [r3, #0]
 80069b0:	bf00      	nop
 80069b2:	3714      	adds	r7, #20
 80069b4:	46bd      	mov	sp, r7
 80069b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069ba:	4770      	bx	lr

080069bc <uxListRemove>:
 80069bc:	b480      	push	{r7}
 80069be:	b085      	sub	sp, #20
 80069c0:	af00      	add	r7, sp, #0
 80069c2:	6078      	str	r0, [r7, #4]
 80069c4:	687b      	ldr	r3, [r7, #4]
 80069c6:	691b      	ldr	r3, [r3, #16]
 80069c8:	60fb      	str	r3, [r7, #12]
 80069ca:	687b      	ldr	r3, [r7, #4]
 80069cc:	685b      	ldr	r3, [r3, #4]
 80069ce:	687a      	ldr	r2, [r7, #4]
 80069d0:	6892      	ldr	r2, [r2, #8]
 80069d2:	609a      	str	r2, [r3, #8]
 80069d4:	687b      	ldr	r3, [r7, #4]
 80069d6:	689b      	ldr	r3, [r3, #8]
 80069d8:	687a      	ldr	r2, [r7, #4]
 80069da:	6852      	ldr	r2, [r2, #4]
 80069dc:	605a      	str	r2, [r3, #4]
 80069de:	68fb      	ldr	r3, [r7, #12]
 80069e0:	685b      	ldr	r3, [r3, #4]
 80069e2:	687a      	ldr	r2, [r7, #4]
 80069e4:	429a      	cmp	r2, r3
 80069e6:	d103      	bne.n	80069f0 <uxListRemove+0x34>
 80069e8:	687b      	ldr	r3, [r7, #4]
 80069ea:	689a      	ldr	r2, [r3, #8]
 80069ec:	68fb      	ldr	r3, [r7, #12]
 80069ee:	605a      	str	r2, [r3, #4]
 80069f0:	687b      	ldr	r3, [r7, #4]
 80069f2:	2200      	movs	r2, #0
 80069f4:	611a      	str	r2, [r3, #16]
 80069f6:	68fb      	ldr	r3, [r7, #12]
 80069f8:	681b      	ldr	r3, [r3, #0]
 80069fa:	1e5a      	subs	r2, r3, #1
 80069fc:	68fb      	ldr	r3, [r7, #12]
 80069fe:	601a      	str	r2, [r3, #0]
 8006a00:	68fb      	ldr	r3, [r7, #12]
 8006a02:	681b      	ldr	r3, [r3, #0]
 8006a04:	4618      	mov	r0, r3
 8006a06:	3714      	adds	r7, #20
 8006a08:	46bd      	mov	sp, r7
 8006a0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a0e:	4770      	bx	lr

08006a10 <xQueueGenericReset>:
 8006a10:	b580      	push	{r7, lr}
 8006a12:	b084      	sub	sp, #16
 8006a14:	af00      	add	r7, sp, #0
 8006a16:	6078      	str	r0, [r7, #4]
 8006a18:	6039      	str	r1, [r7, #0]
 8006a1a:	687b      	ldr	r3, [r7, #4]
 8006a1c:	60fb      	str	r3, [r7, #12]
 8006a1e:	68fb      	ldr	r3, [r7, #12]
 8006a20:	2b00      	cmp	r3, #0
 8006a22:	d10a      	bne.n	8006a3a <xQueueGenericReset+0x2a>
 8006a24:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006a28:	f383 8811 	msr	BASEPRI, r3
 8006a2c:	f3bf 8f6f 	isb	sy
 8006a30:	f3bf 8f4f 	dsb	sy
 8006a34:	60bb      	str	r3, [r7, #8]
 8006a36:	bf00      	nop
 8006a38:	e7fe      	b.n	8006a38 <xQueueGenericReset+0x28>
 8006a3a:	f002 f9eb 	bl	8008e14 <vPortEnterCritical>
 8006a3e:	68fb      	ldr	r3, [r7, #12]
 8006a40:	681a      	ldr	r2, [r3, #0]
 8006a42:	68fb      	ldr	r3, [r7, #12]
 8006a44:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006a46:	68f9      	ldr	r1, [r7, #12]
 8006a48:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8006a4a:	fb01 f303 	mul.w	r3, r1, r3
 8006a4e:	441a      	add	r2, r3
 8006a50:	68fb      	ldr	r3, [r7, #12]
 8006a52:	609a      	str	r2, [r3, #8]
 8006a54:	68fb      	ldr	r3, [r7, #12]
 8006a56:	2200      	movs	r2, #0
 8006a58:	639a      	str	r2, [r3, #56]	; 0x38
 8006a5a:	68fb      	ldr	r3, [r7, #12]
 8006a5c:	681a      	ldr	r2, [r3, #0]
 8006a5e:	68fb      	ldr	r3, [r7, #12]
 8006a60:	605a      	str	r2, [r3, #4]
 8006a62:	68fb      	ldr	r3, [r7, #12]
 8006a64:	681a      	ldr	r2, [r3, #0]
 8006a66:	68fb      	ldr	r3, [r7, #12]
 8006a68:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006a6a:	3b01      	subs	r3, #1
 8006a6c:	68f9      	ldr	r1, [r7, #12]
 8006a6e:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8006a70:	fb01 f303 	mul.w	r3, r1, r3
 8006a74:	441a      	add	r2, r3
 8006a76:	68fb      	ldr	r3, [r7, #12]
 8006a78:	60da      	str	r2, [r3, #12]
 8006a7a:	68fb      	ldr	r3, [r7, #12]
 8006a7c:	22ff      	movs	r2, #255	; 0xff
 8006a7e:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8006a82:	68fb      	ldr	r3, [r7, #12]
 8006a84:	22ff      	movs	r2, #255	; 0xff
 8006a86:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8006a8a:	683b      	ldr	r3, [r7, #0]
 8006a8c:	2b00      	cmp	r3, #0
 8006a8e:	d114      	bne.n	8006aba <xQueueGenericReset+0xaa>
 8006a90:	68fb      	ldr	r3, [r7, #12]
 8006a92:	691b      	ldr	r3, [r3, #16]
 8006a94:	2b00      	cmp	r3, #0
 8006a96:	d01a      	beq.n	8006ace <xQueueGenericReset+0xbe>
 8006a98:	68fb      	ldr	r3, [r7, #12]
 8006a9a:	3310      	adds	r3, #16
 8006a9c:	4618      	mov	r0, r3
 8006a9e:	f001 f9e3 	bl	8007e68 <xTaskRemoveFromEventList>
 8006aa2:	4603      	mov	r3, r0
 8006aa4:	2b00      	cmp	r3, #0
 8006aa6:	d012      	beq.n	8006ace <xQueueGenericReset+0xbe>
 8006aa8:	4b0c      	ldr	r3, [pc, #48]	; (8006adc <xQueueGenericReset+0xcc>)
 8006aaa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006aae:	601a      	str	r2, [r3, #0]
 8006ab0:	f3bf 8f4f 	dsb	sy
 8006ab4:	f3bf 8f6f 	isb	sy
 8006ab8:	e009      	b.n	8006ace <xQueueGenericReset+0xbe>
 8006aba:	68fb      	ldr	r3, [r7, #12]
 8006abc:	3310      	adds	r3, #16
 8006abe:	4618      	mov	r0, r3
 8006ac0:	f7ff fef2 	bl	80068a8 <vListInitialise>
 8006ac4:	68fb      	ldr	r3, [r7, #12]
 8006ac6:	3324      	adds	r3, #36	; 0x24
 8006ac8:	4618      	mov	r0, r3
 8006aca:	f7ff feed 	bl	80068a8 <vListInitialise>
 8006ace:	f002 f9d1 	bl	8008e74 <vPortExitCritical>
 8006ad2:	2301      	movs	r3, #1
 8006ad4:	4618      	mov	r0, r3
 8006ad6:	3710      	adds	r7, #16
 8006ad8:	46bd      	mov	sp, r7
 8006ada:	bd80      	pop	{r7, pc}
 8006adc:	e000ed04 	.word	0xe000ed04

08006ae0 <xQueueGenericCreateStatic>:
 8006ae0:	b580      	push	{r7, lr}
 8006ae2:	b08e      	sub	sp, #56	; 0x38
 8006ae4:	af02      	add	r7, sp, #8
 8006ae6:	60f8      	str	r0, [r7, #12]
 8006ae8:	60b9      	str	r1, [r7, #8]
 8006aea:	607a      	str	r2, [r7, #4]
 8006aec:	603b      	str	r3, [r7, #0]
 8006aee:	68fb      	ldr	r3, [r7, #12]
 8006af0:	2b00      	cmp	r3, #0
 8006af2:	d10a      	bne.n	8006b0a <xQueueGenericCreateStatic+0x2a>
 8006af4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006af8:	f383 8811 	msr	BASEPRI, r3
 8006afc:	f3bf 8f6f 	isb	sy
 8006b00:	f3bf 8f4f 	dsb	sy
 8006b04:	62bb      	str	r3, [r7, #40]	; 0x28
 8006b06:	bf00      	nop
 8006b08:	e7fe      	b.n	8006b08 <xQueueGenericCreateStatic+0x28>
 8006b0a:	683b      	ldr	r3, [r7, #0]
 8006b0c:	2b00      	cmp	r3, #0
 8006b0e:	d10a      	bne.n	8006b26 <xQueueGenericCreateStatic+0x46>
 8006b10:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006b14:	f383 8811 	msr	BASEPRI, r3
 8006b18:	f3bf 8f6f 	isb	sy
 8006b1c:	f3bf 8f4f 	dsb	sy
 8006b20:	627b      	str	r3, [r7, #36]	; 0x24
 8006b22:	bf00      	nop
 8006b24:	e7fe      	b.n	8006b24 <xQueueGenericCreateStatic+0x44>
 8006b26:	687b      	ldr	r3, [r7, #4]
 8006b28:	2b00      	cmp	r3, #0
 8006b2a:	d002      	beq.n	8006b32 <xQueueGenericCreateStatic+0x52>
 8006b2c:	68bb      	ldr	r3, [r7, #8]
 8006b2e:	2b00      	cmp	r3, #0
 8006b30:	d001      	beq.n	8006b36 <xQueueGenericCreateStatic+0x56>
 8006b32:	2301      	movs	r3, #1
 8006b34:	e000      	b.n	8006b38 <xQueueGenericCreateStatic+0x58>
 8006b36:	2300      	movs	r3, #0
 8006b38:	2b00      	cmp	r3, #0
 8006b3a:	d10a      	bne.n	8006b52 <xQueueGenericCreateStatic+0x72>
 8006b3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006b40:	f383 8811 	msr	BASEPRI, r3
 8006b44:	f3bf 8f6f 	isb	sy
 8006b48:	f3bf 8f4f 	dsb	sy
 8006b4c:	623b      	str	r3, [r7, #32]
 8006b4e:	bf00      	nop
 8006b50:	e7fe      	b.n	8006b50 <xQueueGenericCreateStatic+0x70>
 8006b52:	687b      	ldr	r3, [r7, #4]
 8006b54:	2b00      	cmp	r3, #0
 8006b56:	d102      	bne.n	8006b5e <xQueueGenericCreateStatic+0x7e>
 8006b58:	68bb      	ldr	r3, [r7, #8]
 8006b5a:	2b00      	cmp	r3, #0
 8006b5c:	d101      	bne.n	8006b62 <xQueueGenericCreateStatic+0x82>
 8006b5e:	2301      	movs	r3, #1
 8006b60:	e000      	b.n	8006b64 <xQueueGenericCreateStatic+0x84>
 8006b62:	2300      	movs	r3, #0
 8006b64:	2b00      	cmp	r3, #0
 8006b66:	d10a      	bne.n	8006b7e <xQueueGenericCreateStatic+0x9e>
 8006b68:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006b6c:	f383 8811 	msr	BASEPRI, r3
 8006b70:	f3bf 8f6f 	isb	sy
 8006b74:	f3bf 8f4f 	dsb	sy
 8006b78:	61fb      	str	r3, [r7, #28]
 8006b7a:	bf00      	nop
 8006b7c:	e7fe      	b.n	8006b7c <xQueueGenericCreateStatic+0x9c>
 8006b7e:	2350      	movs	r3, #80	; 0x50
 8006b80:	617b      	str	r3, [r7, #20]
 8006b82:	697b      	ldr	r3, [r7, #20]
 8006b84:	2b50      	cmp	r3, #80	; 0x50
 8006b86:	d00a      	beq.n	8006b9e <xQueueGenericCreateStatic+0xbe>
 8006b88:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006b8c:	f383 8811 	msr	BASEPRI, r3
 8006b90:	f3bf 8f6f 	isb	sy
 8006b94:	f3bf 8f4f 	dsb	sy
 8006b98:	61bb      	str	r3, [r7, #24]
 8006b9a:	bf00      	nop
 8006b9c:	e7fe      	b.n	8006b9c <xQueueGenericCreateStatic+0xbc>
 8006b9e:	697b      	ldr	r3, [r7, #20]
 8006ba0:	683b      	ldr	r3, [r7, #0]
 8006ba2:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006ba4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006ba6:	2b00      	cmp	r3, #0
 8006ba8:	d00d      	beq.n	8006bc6 <xQueueGenericCreateStatic+0xe6>
 8006baa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006bac:	2201      	movs	r2, #1
 8006bae:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8006bb2:	f897 2038 	ldrb.w	r2, [r7, #56]	; 0x38
 8006bb6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006bb8:	9300      	str	r3, [sp, #0]
 8006bba:	4613      	mov	r3, r2
 8006bbc:	687a      	ldr	r2, [r7, #4]
 8006bbe:	68b9      	ldr	r1, [r7, #8]
 8006bc0:	68f8      	ldr	r0, [r7, #12]
 8006bc2:	f000 f83f 	bl	8006c44 <prvInitialiseNewQueue>
 8006bc6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006bc8:	4618      	mov	r0, r3
 8006bca:	3730      	adds	r7, #48	; 0x30
 8006bcc:	46bd      	mov	sp, r7
 8006bce:	bd80      	pop	{r7, pc}

08006bd0 <xQueueGenericCreate>:
 8006bd0:	b580      	push	{r7, lr}
 8006bd2:	b08a      	sub	sp, #40	; 0x28
 8006bd4:	af02      	add	r7, sp, #8
 8006bd6:	60f8      	str	r0, [r7, #12]
 8006bd8:	60b9      	str	r1, [r7, #8]
 8006bda:	4613      	mov	r3, r2
 8006bdc:	71fb      	strb	r3, [r7, #7]
 8006bde:	68fb      	ldr	r3, [r7, #12]
 8006be0:	2b00      	cmp	r3, #0
 8006be2:	d10a      	bne.n	8006bfa <xQueueGenericCreate+0x2a>
 8006be4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006be8:	f383 8811 	msr	BASEPRI, r3
 8006bec:	f3bf 8f6f 	isb	sy
 8006bf0:	f3bf 8f4f 	dsb	sy
 8006bf4:	613b      	str	r3, [r7, #16]
 8006bf6:	bf00      	nop
 8006bf8:	e7fe      	b.n	8006bf8 <xQueueGenericCreate+0x28>
 8006bfa:	68fb      	ldr	r3, [r7, #12]
 8006bfc:	68ba      	ldr	r2, [r7, #8]
 8006bfe:	fb02 f303 	mul.w	r3, r2, r3
 8006c02:	61fb      	str	r3, [r7, #28]
 8006c04:	69fb      	ldr	r3, [r7, #28]
 8006c06:	3350      	adds	r3, #80	; 0x50
 8006c08:	4618      	mov	r0, r3
 8006c0a:	f002 fa25 	bl	8009058 <pvPortMalloc>
 8006c0e:	61b8      	str	r0, [r7, #24]
 8006c10:	69bb      	ldr	r3, [r7, #24]
 8006c12:	2b00      	cmp	r3, #0
 8006c14:	d011      	beq.n	8006c3a <xQueueGenericCreate+0x6a>
 8006c16:	69bb      	ldr	r3, [r7, #24]
 8006c18:	617b      	str	r3, [r7, #20]
 8006c1a:	697b      	ldr	r3, [r7, #20]
 8006c1c:	3350      	adds	r3, #80	; 0x50
 8006c1e:	617b      	str	r3, [r7, #20]
 8006c20:	69bb      	ldr	r3, [r7, #24]
 8006c22:	2200      	movs	r2, #0
 8006c24:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8006c28:	79fa      	ldrb	r2, [r7, #7]
 8006c2a:	69bb      	ldr	r3, [r7, #24]
 8006c2c:	9300      	str	r3, [sp, #0]
 8006c2e:	4613      	mov	r3, r2
 8006c30:	697a      	ldr	r2, [r7, #20]
 8006c32:	68b9      	ldr	r1, [r7, #8]
 8006c34:	68f8      	ldr	r0, [r7, #12]
 8006c36:	f000 f805 	bl	8006c44 <prvInitialiseNewQueue>
 8006c3a:	69bb      	ldr	r3, [r7, #24]
 8006c3c:	4618      	mov	r0, r3
 8006c3e:	3720      	adds	r7, #32
 8006c40:	46bd      	mov	sp, r7
 8006c42:	bd80      	pop	{r7, pc}

08006c44 <prvInitialiseNewQueue>:
 8006c44:	b580      	push	{r7, lr}
 8006c46:	b084      	sub	sp, #16
 8006c48:	af00      	add	r7, sp, #0
 8006c4a:	60f8      	str	r0, [r7, #12]
 8006c4c:	60b9      	str	r1, [r7, #8]
 8006c4e:	607a      	str	r2, [r7, #4]
 8006c50:	70fb      	strb	r3, [r7, #3]
 8006c52:	68bb      	ldr	r3, [r7, #8]
 8006c54:	2b00      	cmp	r3, #0
 8006c56:	d103      	bne.n	8006c60 <prvInitialiseNewQueue+0x1c>
 8006c58:	69bb      	ldr	r3, [r7, #24]
 8006c5a:	69ba      	ldr	r2, [r7, #24]
 8006c5c:	601a      	str	r2, [r3, #0]
 8006c5e:	e002      	b.n	8006c66 <prvInitialiseNewQueue+0x22>
 8006c60:	69bb      	ldr	r3, [r7, #24]
 8006c62:	687a      	ldr	r2, [r7, #4]
 8006c64:	601a      	str	r2, [r3, #0]
 8006c66:	69bb      	ldr	r3, [r7, #24]
 8006c68:	68fa      	ldr	r2, [r7, #12]
 8006c6a:	63da      	str	r2, [r3, #60]	; 0x3c
 8006c6c:	69bb      	ldr	r3, [r7, #24]
 8006c6e:	68ba      	ldr	r2, [r7, #8]
 8006c70:	641a      	str	r2, [r3, #64]	; 0x40
 8006c72:	2101      	movs	r1, #1
 8006c74:	69b8      	ldr	r0, [r7, #24]
 8006c76:	f7ff fecb 	bl	8006a10 <xQueueGenericReset>
 8006c7a:	69bb      	ldr	r3, [r7, #24]
 8006c7c:	78fa      	ldrb	r2, [r7, #3]
 8006c7e:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
 8006c82:	bf00      	nop
 8006c84:	3710      	adds	r7, #16
 8006c86:	46bd      	mov	sp, r7
 8006c88:	bd80      	pop	{r7, pc}
	...

08006c8c <xQueueGenericSend>:
 8006c8c:	b580      	push	{r7, lr}
 8006c8e:	b08e      	sub	sp, #56	; 0x38
 8006c90:	af00      	add	r7, sp, #0
 8006c92:	60f8      	str	r0, [r7, #12]
 8006c94:	60b9      	str	r1, [r7, #8]
 8006c96:	607a      	str	r2, [r7, #4]
 8006c98:	603b      	str	r3, [r7, #0]
 8006c9a:	2300      	movs	r3, #0
 8006c9c:	637b      	str	r3, [r7, #52]	; 0x34
 8006c9e:	68fb      	ldr	r3, [r7, #12]
 8006ca0:	633b      	str	r3, [r7, #48]	; 0x30
 8006ca2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006ca4:	2b00      	cmp	r3, #0
 8006ca6:	d10a      	bne.n	8006cbe <xQueueGenericSend+0x32>
 8006ca8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006cac:	f383 8811 	msr	BASEPRI, r3
 8006cb0:	f3bf 8f6f 	isb	sy
 8006cb4:	f3bf 8f4f 	dsb	sy
 8006cb8:	62bb      	str	r3, [r7, #40]	; 0x28
 8006cba:	bf00      	nop
 8006cbc:	e7fe      	b.n	8006cbc <xQueueGenericSend+0x30>
 8006cbe:	68bb      	ldr	r3, [r7, #8]
 8006cc0:	2b00      	cmp	r3, #0
 8006cc2:	d103      	bne.n	8006ccc <xQueueGenericSend+0x40>
 8006cc4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006cc6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006cc8:	2b00      	cmp	r3, #0
 8006cca:	d101      	bne.n	8006cd0 <xQueueGenericSend+0x44>
 8006ccc:	2301      	movs	r3, #1
 8006cce:	e000      	b.n	8006cd2 <xQueueGenericSend+0x46>
 8006cd0:	2300      	movs	r3, #0
 8006cd2:	2b00      	cmp	r3, #0
 8006cd4:	d10a      	bne.n	8006cec <xQueueGenericSend+0x60>
 8006cd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006cda:	f383 8811 	msr	BASEPRI, r3
 8006cde:	f3bf 8f6f 	isb	sy
 8006ce2:	f3bf 8f4f 	dsb	sy
 8006ce6:	627b      	str	r3, [r7, #36]	; 0x24
 8006ce8:	bf00      	nop
 8006cea:	e7fe      	b.n	8006cea <xQueueGenericSend+0x5e>
 8006cec:	683b      	ldr	r3, [r7, #0]
 8006cee:	2b02      	cmp	r3, #2
 8006cf0:	d103      	bne.n	8006cfa <xQueueGenericSend+0x6e>
 8006cf2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006cf4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006cf6:	2b01      	cmp	r3, #1
 8006cf8:	d101      	bne.n	8006cfe <xQueueGenericSend+0x72>
 8006cfa:	2301      	movs	r3, #1
 8006cfc:	e000      	b.n	8006d00 <xQueueGenericSend+0x74>
 8006cfe:	2300      	movs	r3, #0
 8006d00:	2b00      	cmp	r3, #0
 8006d02:	d10a      	bne.n	8006d1a <xQueueGenericSend+0x8e>
 8006d04:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006d08:	f383 8811 	msr	BASEPRI, r3
 8006d0c:	f3bf 8f6f 	isb	sy
 8006d10:	f3bf 8f4f 	dsb	sy
 8006d14:	623b      	str	r3, [r7, #32]
 8006d16:	bf00      	nop
 8006d18:	e7fe      	b.n	8006d18 <xQueueGenericSend+0x8c>
 8006d1a:	f001 fa67 	bl	80081ec <xTaskGetSchedulerState>
 8006d1e:	4603      	mov	r3, r0
 8006d20:	2b00      	cmp	r3, #0
 8006d22:	d102      	bne.n	8006d2a <xQueueGenericSend+0x9e>
 8006d24:	687b      	ldr	r3, [r7, #4]
 8006d26:	2b00      	cmp	r3, #0
 8006d28:	d101      	bne.n	8006d2e <xQueueGenericSend+0xa2>
 8006d2a:	2301      	movs	r3, #1
 8006d2c:	e000      	b.n	8006d30 <xQueueGenericSend+0xa4>
 8006d2e:	2300      	movs	r3, #0
 8006d30:	2b00      	cmp	r3, #0
 8006d32:	d10a      	bne.n	8006d4a <xQueueGenericSend+0xbe>
 8006d34:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006d38:	f383 8811 	msr	BASEPRI, r3
 8006d3c:	f3bf 8f6f 	isb	sy
 8006d40:	f3bf 8f4f 	dsb	sy
 8006d44:	61fb      	str	r3, [r7, #28]
 8006d46:	bf00      	nop
 8006d48:	e7fe      	b.n	8006d48 <xQueueGenericSend+0xbc>
 8006d4a:	f002 f863 	bl	8008e14 <vPortEnterCritical>
 8006d4e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006d50:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8006d52:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006d54:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006d56:	429a      	cmp	r2, r3
 8006d58:	d302      	bcc.n	8006d60 <xQueueGenericSend+0xd4>
 8006d5a:	683b      	ldr	r3, [r7, #0]
 8006d5c:	2b02      	cmp	r3, #2
 8006d5e:	d129      	bne.n	8006db4 <xQueueGenericSend+0x128>
 8006d60:	683a      	ldr	r2, [r7, #0]
 8006d62:	68b9      	ldr	r1, [r7, #8]
 8006d64:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8006d66:	f000 fa8b 	bl	8007280 <prvCopyDataToQueue>
 8006d6a:	62f8      	str	r0, [r7, #44]	; 0x2c
 8006d6c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006d6e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006d70:	2b00      	cmp	r3, #0
 8006d72:	d010      	beq.n	8006d96 <xQueueGenericSend+0x10a>
 8006d74:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006d76:	3324      	adds	r3, #36	; 0x24
 8006d78:	4618      	mov	r0, r3
 8006d7a:	f001 f875 	bl	8007e68 <xTaskRemoveFromEventList>
 8006d7e:	4603      	mov	r3, r0
 8006d80:	2b00      	cmp	r3, #0
 8006d82:	d013      	beq.n	8006dac <xQueueGenericSend+0x120>
 8006d84:	4b3f      	ldr	r3, [pc, #252]	; (8006e84 <xQueueGenericSend+0x1f8>)
 8006d86:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006d8a:	601a      	str	r2, [r3, #0]
 8006d8c:	f3bf 8f4f 	dsb	sy
 8006d90:	f3bf 8f6f 	isb	sy
 8006d94:	e00a      	b.n	8006dac <xQueueGenericSend+0x120>
 8006d96:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006d98:	2b00      	cmp	r3, #0
 8006d9a:	d007      	beq.n	8006dac <xQueueGenericSend+0x120>
 8006d9c:	4b39      	ldr	r3, [pc, #228]	; (8006e84 <xQueueGenericSend+0x1f8>)
 8006d9e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006da2:	601a      	str	r2, [r3, #0]
 8006da4:	f3bf 8f4f 	dsb	sy
 8006da8:	f3bf 8f6f 	isb	sy
 8006dac:	f002 f862 	bl	8008e74 <vPortExitCritical>
 8006db0:	2301      	movs	r3, #1
 8006db2:	e063      	b.n	8006e7c <xQueueGenericSend+0x1f0>
 8006db4:	687b      	ldr	r3, [r7, #4]
 8006db6:	2b00      	cmp	r3, #0
 8006db8:	d103      	bne.n	8006dc2 <xQueueGenericSend+0x136>
 8006dba:	f002 f85b 	bl	8008e74 <vPortExitCritical>
 8006dbe:	2300      	movs	r3, #0
 8006dc0:	e05c      	b.n	8006e7c <xQueueGenericSend+0x1f0>
 8006dc2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006dc4:	2b00      	cmp	r3, #0
 8006dc6:	d106      	bne.n	8006dd6 <xQueueGenericSend+0x14a>
 8006dc8:	f107 0314 	add.w	r3, r7, #20
 8006dcc:	4618      	mov	r0, r3
 8006dce:	f001 f8af 	bl	8007f30 <vTaskInternalSetTimeOutState>
 8006dd2:	2301      	movs	r3, #1
 8006dd4:	637b      	str	r3, [r7, #52]	; 0x34
 8006dd6:	f002 f84d 	bl	8008e74 <vPortExitCritical>
 8006dda:	f000 fe1b 	bl	8007a14 <vTaskSuspendAll>
 8006dde:	f002 f819 	bl	8008e14 <vPortEnterCritical>
 8006de2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006de4:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8006de8:	b25b      	sxtb	r3, r3
 8006dea:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006dee:	d103      	bne.n	8006df8 <xQueueGenericSend+0x16c>
 8006df0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006df2:	2200      	movs	r2, #0
 8006df4:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8006df8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006dfa:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8006dfe:	b25b      	sxtb	r3, r3
 8006e00:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006e04:	d103      	bne.n	8006e0e <xQueueGenericSend+0x182>
 8006e06:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006e08:	2200      	movs	r2, #0
 8006e0a:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8006e0e:	f002 f831 	bl	8008e74 <vPortExitCritical>
 8006e12:	1d3a      	adds	r2, r7, #4
 8006e14:	f107 0314 	add.w	r3, r7, #20
 8006e18:	4611      	mov	r1, r2
 8006e1a:	4618      	mov	r0, r3
 8006e1c:	f001 f89e 	bl	8007f5c <xTaskCheckForTimeOut>
 8006e20:	4603      	mov	r3, r0
 8006e22:	2b00      	cmp	r3, #0
 8006e24:	d124      	bne.n	8006e70 <xQueueGenericSend+0x1e4>
 8006e26:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8006e28:	f000 fb22 	bl	8007470 <prvIsQueueFull>
 8006e2c:	4603      	mov	r3, r0
 8006e2e:	2b00      	cmp	r3, #0
 8006e30:	d018      	beq.n	8006e64 <xQueueGenericSend+0x1d8>
 8006e32:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006e34:	3310      	adds	r3, #16
 8006e36:	687a      	ldr	r2, [r7, #4]
 8006e38:	4611      	mov	r1, r2
 8006e3a:	4618      	mov	r0, r3
 8006e3c:	f000 ffc4 	bl	8007dc8 <vTaskPlaceOnEventList>
 8006e40:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8006e42:	f000 faad 	bl	80073a0 <prvUnlockQueue>
 8006e46:	f000 fdf3 	bl	8007a30 <xTaskResumeAll>
 8006e4a:	4603      	mov	r3, r0
 8006e4c:	2b00      	cmp	r3, #0
 8006e4e:	f47f af7c 	bne.w	8006d4a <xQueueGenericSend+0xbe>
 8006e52:	4b0c      	ldr	r3, [pc, #48]	; (8006e84 <xQueueGenericSend+0x1f8>)
 8006e54:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006e58:	601a      	str	r2, [r3, #0]
 8006e5a:	f3bf 8f4f 	dsb	sy
 8006e5e:	f3bf 8f6f 	isb	sy
 8006e62:	e772      	b.n	8006d4a <xQueueGenericSend+0xbe>
 8006e64:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8006e66:	f000 fa9b 	bl	80073a0 <prvUnlockQueue>
 8006e6a:	f000 fde1 	bl	8007a30 <xTaskResumeAll>
 8006e6e:	e76c      	b.n	8006d4a <xQueueGenericSend+0xbe>
 8006e70:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8006e72:	f000 fa95 	bl	80073a0 <prvUnlockQueue>
 8006e76:	f000 fddb 	bl	8007a30 <xTaskResumeAll>
 8006e7a:	2300      	movs	r3, #0
 8006e7c:	4618      	mov	r0, r3
 8006e7e:	3738      	adds	r7, #56	; 0x38
 8006e80:	46bd      	mov	sp, r7
 8006e82:	bd80      	pop	{r7, pc}
 8006e84:	e000ed04 	.word	0xe000ed04

08006e88 <xQueueGenericSendFromISR>:
 8006e88:	b580      	push	{r7, lr}
 8006e8a:	b090      	sub	sp, #64	; 0x40
 8006e8c:	af00      	add	r7, sp, #0
 8006e8e:	60f8      	str	r0, [r7, #12]
 8006e90:	60b9      	str	r1, [r7, #8]
 8006e92:	607a      	str	r2, [r7, #4]
 8006e94:	603b      	str	r3, [r7, #0]
 8006e96:	68fb      	ldr	r3, [r7, #12]
 8006e98:	63bb      	str	r3, [r7, #56]	; 0x38
 8006e9a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006e9c:	2b00      	cmp	r3, #0
 8006e9e:	d10a      	bne.n	8006eb6 <xQueueGenericSendFromISR+0x2e>
 8006ea0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006ea4:	f383 8811 	msr	BASEPRI, r3
 8006ea8:	f3bf 8f6f 	isb	sy
 8006eac:	f3bf 8f4f 	dsb	sy
 8006eb0:	62bb      	str	r3, [r7, #40]	; 0x28
 8006eb2:	bf00      	nop
 8006eb4:	e7fe      	b.n	8006eb4 <xQueueGenericSendFromISR+0x2c>
 8006eb6:	68bb      	ldr	r3, [r7, #8]
 8006eb8:	2b00      	cmp	r3, #0
 8006eba:	d103      	bne.n	8006ec4 <xQueueGenericSendFromISR+0x3c>
 8006ebc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006ebe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006ec0:	2b00      	cmp	r3, #0
 8006ec2:	d101      	bne.n	8006ec8 <xQueueGenericSendFromISR+0x40>
 8006ec4:	2301      	movs	r3, #1
 8006ec6:	e000      	b.n	8006eca <xQueueGenericSendFromISR+0x42>
 8006ec8:	2300      	movs	r3, #0
 8006eca:	2b00      	cmp	r3, #0
 8006ecc:	d10a      	bne.n	8006ee4 <xQueueGenericSendFromISR+0x5c>
 8006ece:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006ed2:	f383 8811 	msr	BASEPRI, r3
 8006ed6:	f3bf 8f6f 	isb	sy
 8006eda:	f3bf 8f4f 	dsb	sy
 8006ede:	627b      	str	r3, [r7, #36]	; 0x24
 8006ee0:	bf00      	nop
 8006ee2:	e7fe      	b.n	8006ee2 <xQueueGenericSendFromISR+0x5a>
 8006ee4:	683b      	ldr	r3, [r7, #0]
 8006ee6:	2b02      	cmp	r3, #2
 8006ee8:	d103      	bne.n	8006ef2 <xQueueGenericSendFromISR+0x6a>
 8006eea:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006eec:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006eee:	2b01      	cmp	r3, #1
 8006ef0:	d101      	bne.n	8006ef6 <xQueueGenericSendFromISR+0x6e>
 8006ef2:	2301      	movs	r3, #1
 8006ef4:	e000      	b.n	8006ef8 <xQueueGenericSendFromISR+0x70>
 8006ef6:	2300      	movs	r3, #0
 8006ef8:	2b00      	cmp	r3, #0
 8006efa:	d10a      	bne.n	8006f12 <xQueueGenericSendFromISR+0x8a>
 8006efc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006f00:	f383 8811 	msr	BASEPRI, r3
 8006f04:	f3bf 8f6f 	isb	sy
 8006f08:	f3bf 8f4f 	dsb	sy
 8006f0c:	623b      	str	r3, [r7, #32]
 8006f0e:	bf00      	nop
 8006f10:	e7fe      	b.n	8006f10 <xQueueGenericSendFromISR+0x88>
 8006f12:	f002 f861 	bl	8008fd8 <vPortValidateInterruptPriority>
 8006f16:	f3ef 8211 	mrs	r2, BASEPRI
 8006f1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006f1e:	f383 8811 	msr	BASEPRI, r3
 8006f22:	f3bf 8f6f 	isb	sy
 8006f26:	f3bf 8f4f 	dsb	sy
 8006f2a:	61fa      	str	r2, [r7, #28]
 8006f2c:	61bb      	str	r3, [r7, #24]
 8006f2e:	69fb      	ldr	r3, [r7, #28]
 8006f30:	637b      	str	r3, [r7, #52]	; 0x34
 8006f32:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006f34:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8006f36:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006f38:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006f3a:	429a      	cmp	r2, r3
 8006f3c:	d302      	bcc.n	8006f44 <xQueueGenericSendFromISR+0xbc>
 8006f3e:	683b      	ldr	r3, [r7, #0]
 8006f40:	2b02      	cmp	r3, #2
 8006f42:	d12f      	bne.n	8006fa4 <xQueueGenericSendFromISR+0x11c>
 8006f44:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006f46:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8006f4a:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8006f4e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006f50:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006f52:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006f54:	683a      	ldr	r2, [r7, #0]
 8006f56:	68b9      	ldr	r1, [r7, #8]
 8006f58:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 8006f5a:	f000 f991 	bl	8007280 <prvCopyDataToQueue>
 8006f5e:	f997 3033 	ldrsb.w	r3, [r7, #51]	; 0x33
 8006f62:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006f66:	d112      	bne.n	8006f8e <xQueueGenericSendFromISR+0x106>
 8006f68:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006f6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006f6c:	2b00      	cmp	r3, #0
 8006f6e:	d016      	beq.n	8006f9e <xQueueGenericSendFromISR+0x116>
 8006f70:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006f72:	3324      	adds	r3, #36	; 0x24
 8006f74:	4618      	mov	r0, r3
 8006f76:	f000 ff77 	bl	8007e68 <xTaskRemoveFromEventList>
 8006f7a:	4603      	mov	r3, r0
 8006f7c:	2b00      	cmp	r3, #0
 8006f7e:	d00e      	beq.n	8006f9e <xQueueGenericSendFromISR+0x116>
 8006f80:	687b      	ldr	r3, [r7, #4]
 8006f82:	2b00      	cmp	r3, #0
 8006f84:	d00b      	beq.n	8006f9e <xQueueGenericSendFromISR+0x116>
 8006f86:	687b      	ldr	r3, [r7, #4]
 8006f88:	2201      	movs	r2, #1
 8006f8a:	601a      	str	r2, [r3, #0]
 8006f8c:	e007      	b.n	8006f9e <xQueueGenericSendFromISR+0x116>
 8006f8e:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8006f92:	3301      	adds	r3, #1
 8006f94:	b2db      	uxtb	r3, r3
 8006f96:	b25a      	sxtb	r2, r3
 8006f98:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006f9a:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8006f9e:	2301      	movs	r3, #1
 8006fa0:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006fa2:	e001      	b.n	8006fa8 <xQueueGenericSendFromISR+0x120>
 8006fa4:	2300      	movs	r3, #0
 8006fa6:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006fa8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006faa:	617b      	str	r3, [r7, #20]
 8006fac:	697b      	ldr	r3, [r7, #20]
 8006fae:	f383 8811 	msr	BASEPRI, r3
 8006fb2:	bf00      	nop
 8006fb4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8006fb6:	4618      	mov	r0, r3
 8006fb8:	3740      	adds	r7, #64	; 0x40
 8006fba:	46bd      	mov	sp, r7
 8006fbc:	bd80      	pop	{r7, pc}
	...

08006fc0 <xQueueReceive>:
 8006fc0:	b580      	push	{r7, lr}
 8006fc2:	b08c      	sub	sp, #48	; 0x30
 8006fc4:	af00      	add	r7, sp, #0
 8006fc6:	60f8      	str	r0, [r7, #12]
 8006fc8:	60b9      	str	r1, [r7, #8]
 8006fca:	607a      	str	r2, [r7, #4]
 8006fcc:	2300      	movs	r3, #0
 8006fce:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006fd0:	68fb      	ldr	r3, [r7, #12]
 8006fd2:	62bb      	str	r3, [r7, #40]	; 0x28
 8006fd4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006fd6:	2b00      	cmp	r3, #0
 8006fd8:	d10a      	bne.n	8006ff0 <xQueueReceive+0x30>
 8006fda:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006fde:	f383 8811 	msr	BASEPRI, r3
 8006fe2:	f3bf 8f6f 	isb	sy
 8006fe6:	f3bf 8f4f 	dsb	sy
 8006fea:	623b      	str	r3, [r7, #32]
 8006fec:	bf00      	nop
 8006fee:	e7fe      	b.n	8006fee <xQueueReceive+0x2e>
 8006ff0:	68bb      	ldr	r3, [r7, #8]
 8006ff2:	2b00      	cmp	r3, #0
 8006ff4:	d103      	bne.n	8006ffe <xQueueReceive+0x3e>
 8006ff6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006ff8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006ffa:	2b00      	cmp	r3, #0
 8006ffc:	d101      	bne.n	8007002 <xQueueReceive+0x42>
 8006ffe:	2301      	movs	r3, #1
 8007000:	e000      	b.n	8007004 <xQueueReceive+0x44>
 8007002:	2300      	movs	r3, #0
 8007004:	2b00      	cmp	r3, #0
 8007006:	d10a      	bne.n	800701e <xQueueReceive+0x5e>
 8007008:	f04f 0350 	mov.w	r3, #80	; 0x50
 800700c:	f383 8811 	msr	BASEPRI, r3
 8007010:	f3bf 8f6f 	isb	sy
 8007014:	f3bf 8f4f 	dsb	sy
 8007018:	61fb      	str	r3, [r7, #28]
 800701a:	bf00      	nop
 800701c:	e7fe      	b.n	800701c <xQueueReceive+0x5c>
 800701e:	f001 f8e5 	bl	80081ec <xTaskGetSchedulerState>
 8007022:	4603      	mov	r3, r0
 8007024:	2b00      	cmp	r3, #0
 8007026:	d102      	bne.n	800702e <xQueueReceive+0x6e>
 8007028:	687b      	ldr	r3, [r7, #4]
 800702a:	2b00      	cmp	r3, #0
 800702c:	d101      	bne.n	8007032 <xQueueReceive+0x72>
 800702e:	2301      	movs	r3, #1
 8007030:	e000      	b.n	8007034 <xQueueReceive+0x74>
 8007032:	2300      	movs	r3, #0
 8007034:	2b00      	cmp	r3, #0
 8007036:	d10a      	bne.n	800704e <xQueueReceive+0x8e>
 8007038:	f04f 0350 	mov.w	r3, #80	; 0x50
 800703c:	f383 8811 	msr	BASEPRI, r3
 8007040:	f3bf 8f6f 	isb	sy
 8007044:	f3bf 8f4f 	dsb	sy
 8007048:	61bb      	str	r3, [r7, #24]
 800704a:	bf00      	nop
 800704c:	e7fe      	b.n	800704c <xQueueReceive+0x8c>
 800704e:	f001 fee1 	bl	8008e14 <vPortEnterCritical>
 8007052:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007054:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007056:	627b      	str	r3, [r7, #36]	; 0x24
 8007058:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800705a:	2b00      	cmp	r3, #0
 800705c:	d01f      	beq.n	800709e <xQueueReceive+0xde>
 800705e:	68b9      	ldr	r1, [r7, #8]
 8007060:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8007062:	f000 f977 	bl	8007354 <prvCopyDataFromQueue>
 8007066:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007068:	1e5a      	subs	r2, r3, #1
 800706a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800706c:	639a      	str	r2, [r3, #56]	; 0x38
 800706e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007070:	691b      	ldr	r3, [r3, #16]
 8007072:	2b00      	cmp	r3, #0
 8007074:	d00f      	beq.n	8007096 <xQueueReceive+0xd6>
 8007076:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007078:	3310      	adds	r3, #16
 800707a:	4618      	mov	r0, r3
 800707c:	f000 fef4 	bl	8007e68 <xTaskRemoveFromEventList>
 8007080:	4603      	mov	r3, r0
 8007082:	2b00      	cmp	r3, #0
 8007084:	d007      	beq.n	8007096 <xQueueReceive+0xd6>
 8007086:	4b3d      	ldr	r3, [pc, #244]	; (800717c <xQueueReceive+0x1bc>)
 8007088:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800708c:	601a      	str	r2, [r3, #0]
 800708e:	f3bf 8f4f 	dsb	sy
 8007092:	f3bf 8f6f 	isb	sy
 8007096:	f001 feed 	bl	8008e74 <vPortExitCritical>
 800709a:	2301      	movs	r3, #1
 800709c:	e069      	b.n	8007172 <xQueueReceive+0x1b2>
 800709e:	687b      	ldr	r3, [r7, #4]
 80070a0:	2b00      	cmp	r3, #0
 80070a2:	d103      	bne.n	80070ac <xQueueReceive+0xec>
 80070a4:	f001 fee6 	bl	8008e74 <vPortExitCritical>
 80070a8:	2300      	movs	r3, #0
 80070aa:	e062      	b.n	8007172 <xQueueReceive+0x1b2>
 80070ac:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80070ae:	2b00      	cmp	r3, #0
 80070b0:	d106      	bne.n	80070c0 <xQueueReceive+0x100>
 80070b2:	f107 0310 	add.w	r3, r7, #16
 80070b6:	4618      	mov	r0, r3
 80070b8:	f000 ff3a 	bl	8007f30 <vTaskInternalSetTimeOutState>
 80070bc:	2301      	movs	r3, #1
 80070be:	62fb      	str	r3, [r7, #44]	; 0x2c
 80070c0:	f001 fed8 	bl	8008e74 <vPortExitCritical>
 80070c4:	f000 fca6 	bl	8007a14 <vTaskSuspendAll>
 80070c8:	f001 fea4 	bl	8008e14 <vPortEnterCritical>
 80070cc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80070ce:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 80070d2:	b25b      	sxtb	r3, r3
 80070d4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80070d8:	d103      	bne.n	80070e2 <xQueueReceive+0x122>
 80070da:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80070dc:	2200      	movs	r2, #0
 80070de:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80070e2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80070e4:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 80070e8:	b25b      	sxtb	r3, r3
 80070ea:	f1b3 3fff 	cmp.w	r3, #4294967295
 80070ee:	d103      	bne.n	80070f8 <xQueueReceive+0x138>
 80070f0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80070f2:	2200      	movs	r2, #0
 80070f4:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80070f8:	f001 febc 	bl	8008e74 <vPortExitCritical>
 80070fc:	1d3a      	adds	r2, r7, #4
 80070fe:	f107 0310 	add.w	r3, r7, #16
 8007102:	4611      	mov	r1, r2
 8007104:	4618      	mov	r0, r3
 8007106:	f000 ff29 	bl	8007f5c <xTaskCheckForTimeOut>
 800710a:	4603      	mov	r3, r0
 800710c:	2b00      	cmp	r3, #0
 800710e:	d123      	bne.n	8007158 <xQueueReceive+0x198>
 8007110:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8007112:	f000 f997 	bl	8007444 <prvIsQueueEmpty>
 8007116:	4603      	mov	r3, r0
 8007118:	2b00      	cmp	r3, #0
 800711a:	d017      	beq.n	800714c <xQueueReceive+0x18c>
 800711c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800711e:	3324      	adds	r3, #36	; 0x24
 8007120:	687a      	ldr	r2, [r7, #4]
 8007122:	4611      	mov	r1, r2
 8007124:	4618      	mov	r0, r3
 8007126:	f000 fe4f 	bl	8007dc8 <vTaskPlaceOnEventList>
 800712a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800712c:	f000 f938 	bl	80073a0 <prvUnlockQueue>
 8007130:	f000 fc7e 	bl	8007a30 <xTaskResumeAll>
 8007134:	4603      	mov	r3, r0
 8007136:	2b00      	cmp	r3, #0
 8007138:	d189      	bne.n	800704e <xQueueReceive+0x8e>
 800713a:	4b10      	ldr	r3, [pc, #64]	; (800717c <xQueueReceive+0x1bc>)
 800713c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007140:	601a      	str	r2, [r3, #0]
 8007142:	f3bf 8f4f 	dsb	sy
 8007146:	f3bf 8f6f 	isb	sy
 800714a:	e780      	b.n	800704e <xQueueReceive+0x8e>
 800714c:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800714e:	f000 f927 	bl	80073a0 <prvUnlockQueue>
 8007152:	f000 fc6d 	bl	8007a30 <xTaskResumeAll>
 8007156:	e77a      	b.n	800704e <xQueueReceive+0x8e>
 8007158:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800715a:	f000 f921 	bl	80073a0 <prvUnlockQueue>
 800715e:	f000 fc67 	bl	8007a30 <xTaskResumeAll>
 8007162:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8007164:	f000 f96e 	bl	8007444 <prvIsQueueEmpty>
 8007168:	4603      	mov	r3, r0
 800716a:	2b00      	cmp	r3, #0
 800716c:	f43f af6f 	beq.w	800704e <xQueueReceive+0x8e>
 8007170:	2300      	movs	r3, #0
 8007172:	4618      	mov	r0, r3
 8007174:	3730      	adds	r7, #48	; 0x30
 8007176:	46bd      	mov	sp, r7
 8007178:	bd80      	pop	{r7, pc}
 800717a:	bf00      	nop
 800717c:	e000ed04 	.word	0xe000ed04

08007180 <xQueueReceiveFromISR>:
 8007180:	b580      	push	{r7, lr}
 8007182:	b08e      	sub	sp, #56	; 0x38
 8007184:	af00      	add	r7, sp, #0
 8007186:	60f8      	str	r0, [r7, #12]
 8007188:	60b9      	str	r1, [r7, #8]
 800718a:	607a      	str	r2, [r7, #4]
 800718c:	68fb      	ldr	r3, [r7, #12]
 800718e:	633b      	str	r3, [r7, #48]	; 0x30
 8007190:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007192:	2b00      	cmp	r3, #0
 8007194:	d10a      	bne.n	80071ac <xQueueReceiveFromISR+0x2c>
 8007196:	f04f 0350 	mov.w	r3, #80	; 0x50
 800719a:	f383 8811 	msr	BASEPRI, r3
 800719e:	f3bf 8f6f 	isb	sy
 80071a2:	f3bf 8f4f 	dsb	sy
 80071a6:	623b      	str	r3, [r7, #32]
 80071a8:	bf00      	nop
 80071aa:	e7fe      	b.n	80071aa <xQueueReceiveFromISR+0x2a>
 80071ac:	68bb      	ldr	r3, [r7, #8]
 80071ae:	2b00      	cmp	r3, #0
 80071b0:	d103      	bne.n	80071ba <xQueueReceiveFromISR+0x3a>
 80071b2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80071b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80071b6:	2b00      	cmp	r3, #0
 80071b8:	d101      	bne.n	80071be <xQueueReceiveFromISR+0x3e>
 80071ba:	2301      	movs	r3, #1
 80071bc:	e000      	b.n	80071c0 <xQueueReceiveFromISR+0x40>
 80071be:	2300      	movs	r3, #0
 80071c0:	2b00      	cmp	r3, #0
 80071c2:	d10a      	bne.n	80071da <xQueueReceiveFromISR+0x5a>
 80071c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80071c8:	f383 8811 	msr	BASEPRI, r3
 80071cc:	f3bf 8f6f 	isb	sy
 80071d0:	f3bf 8f4f 	dsb	sy
 80071d4:	61fb      	str	r3, [r7, #28]
 80071d6:	bf00      	nop
 80071d8:	e7fe      	b.n	80071d8 <xQueueReceiveFromISR+0x58>
 80071da:	f001 fefd 	bl	8008fd8 <vPortValidateInterruptPriority>
 80071de:	f3ef 8211 	mrs	r2, BASEPRI
 80071e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80071e6:	f383 8811 	msr	BASEPRI, r3
 80071ea:	f3bf 8f6f 	isb	sy
 80071ee:	f3bf 8f4f 	dsb	sy
 80071f2:	61ba      	str	r2, [r7, #24]
 80071f4:	617b      	str	r3, [r7, #20]
 80071f6:	69bb      	ldr	r3, [r7, #24]
 80071f8:	62fb      	str	r3, [r7, #44]	; 0x2c
 80071fa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80071fc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80071fe:	62bb      	str	r3, [r7, #40]	; 0x28
 8007200:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007202:	2b00      	cmp	r3, #0
 8007204:	d02f      	beq.n	8007266 <xQueueReceiveFromISR+0xe6>
 8007206:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007208:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800720c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8007210:	68b9      	ldr	r1, [r7, #8]
 8007212:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8007214:	f000 f89e 	bl	8007354 <prvCopyDataFromQueue>
 8007218:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800721a:	1e5a      	subs	r2, r3, #1
 800721c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800721e:	639a      	str	r2, [r3, #56]	; 0x38
 8007220:	f997 3027 	ldrsb.w	r3, [r7, #39]	; 0x27
 8007224:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007228:	d112      	bne.n	8007250 <xQueueReceiveFromISR+0xd0>
 800722a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800722c:	691b      	ldr	r3, [r3, #16]
 800722e:	2b00      	cmp	r3, #0
 8007230:	d016      	beq.n	8007260 <xQueueReceiveFromISR+0xe0>
 8007232:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007234:	3310      	adds	r3, #16
 8007236:	4618      	mov	r0, r3
 8007238:	f000 fe16 	bl	8007e68 <xTaskRemoveFromEventList>
 800723c:	4603      	mov	r3, r0
 800723e:	2b00      	cmp	r3, #0
 8007240:	d00e      	beq.n	8007260 <xQueueReceiveFromISR+0xe0>
 8007242:	687b      	ldr	r3, [r7, #4]
 8007244:	2b00      	cmp	r3, #0
 8007246:	d00b      	beq.n	8007260 <xQueueReceiveFromISR+0xe0>
 8007248:	687b      	ldr	r3, [r7, #4]
 800724a:	2201      	movs	r2, #1
 800724c:	601a      	str	r2, [r3, #0]
 800724e:	e007      	b.n	8007260 <xQueueReceiveFromISR+0xe0>
 8007250:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8007254:	3301      	adds	r3, #1
 8007256:	b2db      	uxtb	r3, r3
 8007258:	b25a      	sxtb	r2, r3
 800725a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800725c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8007260:	2301      	movs	r3, #1
 8007262:	637b      	str	r3, [r7, #52]	; 0x34
 8007264:	e001      	b.n	800726a <xQueueReceiveFromISR+0xea>
 8007266:	2300      	movs	r3, #0
 8007268:	637b      	str	r3, [r7, #52]	; 0x34
 800726a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800726c:	613b      	str	r3, [r7, #16]
 800726e:	693b      	ldr	r3, [r7, #16]
 8007270:	f383 8811 	msr	BASEPRI, r3
 8007274:	bf00      	nop
 8007276:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007278:	4618      	mov	r0, r3
 800727a:	3738      	adds	r7, #56	; 0x38
 800727c:	46bd      	mov	sp, r7
 800727e:	bd80      	pop	{r7, pc}

08007280 <prvCopyDataToQueue>:
 8007280:	b580      	push	{r7, lr}
 8007282:	b086      	sub	sp, #24
 8007284:	af00      	add	r7, sp, #0
 8007286:	60f8      	str	r0, [r7, #12]
 8007288:	60b9      	str	r1, [r7, #8]
 800728a:	607a      	str	r2, [r7, #4]
 800728c:	2300      	movs	r3, #0
 800728e:	617b      	str	r3, [r7, #20]
 8007290:	68fb      	ldr	r3, [r7, #12]
 8007292:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007294:	613b      	str	r3, [r7, #16]
 8007296:	68fb      	ldr	r3, [r7, #12]
 8007298:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800729a:	2b00      	cmp	r3, #0
 800729c:	d10d      	bne.n	80072ba <prvCopyDataToQueue+0x3a>
 800729e:	68fb      	ldr	r3, [r7, #12]
 80072a0:	681b      	ldr	r3, [r3, #0]
 80072a2:	2b00      	cmp	r3, #0
 80072a4:	d14d      	bne.n	8007342 <prvCopyDataToQueue+0xc2>
 80072a6:	68fb      	ldr	r3, [r7, #12]
 80072a8:	689b      	ldr	r3, [r3, #8]
 80072aa:	4618      	mov	r0, r3
 80072ac:	f000 ffbc 	bl	8008228 <xTaskPriorityDisinherit>
 80072b0:	6178      	str	r0, [r7, #20]
 80072b2:	68fb      	ldr	r3, [r7, #12]
 80072b4:	2200      	movs	r2, #0
 80072b6:	609a      	str	r2, [r3, #8]
 80072b8:	e043      	b.n	8007342 <prvCopyDataToQueue+0xc2>
 80072ba:	687b      	ldr	r3, [r7, #4]
 80072bc:	2b00      	cmp	r3, #0
 80072be:	d119      	bne.n	80072f4 <prvCopyDataToQueue+0x74>
 80072c0:	68fb      	ldr	r3, [r7, #12]
 80072c2:	6858      	ldr	r0, [r3, #4]
 80072c4:	68fb      	ldr	r3, [r7, #12]
 80072c6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80072c8:	461a      	mov	r2, r3
 80072ca:	68b9      	ldr	r1, [r7, #8]
 80072cc:	f002 fc9f 	bl	8009c0e <memcpy>
 80072d0:	68fb      	ldr	r3, [r7, #12]
 80072d2:	685a      	ldr	r2, [r3, #4]
 80072d4:	68fb      	ldr	r3, [r7, #12]
 80072d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80072d8:	441a      	add	r2, r3
 80072da:	68fb      	ldr	r3, [r7, #12]
 80072dc:	605a      	str	r2, [r3, #4]
 80072de:	68fb      	ldr	r3, [r7, #12]
 80072e0:	685a      	ldr	r2, [r3, #4]
 80072e2:	68fb      	ldr	r3, [r7, #12]
 80072e4:	689b      	ldr	r3, [r3, #8]
 80072e6:	429a      	cmp	r2, r3
 80072e8:	d32b      	bcc.n	8007342 <prvCopyDataToQueue+0xc2>
 80072ea:	68fb      	ldr	r3, [r7, #12]
 80072ec:	681a      	ldr	r2, [r3, #0]
 80072ee:	68fb      	ldr	r3, [r7, #12]
 80072f0:	605a      	str	r2, [r3, #4]
 80072f2:	e026      	b.n	8007342 <prvCopyDataToQueue+0xc2>
 80072f4:	68fb      	ldr	r3, [r7, #12]
 80072f6:	68d8      	ldr	r0, [r3, #12]
 80072f8:	68fb      	ldr	r3, [r7, #12]
 80072fa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80072fc:	461a      	mov	r2, r3
 80072fe:	68b9      	ldr	r1, [r7, #8]
 8007300:	f002 fc85 	bl	8009c0e <memcpy>
 8007304:	68fb      	ldr	r3, [r7, #12]
 8007306:	68da      	ldr	r2, [r3, #12]
 8007308:	68fb      	ldr	r3, [r7, #12]
 800730a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800730c:	425b      	negs	r3, r3
 800730e:	441a      	add	r2, r3
 8007310:	68fb      	ldr	r3, [r7, #12]
 8007312:	60da      	str	r2, [r3, #12]
 8007314:	68fb      	ldr	r3, [r7, #12]
 8007316:	68da      	ldr	r2, [r3, #12]
 8007318:	68fb      	ldr	r3, [r7, #12]
 800731a:	681b      	ldr	r3, [r3, #0]
 800731c:	429a      	cmp	r2, r3
 800731e:	d207      	bcs.n	8007330 <prvCopyDataToQueue+0xb0>
 8007320:	68fb      	ldr	r3, [r7, #12]
 8007322:	689a      	ldr	r2, [r3, #8]
 8007324:	68fb      	ldr	r3, [r7, #12]
 8007326:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007328:	425b      	negs	r3, r3
 800732a:	441a      	add	r2, r3
 800732c:	68fb      	ldr	r3, [r7, #12]
 800732e:	60da      	str	r2, [r3, #12]
 8007330:	687b      	ldr	r3, [r7, #4]
 8007332:	2b02      	cmp	r3, #2
 8007334:	d105      	bne.n	8007342 <prvCopyDataToQueue+0xc2>
 8007336:	693b      	ldr	r3, [r7, #16]
 8007338:	2b00      	cmp	r3, #0
 800733a:	d002      	beq.n	8007342 <prvCopyDataToQueue+0xc2>
 800733c:	693b      	ldr	r3, [r7, #16]
 800733e:	3b01      	subs	r3, #1
 8007340:	613b      	str	r3, [r7, #16]
 8007342:	693b      	ldr	r3, [r7, #16]
 8007344:	1c5a      	adds	r2, r3, #1
 8007346:	68fb      	ldr	r3, [r7, #12]
 8007348:	639a      	str	r2, [r3, #56]	; 0x38
 800734a:	697b      	ldr	r3, [r7, #20]
 800734c:	4618      	mov	r0, r3
 800734e:	3718      	adds	r7, #24
 8007350:	46bd      	mov	sp, r7
 8007352:	bd80      	pop	{r7, pc}

08007354 <prvCopyDataFromQueue>:
 8007354:	b580      	push	{r7, lr}
 8007356:	b082      	sub	sp, #8
 8007358:	af00      	add	r7, sp, #0
 800735a:	6078      	str	r0, [r7, #4]
 800735c:	6039      	str	r1, [r7, #0]
 800735e:	687b      	ldr	r3, [r7, #4]
 8007360:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007362:	2b00      	cmp	r3, #0
 8007364:	d018      	beq.n	8007398 <prvCopyDataFromQueue+0x44>
 8007366:	687b      	ldr	r3, [r7, #4]
 8007368:	68da      	ldr	r2, [r3, #12]
 800736a:	687b      	ldr	r3, [r7, #4]
 800736c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800736e:	441a      	add	r2, r3
 8007370:	687b      	ldr	r3, [r7, #4]
 8007372:	60da      	str	r2, [r3, #12]
 8007374:	687b      	ldr	r3, [r7, #4]
 8007376:	68da      	ldr	r2, [r3, #12]
 8007378:	687b      	ldr	r3, [r7, #4]
 800737a:	689b      	ldr	r3, [r3, #8]
 800737c:	429a      	cmp	r2, r3
 800737e:	d303      	bcc.n	8007388 <prvCopyDataFromQueue+0x34>
 8007380:	687b      	ldr	r3, [r7, #4]
 8007382:	681a      	ldr	r2, [r3, #0]
 8007384:	687b      	ldr	r3, [r7, #4]
 8007386:	60da      	str	r2, [r3, #12]
 8007388:	687b      	ldr	r3, [r7, #4]
 800738a:	68d9      	ldr	r1, [r3, #12]
 800738c:	687b      	ldr	r3, [r7, #4]
 800738e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007390:	461a      	mov	r2, r3
 8007392:	6838      	ldr	r0, [r7, #0]
 8007394:	f002 fc3b 	bl	8009c0e <memcpy>
 8007398:	bf00      	nop
 800739a:	3708      	adds	r7, #8
 800739c:	46bd      	mov	sp, r7
 800739e:	bd80      	pop	{r7, pc}

080073a0 <prvUnlockQueue>:
 80073a0:	b580      	push	{r7, lr}
 80073a2:	b084      	sub	sp, #16
 80073a4:	af00      	add	r7, sp, #0
 80073a6:	6078      	str	r0, [r7, #4]
 80073a8:	f001 fd34 	bl	8008e14 <vPortEnterCritical>
 80073ac:	687b      	ldr	r3, [r7, #4]
 80073ae:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 80073b2:	73fb      	strb	r3, [r7, #15]
 80073b4:	e011      	b.n	80073da <prvUnlockQueue+0x3a>
 80073b6:	687b      	ldr	r3, [r7, #4]
 80073b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80073ba:	2b00      	cmp	r3, #0
 80073bc:	d012      	beq.n	80073e4 <prvUnlockQueue+0x44>
 80073be:	687b      	ldr	r3, [r7, #4]
 80073c0:	3324      	adds	r3, #36	; 0x24
 80073c2:	4618      	mov	r0, r3
 80073c4:	f000 fd50 	bl	8007e68 <xTaskRemoveFromEventList>
 80073c8:	4603      	mov	r3, r0
 80073ca:	2b00      	cmp	r3, #0
 80073cc:	d001      	beq.n	80073d2 <prvUnlockQueue+0x32>
 80073ce:	f000 fe27 	bl	8008020 <vTaskMissedYield>
 80073d2:	7bfb      	ldrb	r3, [r7, #15]
 80073d4:	3b01      	subs	r3, #1
 80073d6:	b2db      	uxtb	r3, r3
 80073d8:	73fb      	strb	r3, [r7, #15]
 80073da:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80073de:	2b00      	cmp	r3, #0
 80073e0:	dce9      	bgt.n	80073b6 <prvUnlockQueue+0x16>
 80073e2:	e000      	b.n	80073e6 <prvUnlockQueue+0x46>
 80073e4:	bf00      	nop
 80073e6:	687b      	ldr	r3, [r7, #4]
 80073e8:	22ff      	movs	r2, #255	; 0xff
 80073ea:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80073ee:	f001 fd41 	bl	8008e74 <vPortExitCritical>
 80073f2:	f001 fd0f 	bl	8008e14 <vPortEnterCritical>
 80073f6:	687b      	ldr	r3, [r7, #4]
 80073f8:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 80073fc:	73bb      	strb	r3, [r7, #14]
 80073fe:	e011      	b.n	8007424 <prvUnlockQueue+0x84>
 8007400:	687b      	ldr	r3, [r7, #4]
 8007402:	691b      	ldr	r3, [r3, #16]
 8007404:	2b00      	cmp	r3, #0
 8007406:	d012      	beq.n	800742e <prvUnlockQueue+0x8e>
 8007408:	687b      	ldr	r3, [r7, #4]
 800740a:	3310      	adds	r3, #16
 800740c:	4618      	mov	r0, r3
 800740e:	f000 fd2b 	bl	8007e68 <xTaskRemoveFromEventList>
 8007412:	4603      	mov	r3, r0
 8007414:	2b00      	cmp	r3, #0
 8007416:	d001      	beq.n	800741c <prvUnlockQueue+0x7c>
 8007418:	f000 fe02 	bl	8008020 <vTaskMissedYield>
 800741c:	7bbb      	ldrb	r3, [r7, #14]
 800741e:	3b01      	subs	r3, #1
 8007420:	b2db      	uxtb	r3, r3
 8007422:	73bb      	strb	r3, [r7, #14]
 8007424:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8007428:	2b00      	cmp	r3, #0
 800742a:	dce9      	bgt.n	8007400 <prvUnlockQueue+0x60>
 800742c:	e000      	b.n	8007430 <prvUnlockQueue+0x90>
 800742e:	bf00      	nop
 8007430:	687b      	ldr	r3, [r7, #4]
 8007432:	22ff      	movs	r2, #255	; 0xff
 8007434:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8007438:	f001 fd1c 	bl	8008e74 <vPortExitCritical>
 800743c:	bf00      	nop
 800743e:	3710      	adds	r7, #16
 8007440:	46bd      	mov	sp, r7
 8007442:	bd80      	pop	{r7, pc}

08007444 <prvIsQueueEmpty>:
 8007444:	b580      	push	{r7, lr}
 8007446:	b084      	sub	sp, #16
 8007448:	af00      	add	r7, sp, #0
 800744a:	6078      	str	r0, [r7, #4]
 800744c:	f001 fce2 	bl	8008e14 <vPortEnterCritical>
 8007450:	687b      	ldr	r3, [r7, #4]
 8007452:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007454:	2b00      	cmp	r3, #0
 8007456:	d102      	bne.n	800745e <prvIsQueueEmpty+0x1a>
 8007458:	2301      	movs	r3, #1
 800745a:	60fb      	str	r3, [r7, #12]
 800745c:	e001      	b.n	8007462 <prvIsQueueEmpty+0x1e>
 800745e:	2300      	movs	r3, #0
 8007460:	60fb      	str	r3, [r7, #12]
 8007462:	f001 fd07 	bl	8008e74 <vPortExitCritical>
 8007466:	68fb      	ldr	r3, [r7, #12]
 8007468:	4618      	mov	r0, r3
 800746a:	3710      	adds	r7, #16
 800746c:	46bd      	mov	sp, r7
 800746e:	bd80      	pop	{r7, pc}

08007470 <prvIsQueueFull>:
 8007470:	b580      	push	{r7, lr}
 8007472:	b084      	sub	sp, #16
 8007474:	af00      	add	r7, sp, #0
 8007476:	6078      	str	r0, [r7, #4]
 8007478:	f001 fccc 	bl	8008e14 <vPortEnterCritical>
 800747c:	687b      	ldr	r3, [r7, #4]
 800747e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8007480:	687b      	ldr	r3, [r7, #4]
 8007482:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007484:	429a      	cmp	r2, r3
 8007486:	d102      	bne.n	800748e <prvIsQueueFull+0x1e>
 8007488:	2301      	movs	r3, #1
 800748a:	60fb      	str	r3, [r7, #12]
 800748c:	e001      	b.n	8007492 <prvIsQueueFull+0x22>
 800748e:	2300      	movs	r3, #0
 8007490:	60fb      	str	r3, [r7, #12]
 8007492:	f001 fcef 	bl	8008e74 <vPortExitCritical>
 8007496:	68fb      	ldr	r3, [r7, #12]
 8007498:	4618      	mov	r0, r3
 800749a:	3710      	adds	r7, #16
 800749c:	46bd      	mov	sp, r7
 800749e:	bd80      	pop	{r7, pc}

080074a0 <vQueueAddToRegistry>:
 80074a0:	b480      	push	{r7}
 80074a2:	b085      	sub	sp, #20
 80074a4:	af00      	add	r7, sp, #0
 80074a6:	6078      	str	r0, [r7, #4]
 80074a8:	6039      	str	r1, [r7, #0]
 80074aa:	2300      	movs	r3, #0
 80074ac:	60fb      	str	r3, [r7, #12]
 80074ae:	e014      	b.n	80074da <vQueueAddToRegistry+0x3a>
 80074b0:	4a0f      	ldr	r2, [pc, #60]	; (80074f0 <vQueueAddToRegistry+0x50>)
 80074b2:	68fb      	ldr	r3, [r7, #12]
 80074b4:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 80074b8:	2b00      	cmp	r3, #0
 80074ba:	d10b      	bne.n	80074d4 <vQueueAddToRegistry+0x34>
 80074bc:	490c      	ldr	r1, [pc, #48]	; (80074f0 <vQueueAddToRegistry+0x50>)
 80074be:	68fb      	ldr	r3, [r7, #12]
 80074c0:	683a      	ldr	r2, [r7, #0]
 80074c2:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 80074c6:	4a0a      	ldr	r2, [pc, #40]	; (80074f0 <vQueueAddToRegistry+0x50>)
 80074c8:	68fb      	ldr	r3, [r7, #12]
 80074ca:	00db      	lsls	r3, r3, #3
 80074cc:	4413      	add	r3, r2
 80074ce:	687a      	ldr	r2, [r7, #4]
 80074d0:	605a      	str	r2, [r3, #4]
 80074d2:	e006      	b.n	80074e2 <vQueueAddToRegistry+0x42>
 80074d4:	68fb      	ldr	r3, [r7, #12]
 80074d6:	3301      	adds	r3, #1
 80074d8:	60fb      	str	r3, [r7, #12]
 80074da:	68fb      	ldr	r3, [r7, #12]
 80074dc:	2b07      	cmp	r3, #7
 80074de:	d9e7      	bls.n	80074b0 <vQueueAddToRegistry+0x10>
 80074e0:	bf00      	nop
 80074e2:	bf00      	nop
 80074e4:	3714      	adds	r7, #20
 80074e6:	46bd      	mov	sp, r7
 80074e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074ec:	4770      	bx	lr
 80074ee:	bf00      	nop
 80074f0:	200019c4 	.word	0x200019c4

080074f4 <vQueueWaitForMessageRestricted>:
 80074f4:	b580      	push	{r7, lr}
 80074f6:	b086      	sub	sp, #24
 80074f8:	af00      	add	r7, sp, #0
 80074fa:	60f8      	str	r0, [r7, #12]
 80074fc:	60b9      	str	r1, [r7, #8]
 80074fe:	607a      	str	r2, [r7, #4]
 8007500:	68fb      	ldr	r3, [r7, #12]
 8007502:	617b      	str	r3, [r7, #20]
 8007504:	f001 fc86 	bl	8008e14 <vPortEnterCritical>
 8007508:	697b      	ldr	r3, [r7, #20]
 800750a:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800750e:	b25b      	sxtb	r3, r3
 8007510:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007514:	d103      	bne.n	800751e <vQueueWaitForMessageRestricted+0x2a>
 8007516:	697b      	ldr	r3, [r7, #20]
 8007518:	2200      	movs	r2, #0
 800751a:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800751e:	697b      	ldr	r3, [r7, #20]
 8007520:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8007524:	b25b      	sxtb	r3, r3
 8007526:	f1b3 3fff 	cmp.w	r3, #4294967295
 800752a:	d103      	bne.n	8007534 <vQueueWaitForMessageRestricted+0x40>
 800752c:	697b      	ldr	r3, [r7, #20]
 800752e:	2200      	movs	r2, #0
 8007530:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8007534:	f001 fc9e 	bl	8008e74 <vPortExitCritical>
 8007538:	697b      	ldr	r3, [r7, #20]
 800753a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800753c:	2b00      	cmp	r3, #0
 800753e:	d106      	bne.n	800754e <vQueueWaitForMessageRestricted+0x5a>
 8007540:	697b      	ldr	r3, [r7, #20]
 8007542:	3324      	adds	r3, #36	; 0x24
 8007544:	687a      	ldr	r2, [r7, #4]
 8007546:	68b9      	ldr	r1, [r7, #8]
 8007548:	4618      	mov	r0, r3
 800754a:	f000 fc61 	bl	8007e10 <vTaskPlaceOnEventListRestricted>
 800754e:	6978      	ldr	r0, [r7, #20]
 8007550:	f7ff ff26 	bl	80073a0 <prvUnlockQueue>
 8007554:	bf00      	nop
 8007556:	3718      	adds	r7, #24
 8007558:	46bd      	mov	sp, r7
 800755a:	bd80      	pop	{r7, pc}

0800755c <xTaskCreateStatic>:
 800755c:	b580      	push	{r7, lr}
 800755e:	b08e      	sub	sp, #56	; 0x38
 8007560:	af04      	add	r7, sp, #16
 8007562:	60f8      	str	r0, [r7, #12]
 8007564:	60b9      	str	r1, [r7, #8]
 8007566:	607a      	str	r2, [r7, #4]
 8007568:	603b      	str	r3, [r7, #0]
 800756a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800756c:	2b00      	cmp	r3, #0
 800756e:	d10a      	bne.n	8007586 <xTaskCreateStatic+0x2a>
 8007570:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007574:	f383 8811 	msr	BASEPRI, r3
 8007578:	f3bf 8f6f 	isb	sy
 800757c:	f3bf 8f4f 	dsb	sy
 8007580:	623b      	str	r3, [r7, #32]
 8007582:	bf00      	nop
 8007584:	e7fe      	b.n	8007584 <xTaskCreateStatic+0x28>
 8007586:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007588:	2b00      	cmp	r3, #0
 800758a:	d10a      	bne.n	80075a2 <xTaskCreateStatic+0x46>
 800758c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007590:	f383 8811 	msr	BASEPRI, r3
 8007594:	f3bf 8f6f 	isb	sy
 8007598:	f3bf 8f4f 	dsb	sy
 800759c:	61fb      	str	r3, [r7, #28]
 800759e:	bf00      	nop
 80075a0:	e7fe      	b.n	80075a0 <xTaskCreateStatic+0x44>
 80075a2:	23a8      	movs	r3, #168	; 0xa8
 80075a4:	613b      	str	r3, [r7, #16]
 80075a6:	693b      	ldr	r3, [r7, #16]
 80075a8:	2ba8      	cmp	r3, #168	; 0xa8
 80075aa:	d00a      	beq.n	80075c2 <xTaskCreateStatic+0x66>
 80075ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80075b0:	f383 8811 	msr	BASEPRI, r3
 80075b4:	f3bf 8f6f 	isb	sy
 80075b8:	f3bf 8f4f 	dsb	sy
 80075bc:	61bb      	str	r3, [r7, #24]
 80075be:	bf00      	nop
 80075c0:	e7fe      	b.n	80075c0 <xTaskCreateStatic+0x64>
 80075c2:	693b      	ldr	r3, [r7, #16]
 80075c4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80075c6:	2b00      	cmp	r3, #0
 80075c8:	d01e      	beq.n	8007608 <xTaskCreateStatic+0xac>
 80075ca:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80075cc:	2b00      	cmp	r3, #0
 80075ce:	d01b      	beq.n	8007608 <xTaskCreateStatic+0xac>
 80075d0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80075d2:	627b      	str	r3, [r7, #36]	; 0x24
 80075d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80075d6:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80075d8:	631a      	str	r2, [r3, #48]	; 0x30
 80075da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80075dc:	2202      	movs	r2, #2
 80075de:	f883 20a5 	strb.w	r2, [r3, #165]	; 0xa5
 80075e2:	2300      	movs	r3, #0
 80075e4:	9303      	str	r3, [sp, #12]
 80075e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80075e8:	9302      	str	r3, [sp, #8]
 80075ea:	f107 0314 	add.w	r3, r7, #20
 80075ee:	9301      	str	r3, [sp, #4]
 80075f0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80075f2:	9300      	str	r3, [sp, #0]
 80075f4:	683b      	ldr	r3, [r7, #0]
 80075f6:	687a      	ldr	r2, [r7, #4]
 80075f8:	68b9      	ldr	r1, [r7, #8]
 80075fa:	68f8      	ldr	r0, [r7, #12]
 80075fc:	f000 f850 	bl	80076a0 <prvInitialiseNewTask>
 8007600:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8007602:	f000 f8f3 	bl	80077ec <prvAddNewTaskToReadyList>
 8007606:	e001      	b.n	800760c <xTaskCreateStatic+0xb0>
 8007608:	2300      	movs	r3, #0
 800760a:	617b      	str	r3, [r7, #20]
 800760c:	697b      	ldr	r3, [r7, #20]
 800760e:	4618      	mov	r0, r3
 8007610:	3728      	adds	r7, #40	; 0x28
 8007612:	46bd      	mov	sp, r7
 8007614:	bd80      	pop	{r7, pc}

08007616 <xTaskCreate>:
 8007616:	b580      	push	{r7, lr}
 8007618:	b08c      	sub	sp, #48	; 0x30
 800761a:	af04      	add	r7, sp, #16
 800761c:	60f8      	str	r0, [r7, #12]
 800761e:	60b9      	str	r1, [r7, #8]
 8007620:	603b      	str	r3, [r7, #0]
 8007622:	4613      	mov	r3, r2
 8007624:	80fb      	strh	r3, [r7, #6]
 8007626:	88fb      	ldrh	r3, [r7, #6]
 8007628:	009b      	lsls	r3, r3, #2
 800762a:	4618      	mov	r0, r3
 800762c:	f001 fd14 	bl	8009058 <pvPortMalloc>
 8007630:	6178      	str	r0, [r7, #20]
 8007632:	697b      	ldr	r3, [r7, #20]
 8007634:	2b00      	cmp	r3, #0
 8007636:	d00e      	beq.n	8007656 <xTaskCreate+0x40>
 8007638:	20a8      	movs	r0, #168	; 0xa8
 800763a:	f001 fd0d 	bl	8009058 <pvPortMalloc>
 800763e:	61f8      	str	r0, [r7, #28]
 8007640:	69fb      	ldr	r3, [r7, #28]
 8007642:	2b00      	cmp	r3, #0
 8007644:	d003      	beq.n	800764e <xTaskCreate+0x38>
 8007646:	69fb      	ldr	r3, [r7, #28]
 8007648:	697a      	ldr	r2, [r7, #20]
 800764a:	631a      	str	r2, [r3, #48]	; 0x30
 800764c:	e005      	b.n	800765a <xTaskCreate+0x44>
 800764e:	6978      	ldr	r0, [r7, #20]
 8007650:	f001 fdce 	bl	80091f0 <vPortFree>
 8007654:	e001      	b.n	800765a <xTaskCreate+0x44>
 8007656:	2300      	movs	r3, #0
 8007658:	61fb      	str	r3, [r7, #28]
 800765a:	69fb      	ldr	r3, [r7, #28]
 800765c:	2b00      	cmp	r3, #0
 800765e:	d017      	beq.n	8007690 <xTaskCreate+0x7a>
 8007660:	69fb      	ldr	r3, [r7, #28]
 8007662:	2200      	movs	r2, #0
 8007664:	f883 20a5 	strb.w	r2, [r3, #165]	; 0xa5
 8007668:	88fa      	ldrh	r2, [r7, #6]
 800766a:	2300      	movs	r3, #0
 800766c:	9303      	str	r3, [sp, #12]
 800766e:	69fb      	ldr	r3, [r7, #28]
 8007670:	9302      	str	r3, [sp, #8]
 8007672:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007674:	9301      	str	r3, [sp, #4]
 8007676:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007678:	9300      	str	r3, [sp, #0]
 800767a:	683b      	ldr	r3, [r7, #0]
 800767c:	68b9      	ldr	r1, [r7, #8]
 800767e:	68f8      	ldr	r0, [r7, #12]
 8007680:	f000 f80e 	bl	80076a0 <prvInitialiseNewTask>
 8007684:	69f8      	ldr	r0, [r7, #28]
 8007686:	f000 f8b1 	bl	80077ec <prvAddNewTaskToReadyList>
 800768a:	2301      	movs	r3, #1
 800768c:	61bb      	str	r3, [r7, #24]
 800768e:	e002      	b.n	8007696 <xTaskCreate+0x80>
 8007690:	f04f 33ff 	mov.w	r3, #4294967295
 8007694:	61bb      	str	r3, [r7, #24]
 8007696:	69bb      	ldr	r3, [r7, #24]
 8007698:	4618      	mov	r0, r3
 800769a:	3720      	adds	r7, #32
 800769c:	46bd      	mov	sp, r7
 800769e:	bd80      	pop	{r7, pc}

080076a0 <prvInitialiseNewTask>:
 80076a0:	b580      	push	{r7, lr}
 80076a2:	b088      	sub	sp, #32
 80076a4:	af00      	add	r7, sp, #0
 80076a6:	60f8      	str	r0, [r7, #12]
 80076a8:	60b9      	str	r1, [r7, #8]
 80076aa:	607a      	str	r2, [r7, #4]
 80076ac:	603b      	str	r3, [r7, #0]
 80076ae:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80076b0:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80076b2:	687b      	ldr	r3, [r7, #4]
 80076b4:	009b      	lsls	r3, r3, #2
 80076b6:	461a      	mov	r2, r3
 80076b8:	21a5      	movs	r1, #165	; 0xa5
 80076ba:	f002 f97b 	bl	80099b4 <memset>
 80076be:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80076c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80076c2:	687b      	ldr	r3, [r7, #4]
 80076c4:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80076c8:	3b01      	subs	r3, #1
 80076ca:	009b      	lsls	r3, r3, #2
 80076cc:	4413      	add	r3, r2
 80076ce:	61bb      	str	r3, [r7, #24]
 80076d0:	69bb      	ldr	r3, [r7, #24]
 80076d2:	f023 0307 	bic.w	r3, r3, #7
 80076d6:	61bb      	str	r3, [r7, #24]
 80076d8:	69bb      	ldr	r3, [r7, #24]
 80076da:	f003 0307 	and.w	r3, r3, #7
 80076de:	2b00      	cmp	r3, #0
 80076e0:	d00a      	beq.n	80076f8 <prvInitialiseNewTask+0x58>
 80076e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076e6:	f383 8811 	msr	BASEPRI, r3
 80076ea:	f3bf 8f6f 	isb	sy
 80076ee:	f3bf 8f4f 	dsb	sy
 80076f2:	617b      	str	r3, [r7, #20]
 80076f4:	bf00      	nop
 80076f6:	e7fe      	b.n	80076f6 <prvInitialiseNewTask+0x56>
 80076f8:	68bb      	ldr	r3, [r7, #8]
 80076fa:	2b00      	cmp	r3, #0
 80076fc:	d01f      	beq.n	800773e <prvInitialiseNewTask+0x9e>
 80076fe:	2300      	movs	r3, #0
 8007700:	61fb      	str	r3, [r7, #28]
 8007702:	e012      	b.n	800772a <prvInitialiseNewTask+0x8a>
 8007704:	68ba      	ldr	r2, [r7, #8]
 8007706:	69fb      	ldr	r3, [r7, #28]
 8007708:	4413      	add	r3, r2
 800770a:	7819      	ldrb	r1, [r3, #0]
 800770c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800770e:	69fb      	ldr	r3, [r7, #28]
 8007710:	4413      	add	r3, r2
 8007712:	3334      	adds	r3, #52	; 0x34
 8007714:	460a      	mov	r2, r1
 8007716:	701a      	strb	r2, [r3, #0]
 8007718:	68ba      	ldr	r2, [r7, #8]
 800771a:	69fb      	ldr	r3, [r7, #28]
 800771c:	4413      	add	r3, r2
 800771e:	781b      	ldrb	r3, [r3, #0]
 8007720:	2b00      	cmp	r3, #0
 8007722:	d006      	beq.n	8007732 <prvInitialiseNewTask+0x92>
 8007724:	69fb      	ldr	r3, [r7, #28]
 8007726:	3301      	adds	r3, #1
 8007728:	61fb      	str	r3, [r7, #28]
 800772a:	69fb      	ldr	r3, [r7, #28]
 800772c:	2b0f      	cmp	r3, #15
 800772e:	d9e9      	bls.n	8007704 <prvInitialiseNewTask+0x64>
 8007730:	e000      	b.n	8007734 <prvInitialiseNewTask+0x94>
 8007732:	bf00      	nop
 8007734:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007736:	2200      	movs	r2, #0
 8007738:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800773c:	e003      	b.n	8007746 <prvInitialiseNewTask+0xa6>
 800773e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007740:	2200      	movs	r2, #0
 8007742:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8007746:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007748:	2b37      	cmp	r3, #55	; 0x37
 800774a:	d901      	bls.n	8007750 <prvInitialiseNewTask+0xb0>
 800774c:	2337      	movs	r3, #55	; 0x37
 800774e:	62bb      	str	r3, [r7, #40]	; 0x28
 8007750:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007752:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8007754:	62da      	str	r2, [r3, #44]	; 0x2c
 8007756:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007758:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800775a:	64da      	str	r2, [r3, #76]	; 0x4c
 800775c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800775e:	2200      	movs	r2, #0
 8007760:	651a      	str	r2, [r3, #80]	; 0x50
 8007762:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007764:	3304      	adds	r3, #4
 8007766:	4618      	mov	r0, r3
 8007768:	f7ff f8be 	bl	80068e8 <vListInitialiseItem>
 800776c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800776e:	3318      	adds	r3, #24
 8007770:	4618      	mov	r0, r3
 8007772:	f7ff f8b9 	bl	80068e8 <vListInitialiseItem>
 8007776:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007778:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800777a:	611a      	str	r2, [r3, #16]
 800777c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800777e:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8007782:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007784:	619a      	str	r2, [r3, #24]
 8007786:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007788:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800778a:	625a      	str	r2, [r3, #36]	; 0x24
 800778c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800778e:	2200      	movs	r2, #0
 8007790:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
 8007794:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007796:	2200      	movs	r2, #0
 8007798:	f883 20a4 	strb.w	r2, [r3, #164]	; 0xa4
 800779c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800779e:	3354      	adds	r3, #84	; 0x54
 80077a0:	224c      	movs	r2, #76	; 0x4c
 80077a2:	2100      	movs	r1, #0
 80077a4:	4618      	mov	r0, r3
 80077a6:	f002 f905 	bl	80099b4 <memset>
 80077aa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80077ac:	4a0c      	ldr	r2, [pc, #48]	; (80077e0 <prvInitialiseNewTask+0x140>)
 80077ae:	659a      	str	r2, [r3, #88]	; 0x58
 80077b0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80077b2:	4a0c      	ldr	r2, [pc, #48]	; (80077e4 <prvInitialiseNewTask+0x144>)
 80077b4:	65da      	str	r2, [r3, #92]	; 0x5c
 80077b6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80077b8:	4a0b      	ldr	r2, [pc, #44]	; (80077e8 <prvInitialiseNewTask+0x148>)
 80077ba:	661a      	str	r2, [r3, #96]	; 0x60
 80077bc:	683a      	ldr	r2, [r7, #0]
 80077be:	68f9      	ldr	r1, [r7, #12]
 80077c0:	69b8      	ldr	r0, [r7, #24]
 80077c2:	f001 f9fb 	bl	8008bbc <pxPortInitialiseStack>
 80077c6:	4602      	mov	r2, r0
 80077c8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80077ca:	601a      	str	r2, [r3, #0]
 80077cc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80077ce:	2b00      	cmp	r3, #0
 80077d0:	d002      	beq.n	80077d8 <prvInitialiseNewTask+0x138>
 80077d2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80077d4:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80077d6:	601a      	str	r2, [r3, #0]
 80077d8:	bf00      	nop
 80077da:	3720      	adds	r7, #32
 80077dc:	46bd      	mov	sp, r7
 80077de:	bd80      	pop	{r7, pc}
 80077e0:	20005c58 	.word	0x20005c58
 80077e4:	20005cc0 	.word	0x20005cc0
 80077e8:	20005d28 	.word	0x20005d28

080077ec <prvAddNewTaskToReadyList>:
 80077ec:	b580      	push	{r7, lr}
 80077ee:	b082      	sub	sp, #8
 80077f0:	af00      	add	r7, sp, #0
 80077f2:	6078      	str	r0, [r7, #4]
 80077f4:	f001 fb0e 	bl	8008e14 <vPortEnterCritical>
 80077f8:	4b2d      	ldr	r3, [pc, #180]	; (80078b0 <prvAddNewTaskToReadyList+0xc4>)
 80077fa:	681b      	ldr	r3, [r3, #0]
 80077fc:	3301      	adds	r3, #1
 80077fe:	4a2c      	ldr	r2, [pc, #176]	; (80078b0 <prvAddNewTaskToReadyList+0xc4>)
 8007800:	6013      	str	r3, [r2, #0]
 8007802:	4b2c      	ldr	r3, [pc, #176]	; (80078b4 <prvAddNewTaskToReadyList+0xc8>)
 8007804:	681b      	ldr	r3, [r3, #0]
 8007806:	2b00      	cmp	r3, #0
 8007808:	d109      	bne.n	800781e <prvAddNewTaskToReadyList+0x32>
 800780a:	4a2a      	ldr	r2, [pc, #168]	; (80078b4 <prvAddNewTaskToReadyList+0xc8>)
 800780c:	687b      	ldr	r3, [r7, #4]
 800780e:	6013      	str	r3, [r2, #0]
 8007810:	4b27      	ldr	r3, [pc, #156]	; (80078b0 <prvAddNewTaskToReadyList+0xc4>)
 8007812:	681b      	ldr	r3, [r3, #0]
 8007814:	2b01      	cmp	r3, #1
 8007816:	d110      	bne.n	800783a <prvAddNewTaskToReadyList+0x4e>
 8007818:	f000 fc26 	bl	8008068 <prvInitialiseTaskLists>
 800781c:	e00d      	b.n	800783a <prvAddNewTaskToReadyList+0x4e>
 800781e:	4b26      	ldr	r3, [pc, #152]	; (80078b8 <prvAddNewTaskToReadyList+0xcc>)
 8007820:	681b      	ldr	r3, [r3, #0]
 8007822:	2b00      	cmp	r3, #0
 8007824:	d109      	bne.n	800783a <prvAddNewTaskToReadyList+0x4e>
 8007826:	4b23      	ldr	r3, [pc, #140]	; (80078b4 <prvAddNewTaskToReadyList+0xc8>)
 8007828:	681b      	ldr	r3, [r3, #0]
 800782a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800782c:	687b      	ldr	r3, [r7, #4]
 800782e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007830:	429a      	cmp	r2, r3
 8007832:	d802      	bhi.n	800783a <prvAddNewTaskToReadyList+0x4e>
 8007834:	4a1f      	ldr	r2, [pc, #124]	; (80078b4 <prvAddNewTaskToReadyList+0xc8>)
 8007836:	687b      	ldr	r3, [r7, #4]
 8007838:	6013      	str	r3, [r2, #0]
 800783a:	4b20      	ldr	r3, [pc, #128]	; (80078bc <prvAddNewTaskToReadyList+0xd0>)
 800783c:	681b      	ldr	r3, [r3, #0]
 800783e:	3301      	adds	r3, #1
 8007840:	4a1e      	ldr	r2, [pc, #120]	; (80078bc <prvAddNewTaskToReadyList+0xd0>)
 8007842:	6013      	str	r3, [r2, #0]
 8007844:	4b1d      	ldr	r3, [pc, #116]	; (80078bc <prvAddNewTaskToReadyList+0xd0>)
 8007846:	681a      	ldr	r2, [r3, #0]
 8007848:	687b      	ldr	r3, [r7, #4]
 800784a:	645a      	str	r2, [r3, #68]	; 0x44
 800784c:	687b      	ldr	r3, [r7, #4]
 800784e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007850:	4b1b      	ldr	r3, [pc, #108]	; (80078c0 <prvAddNewTaskToReadyList+0xd4>)
 8007852:	681b      	ldr	r3, [r3, #0]
 8007854:	429a      	cmp	r2, r3
 8007856:	d903      	bls.n	8007860 <prvAddNewTaskToReadyList+0x74>
 8007858:	687b      	ldr	r3, [r7, #4]
 800785a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800785c:	4a18      	ldr	r2, [pc, #96]	; (80078c0 <prvAddNewTaskToReadyList+0xd4>)
 800785e:	6013      	str	r3, [r2, #0]
 8007860:	687b      	ldr	r3, [r7, #4]
 8007862:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007864:	4613      	mov	r3, r2
 8007866:	009b      	lsls	r3, r3, #2
 8007868:	4413      	add	r3, r2
 800786a:	009b      	lsls	r3, r3, #2
 800786c:	4a15      	ldr	r2, [pc, #84]	; (80078c4 <prvAddNewTaskToReadyList+0xd8>)
 800786e:	441a      	add	r2, r3
 8007870:	687b      	ldr	r3, [r7, #4]
 8007872:	3304      	adds	r3, #4
 8007874:	4619      	mov	r1, r3
 8007876:	4610      	mov	r0, r2
 8007878:	f7ff f843 	bl	8006902 <vListInsertEnd>
 800787c:	f001 fafa 	bl	8008e74 <vPortExitCritical>
 8007880:	4b0d      	ldr	r3, [pc, #52]	; (80078b8 <prvAddNewTaskToReadyList+0xcc>)
 8007882:	681b      	ldr	r3, [r3, #0]
 8007884:	2b00      	cmp	r3, #0
 8007886:	d00e      	beq.n	80078a6 <prvAddNewTaskToReadyList+0xba>
 8007888:	4b0a      	ldr	r3, [pc, #40]	; (80078b4 <prvAddNewTaskToReadyList+0xc8>)
 800788a:	681b      	ldr	r3, [r3, #0]
 800788c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800788e:	687b      	ldr	r3, [r7, #4]
 8007890:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007892:	429a      	cmp	r2, r3
 8007894:	d207      	bcs.n	80078a6 <prvAddNewTaskToReadyList+0xba>
 8007896:	4b0c      	ldr	r3, [pc, #48]	; (80078c8 <prvAddNewTaskToReadyList+0xdc>)
 8007898:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800789c:	601a      	str	r2, [r3, #0]
 800789e:	f3bf 8f4f 	dsb	sy
 80078a2:	f3bf 8f6f 	isb	sy
 80078a6:	bf00      	nop
 80078a8:	3708      	adds	r7, #8
 80078aa:	46bd      	mov	sp, r7
 80078ac:	bd80      	pop	{r7, pc}
 80078ae:	bf00      	nop
 80078b0:	20001ed8 	.word	0x20001ed8
 80078b4:	20001a04 	.word	0x20001a04
 80078b8:	20001ee4 	.word	0x20001ee4
 80078bc:	20001ef4 	.word	0x20001ef4
 80078c0:	20001ee0 	.word	0x20001ee0
 80078c4:	20001a08 	.word	0x20001a08
 80078c8:	e000ed04 	.word	0xe000ed04

080078cc <vTaskDelay>:
 80078cc:	b580      	push	{r7, lr}
 80078ce:	b084      	sub	sp, #16
 80078d0:	af00      	add	r7, sp, #0
 80078d2:	6078      	str	r0, [r7, #4]
 80078d4:	2300      	movs	r3, #0
 80078d6:	60fb      	str	r3, [r7, #12]
 80078d8:	687b      	ldr	r3, [r7, #4]
 80078da:	2b00      	cmp	r3, #0
 80078dc:	d017      	beq.n	800790e <vTaskDelay+0x42>
 80078de:	4b13      	ldr	r3, [pc, #76]	; (800792c <vTaskDelay+0x60>)
 80078e0:	681b      	ldr	r3, [r3, #0]
 80078e2:	2b00      	cmp	r3, #0
 80078e4:	d00a      	beq.n	80078fc <vTaskDelay+0x30>
 80078e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80078ea:	f383 8811 	msr	BASEPRI, r3
 80078ee:	f3bf 8f6f 	isb	sy
 80078f2:	f3bf 8f4f 	dsb	sy
 80078f6:	60bb      	str	r3, [r7, #8]
 80078f8:	bf00      	nop
 80078fa:	e7fe      	b.n	80078fa <vTaskDelay+0x2e>
 80078fc:	f000 f88a 	bl	8007a14 <vTaskSuspendAll>
 8007900:	2100      	movs	r1, #0
 8007902:	6878      	ldr	r0, [r7, #4]
 8007904:	f000 fcfe 	bl	8008304 <prvAddCurrentTaskToDelayedList>
 8007908:	f000 f892 	bl	8007a30 <xTaskResumeAll>
 800790c:	60f8      	str	r0, [r7, #12]
 800790e:	68fb      	ldr	r3, [r7, #12]
 8007910:	2b00      	cmp	r3, #0
 8007912:	d107      	bne.n	8007924 <vTaskDelay+0x58>
 8007914:	4b06      	ldr	r3, [pc, #24]	; (8007930 <vTaskDelay+0x64>)
 8007916:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800791a:	601a      	str	r2, [r3, #0]
 800791c:	f3bf 8f4f 	dsb	sy
 8007920:	f3bf 8f6f 	isb	sy
 8007924:	bf00      	nop
 8007926:	3710      	adds	r7, #16
 8007928:	46bd      	mov	sp, r7
 800792a:	bd80      	pop	{r7, pc}
 800792c:	20001f00 	.word	0x20001f00
 8007930:	e000ed04 	.word	0xe000ed04

08007934 <vTaskStartScheduler>:
 8007934:	b580      	push	{r7, lr}
 8007936:	b08a      	sub	sp, #40	; 0x28
 8007938:	af04      	add	r7, sp, #16
 800793a:	2300      	movs	r3, #0
 800793c:	60bb      	str	r3, [r7, #8]
 800793e:	2300      	movs	r3, #0
 8007940:	607b      	str	r3, [r7, #4]
 8007942:	463a      	mov	r2, r7
 8007944:	1d39      	adds	r1, r7, #4
 8007946:	f107 0308 	add.w	r3, r7, #8
 800794a:	4618      	mov	r0, r3
 800794c:	f7fe ff78 	bl	8006840 <vApplicationGetIdleTaskMemory>
 8007950:	6839      	ldr	r1, [r7, #0]
 8007952:	687b      	ldr	r3, [r7, #4]
 8007954:	68ba      	ldr	r2, [r7, #8]
 8007956:	9202      	str	r2, [sp, #8]
 8007958:	9301      	str	r3, [sp, #4]
 800795a:	2300      	movs	r3, #0
 800795c:	9300      	str	r3, [sp, #0]
 800795e:	2300      	movs	r3, #0
 8007960:	460a      	mov	r2, r1
 8007962:	4924      	ldr	r1, [pc, #144]	; (80079f4 <vTaskStartScheduler+0xc0>)
 8007964:	4824      	ldr	r0, [pc, #144]	; (80079f8 <vTaskStartScheduler+0xc4>)
 8007966:	f7ff fdf9 	bl	800755c <xTaskCreateStatic>
 800796a:	4603      	mov	r3, r0
 800796c:	4a23      	ldr	r2, [pc, #140]	; (80079fc <vTaskStartScheduler+0xc8>)
 800796e:	6013      	str	r3, [r2, #0]
 8007970:	4b22      	ldr	r3, [pc, #136]	; (80079fc <vTaskStartScheduler+0xc8>)
 8007972:	681b      	ldr	r3, [r3, #0]
 8007974:	2b00      	cmp	r3, #0
 8007976:	d002      	beq.n	800797e <vTaskStartScheduler+0x4a>
 8007978:	2301      	movs	r3, #1
 800797a:	617b      	str	r3, [r7, #20]
 800797c:	e001      	b.n	8007982 <vTaskStartScheduler+0x4e>
 800797e:	2300      	movs	r3, #0
 8007980:	617b      	str	r3, [r7, #20]
 8007982:	697b      	ldr	r3, [r7, #20]
 8007984:	2b01      	cmp	r3, #1
 8007986:	d102      	bne.n	800798e <vTaskStartScheduler+0x5a>
 8007988:	f000 fd10 	bl	80083ac <xTimerCreateTimerTask>
 800798c:	6178      	str	r0, [r7, #20]
 800798e:	697b      	ldr	r3, [r7, #20]
 8007990:	2b01      	cmp	r3, #1
 8007992:	d11b      	bne.n	80079cc <vTaskStartScheduler+0x98>
 8007994:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007998:	f383 8811 	msr	BASEPRI, r3
 800799c:	f3bf 8f6f 	isb	sy
 80079a0:	f3bf 8f4f 	dsb	sy
 80079a4:	613b      	str	r3, [r7, #16]
 80079a6:	bf00      	nop
 80079a8:	4b15      	ldr	r3, [pc, #84]	; (8007a00 <vTaskStartScheduler+0xcc>)
 80079aa:	681b      	ldr	r3, [r3, #0]
 80079ac:	3354      	adds	r3, #84	; 0x54
 80079ae:	4a15      	ldr	r2, [pc, #84]	; (8007a04 <vTaskStartScheduler+0xd0>)
 80079b0:	6013      	str	r3, [r2, #0]
 80079b2:	4b15      	ldr	r3, [pc, #84]	; (8007a08 <vTaskStartScheduler+0xd4>)
 80079b4:	f04f 32ff 	mov.w	r2, #4294967295
 80079b8:	601a      	str	r2, [r3, #0]
 80079ba:	4b14      	ldr	r3, [pc, #80]	; (8007a0c <vTaskStartScheduler+0xd8>)
 80079bc:	2201      	movs	r2, #1
 80079be:	601a      	str	r2, [r3, #0]
 80079c0:	4b13      	ldr	r3, [pc, #76]	; (8007a10 <vTaskStartScheduler+0xdc>)
 80079c2:	2200      	movs	r2, #0
 80079c4:	601a      	str	r2, [r3, #0]
 80079c6:	f001 f983 	bl	8008cd0 <xPortStartScheduler>
 80079ca:	e00e      	b.n	80079ea <vTaskStartScheduler+0xb6>
 80079cc:	697b      	ldr	r3, [r7, #20]
 80079ce:	f1b3 3fff 	cmp.w	r3, #4294967295
 80079d2:	d10a      	bne.n	80079ea <vTaskStartScheduler+0xb6>
 80079d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079d8:	f383 8811 	msr	BASEPRI, r3
 80079dc:	f3bf 8f6f 	isb	sy
 80079e0:	f3bf 8f4f 	dsb	sy
 80079e4:	60fb      	str	r3, [r7, #12]
 80079e6:	bf00      	nop
 80079e8:	e7fe      	b.n	80079e8 <vTaskStartScheduler+0xb4>
 80079ea:	bf00      	nop
 80079ec:	3718      	adds	r7, #24
 80079ee:	46bd      	mov	sp, r7
 80079f0:	bd80      	pop	{r7, pc}
 80079f2:	bf00      	nop
 80079f4:	0800ac5c 	.word	0x0800ac5c
 80079f8:	08008039 	.word	0x08008039
 80079fc:	20001efc 	.word	0x20001efc
 8007a00:	20001a04 	.word	0x20001a04
 8007a04:	20000068 	.word	0x20000068
 8007a08:	20001ef8 	.word	0x20001ef8
 8007a0c:	20001ee4 	.word	0x20001ee4
 8007a10:	20001edc 	.word	0x20001edc

08007a14 <vTaskSuspendAll>:
 8007a14:	b480      	push	{r7}
 8007a16:	af00      	add	r7, sp, #0
 8007a18:	4b04      	ldr	r3, [pc, #16]	; (8007a2c <vTaskSuspendAll+0x18>)
 8007a1a:	681b      	ldr	r3, [r3, #0]
 8007a1c:	3301      	adds	r3, #1
 8007a1e:	4a03      	ldr	r2, [pc, #12]	; (8007a2c <vTaskSuspendAll+0x18>)
 8007a20:	6013      	str	r3, [r2, #0]
 8007a22:	bf00      	nop
 8007a24:	46bd      	mov	sp, r7
 8007a26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a2a:	4770      	bx	lr
 8007a2c:	20001f00 	.word	0x20001f00

08007a30 <xTaskResumeAll>:
 8007a30:	b580      	push	{r7, lr}
 8007a32:	b084      	sub	sp, #16
 8007a34:	af00      	add	r7, sp, #0
 8007a36:	2300      	movs	r3, #0
 8007a38:	60fb      	str	r3, [r7, #12]
 8007a3a:	2300      	movs	r3, #0
 8007a3c:	60bb      	str	r3, [r7, #8]
 8007a3e:	4b42      	ldr	r3, [pc, #264]	; (8007b48 <xTaskResumeAll+0x118>)
 8007a40:	681b      	ldr	r3, [r3, #0]
 8007a42:	2b00      	cmp	r3, #0
 8007a44:	d10a      	bne.n	8007a5c <xTaskResumeAll+0x2c>
 8007a46:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a4a:	f383 8811 	msr	BASEPRI, r3
 8007a4e:	f3bf 8f6f 	isb	sy
 8007a52:	f3bf 8f4f 	dsb	sy
 8007a56:	603b      	str	r3, [r7, #0]
 8007a58:	bf00      	nop
 8007a5a:	e7fe      	b.n	8007a5a <xTaskResumeAll+0x2a>
 8007a5c:	f001 f9da 	bl	8008e14 <vPortEnterCritical>
 8007a60:	4b39      	ldr	r3, [pc, #228]	; (8007b48 <xTaskResumeAll+0x118>)
 8007a62:	681b      	ldr	r3, [r3, #0]
 8007a64:	3b01      	subs	r3, #1
 8007a66:	4a38      	ldr	r2, [pc, #224]	; (8007b48 <xTaskResumeAll+0x118>)
 8007a68:	6013      	str	r3, [r2, #0]
 8007a6a:	4b37      	ldr	r3, [pc, #220]	; (8007b48 <xTaskResumeAll+0x118>)
 8007a6c:	681b      	ldr	r3, [r3, #0]
 8007a6e:	2b00      	cmp	r3, #0
 8007a70:	d162      	bne.n	8007b38 <xTaskResumeAll+0x108>
 8007a72:	4b36      	ldr	r3, [pc, #216]	; (8007b4c <xTaskResumeAll+0x11c>)
 8007a74:	681b      	ldr	r3, [r3, #0]
 8007a76:	2b00      	cmp	r3, #0
 8007a78:	d05e      	beq.n	8007b38 <xTaskResumeAll+0x108>
 8007a7a:	e02f      	b.n	8007adc <xTaskResumeAll+0xac>
 8007a7c:	4b34      	ldr	r3, [pc, #208]	; (8007b50 <xTaskResumeAll+0x120>)
 8007a7e:	68db      	ldr	r3, [r3, #12]
 8007a80:	68db      	ldr	r3, [r3, #12]
 8007a82:	60fb      	str	r3, [r7, #12]
 8007a84:	68fb      	ldr	r3, [r7, #12]
 8007a86:	3318      	adds	r3, #24
 8007a88:	4618      	mov	r0, r3
 8007a8a:	f7fe ff97 	bl	80069bc <uxListRemove>
 8007a8e:	68fb      	ldr	r3, [r7, #12]
 8007a90:	3304      	adds	r3, #4
 8007a92:	4618      	mov	r0, r3
 8007a94:	f7fe ff92 	bl	80069bc <uxListRemove>
 8007a98:	68fb      	ldr	r3, [r7, #12]
 8007a9a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007a9c:	4b2d      	ldr	r3, [pc, #180]	; (8007b54 <xTaskResumeAll+0x124>)
 8007a9e:	681b      	ldr	r3, [r3, #0]
 8007aa0:	429a      	cmp	r2, r3
 8007aa2:	d903      	bls.n	8007aac <xTaskResumeAll+0x7c>
 8007aa4:	68fb      	ldr	r3, [r7, #12]
 8007aa6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007aa8:	4a2a      	ldr	r2, [pc, #168]	; (8007b54 <xTaskResumeAll+0x124>)
 8007aaa:	6013      	str	r3, [r2, #0]
 8007aac:	68fb      	ldr	r3, [r7, #12]
 8007aae:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007ab0:	4613      	mov	r3, r2
 8007ab2:	009b      	lsls	r3, r3, #2
 8007ab4:	4413      	add	r3, r2
 8007ab6:	009b      	lsls	r3, r3, #2
 8007ab8:	4a27      	ldr	r2, [pc, #156]	; (8007b58 <xTaskResumeAll+0x128>)
 8007aba:	441a      	add	r2, r3
 8007abc:	68fb      	ldr	r3, [r7, #12]
 8007abe:	3304      	adds	r3, #4
 8007ac0:	4619      	mov	r1, r3
 8007ac2:	4610      	mov	r0, r2
 8007ac4:	f7fe ff1d 	bl	8006902 <vListInsertEnd>
 8007ac8:	68fb      	ldr	r3, [r7, #12]
 8007aca:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007acc:	4b23      	ldr	r3, [pc, #140]	; (8007b5c <xTaskResumeAll+0x12c>)
 8007ace:	681b      	ldr	r3, [r3, #0]
 8007ad0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007ad2:	429a      	cmp	r2, r3
 8007ad4:	d302      	bcc.n	8007adc <xTaskResumeAll+0xac>
 8007ad6:	4b22      	ldr	r3, [pc, #136]	; (8007b60 <xTaskResumeAll+0x130>)
 8007ad8:	2201      	movs	r2, #1
 8007ada:	601a      	str	r2, [r3, #0]
 8007adc:	4b1c      	ldr	r3, [pc, #112]	; (8007b50 <xTaskResumeAll+0x120>)
 8007ade:	681b      	ldr	r3, [r3, #0]
 8007ae0:	2b00      	cmp	r3, #0
 8007ae2:	d1cb      	bne.n	8007a7c <xTaskResumeAll+0x4c>
 8007ae4:	68fb      	ldr	r3, [r7, #12]
 8007ae6:	2b00      	cmp	r3, #0
 8007ae8:	d001      	beq.n	8007aee <xTaskResumeAll+0xbe>
 8007aea:	f000 fb5f 	bl	80081ac <prvResetNextTaskUnblockTime>
 8007aee:	4b1d      	ldr	r3, [pc, #116]	; (8007b64 <xTaskResumeAll+0x134>)
 8007af0:	681b      	ldr	r3, [r3, #0]
 8007af2:	607b      	str	r3, [r7, #4]
 8007af4:	687b      	ldr	r3, [r7, #4]
 8007af6:	2b00      	cmp	r3, #0
 8007af8:	d010      	beq.n	8007b1c <xTaskResumeAll+0xec>
 8007afa:	f000 f847 	bl	8007b8c <xTaskIncrementTick>
 8007afe:	4603      	mov	r3, r0
 8007b00:	2b00      	cmp	r3, #0
 8007b02:	d002      	beq.n	8007b0a <xTaskResumeAll+0xda>
 8007b04:	4b16      	ldr	r3, [pc, #88]	; (8007b60 <xTaskResumeAll+0x130>)
 8007b06:	2201      	movs	r2, #1
 8007b08:	601a      	str	r2, [r3, #0]
 8007b0a:	687b      	ldr	r3, [r7, #4]
 8007b0c:	3b01      	subs	r3, #1
 8007b0e:	607b      	str	r3, [r7, #4]
 8007b10:	687b      	ldr	r3, [r7, #4]
 8007b12:	2b00      	cmp	r3, #0
 8007b14:	d1f1      	bne.n	8007afa <xTaskResumeAll+0xca>
 8007b16:	4b13      	ldr	r3, [pc, #76]	; (8007b64 <xTaskResumeAll+0x134>)
 8007b18:	2200      	movs	r2, #0
 8007b1a:	601a      	str	r2, [r3, #0]
 8007b1c:	4b10      	ldr	r3, [pc, #64]	; (8007b60 <xTaskResumeAll+0x130>)
 8007b1e:	681b      	ldr	r3, [r3, #0]
 8007b20:	2b00      	cmp	r3, #0
 8007b22:	d009      	beq.n	8007b38 <xTaskResumeAll+0x108>
 8007b24:	2301      	movs	r3, #1
 8007b26:	60bb      	str	r3, [r7, #8]
 8007b28:	4b0f      	ldr	r3, [pc, #60]	; (8007b68 <xTaskResumeAll+0x138>)
 8007b2a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007b2e:	601a      	str	r2, [r3, #0]
 8007b30:	f3bf 8f4f 	dsb	sy
 8007b34:	f3bf 8f6f 	isb	sy
 8007b38:	f001 f99c 	bl	8008e74 <vPortExitCritical>
 8007b3c:	68bb      	ldr	r3, [r7, #8]
 8007b3e:	4618      	mov	r0, r3
 8007b40:	3710      	adds	r7, #16
 8007b42:	46bd      	mov	sp, r7
 8007b44:	bd80      	pop	{r7, pc}
 8007b46:	bf00      	nop
 8007b48:	20001f00 	.word	0x20001f00
 8007b4c:	20001ed8 	.word	0x20001ed8
 8007b50:	20001e98 	.word	0x20001e98
 8007b54:	20001ee0 	.word	0x20001ee0
 8007b58:	20001a08 	.word	0x20001a08
 8007b5c:	20001a04 	.word	0x20001a04
 8007b60:	20001eec 	.word	0x20001eec
 8007b64:	20001ee8 	.word	0x20001ee8
 8007b68:	e000ed04 	.word	0xe000ed04

08007b6c <xTaskGetTickCount>:
 8007b6c:	b480      	push	{r7}
 8007b6e:	b083      	sub	sp, #12
 8007b70:	af00      	add	r7, sp, #0
 8007b72:	4b05      	ldr	r3, [pc, #20]	; (8007b88 <xTaskGetTickCount+0x1c>)
 8007b74:	681b      	ldr	r3, [r3, #0]
 8007b76:	607b      	str	r3, [r7, #4]
 8007b78:	687b      	ldr	r3, [r7, #4]
 8007b7a:	4618      	mov	r0, r3
 8007b7c:	370c      	adds	r7, #12
 8007b7e:	46bd      	mov	sp, r7
 8007b80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b84:	4770      	bx	lr
 8007b86:	bf00      	nop
 8007b88:	20001edc 	.word	0x20001edc

08007b8c <xTaskIncrementTick>:
 8007b8c:	b580      	push	{r7, lr}
 8007b8e:	b086      	sub	sp, #24
 8007b90:	af00      	add	r7, sp, #0
 8007b92:	2300      	movs	r3, #0
 8007b94:	617b      	str	r3, [r7, #20]
 8007b96:	4b4f      	ldr	r3, [pc, #316]	; (8007cd4 <xTaskIncrementTick+0x148>)
 8007b98:	681b      	ldr	r3, [r3, #0]
 8007b9a:	2b00      	cmp	r3, #0
 8007b9c:	f040 808f 	bne.w	8007cbe <xTaskIncrementTick+0x132>
 8007ba0:	4b4d      	ldr	r3, [pc, #308]	; (8007cd8 <xTaskIncrementTick+0x14c>)
 8007ba2:	681b      	ldr	r3, [r3, #0]
 8007ba4:	3301      	adds	r3, #1
 8007ba6:	613b      	str	r3, [r7, #16]
 8007ba8:	4a4b      	ldr	r2, [pc, #300]	; (8007cd8 <xTaskIncrementTick+0x14c>)
 8007baa:	693b      	ldr	r3, [r7, #16]
 8007bac:	6013      	str	r3, [r2, #0]
 8007bae:	693b      	ldr	r3, [r7, #16]
 8007bb0:	2b00      	cmp	r3, #0
 8007bb2:	d120      	bne.n	8007bf6 <xTaskIncrementTick+0x6a>
 8007bb4:	4b49      	ldr	r3, [pc, #292]	; (8007cdc <xTaskIncrementTick+0x150>)
 8007bb6:	681b      	ldr	r3, [r3, #0]
 8007bb8:	681b      	ldr	r3, [r3, #0]
 8007bba:	2b00      	cmp	r3, #0
 8007bbc:	d00a      	beq.n	8007bd4 <xTaskIncrementTick+0x48>
 8007bbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007bc2:	f383 8811 	msr	BASEPRI, r3
 8007bc6:	f3bf 8f6f 	isb	sy
 8007bca:	f3bf 8f4f 	dsb	sy
 8007bce:	603b      	str	r3, [r7, #0]
 8007bd0:	bf00      	nop
 8007bd2:	e7fe      	b.n	8007bd2 <xTaskIncrementTick+0x46>
 8007bd4:	4b41      	ldr	r3, [pc, #260]	; (8007cdc <xTaskIncrementTick+0x150>)
 8007bd6:	681b      	ldr	r3, [r3, #0]
 8007bd8:	60fb      	str	r3, [r7, #12]
 8007bda:	4b41      	ldr	r3, [pc, #260]	; (8007ce0 <xTaskIncrementTick+0x154>)
 8007bdc:	681b      	ldr	r3, [r3, #0]
 8007bde:	4a3f      	ldr	r2, [pc, #252]	; (8007cdc <xTaskIncrementTick+0x150>)
 8007be0:	6013      	str	r3, [r2, #0]
 8007be2:	4a3f      	ldr	r2, [pc, #252]	; (8007ce0 <xTaskIncrementTick+0x154>)
 8007be4:	68fb      	ldr	r3, [r7, #12]
 8007be6:	6013      	str	r3, [r2, #0]
 8007be8:	4b3e      	ldr	r3, [pc, #248]	; (8007ce4 <xTaskIncrementTick+0x158>)
 8007bea:	681b      	ldr	r3, [r3, #0]
 8007bec:	3301      	adds	r3, #1
 8007bee:	4a3d      	ldr	r2, [pc, #244]	; (8007ce4 <xTaskIncrementTick+0x158>)
 8007bf0:	6013      	str	r3, [r2, #0]
 8007bf2:	f000 fadb 	bl	80081ac <prvResetNextTaskUnblockTime>
 8007bf6:	4b3c      	ldr	r3, [pc, #240]	; (8007ce8 <xTaskIncrementTick+0x15c>)
 8007bf8:	681b      	ldr	r3, [r3, #0]
 8007bfa:	693a      	ldr	r2, [r7, #16]
 8007bfc:	429a      	cmp	r2, r3
 8007bfe:	d349      	bcc.n	8007c94 <xTaskIncrementTick+0x108>
 8007c00:	4b36      	ldr	r3, [pc, #216]	; (8007cdc <xTaskIncrementTick+0x150>)
 8007c02:	681b      	ldr	r3, [r3, #0]
 8007c04:	681b      	ldr	r3, [r3, #0]
 8007c06:	2b00      	cmp	r3, #0
 8007c08:	d104      	bne.n	8007c14 <xTaskIncrementTick+0x88>
 8007c0a:	4b37      	ldr	r3, [pc, #220]	; (8007ce8 <xTaskIncrementTick+0x15c>)
 8007c0c:	f04f 32ff 	mov.w	r2, #4294967295
 8007c10:	601a      	str	r2, [r3, #0]
 8007c12:	e03f      	b.n	8007c94 <xTaskIncrementTick+0x108>
 8007c14:	4b31      	ldr	r3, [pc, #196]	; (8007cdc <xTaskIncrementTick+0x150>)
 8007c16:	681b      	ldr	r3, [r3, #0]
 8007c18:	68db      	ldr	r3, [r3, #12]
 8007c1a:	68db      	ldr	r3, [r3, #12]
 8007c1c:	60bb      	str	r3, [r7, #8]
 8007c1e:	68bb      	ldr	r3, [r7, #8]
 8007c20:	685b      	ldr	r3, [r3, #4]
 8007c22:	607b      	str	r3, [r7, #4]
 8007c24:	693a      	ldr	r2, [r7, #16]
 8007c26:	687b      	ldr	r3, [r7, #4]
 8007c28:	429a      	cmp	r2, r3
 8007c2a:	d203      	bcs.n	8007c34 <xTaskIncrementTick+0xa8>
 8007c2c:	4a2e      	ldr	r2, [pc, #184]	; (8007ce8 <xTaskIncrementTick+0x15c>)
 8007c2e:	687b      	ldr	r3, [r7, #4]
 8007c30:	6013      	str	r3, [r2, #0]
 8007c32:	e02f      	b.n	8007c94 <xTaskIncrementTick+0x108>
 8007c34:	68bb      	ldr	r3, [r7, #8]
 8007c36:	3304      	adds	r3, #4
 8007c38:	4618      	mov	r0, r3
 8007c3a:	f7fe febf 	bl	80069bc <uxListRemove>
 8007c3e:	68bb      	ldr	r3, [r7, #8]
 8007c40:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007c42:	2b00      	cmp	r3, #0
 8007c44:	d004      	beq.n	8007c50 <xTaskIncrementTick+0xc4>
 8007c46:	68bb      	ldr	r3, [r7, #8]
 8007c48:	3318      	adds	r3, #24
 8007c4a:	4618      	mov	r0, r3
 8007c4c:	f7fe feb6 	bl	80069bc <uxListRemove>
 8007c50:	68bb      	ldr	r3, [r7, #8]
 8007c52:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007c54:	4b25      	ldr	r3, [pc, #148]	; (8007cec <xTaskIncrementTick+0x160>)
 8007c56:	681b      	ldr	r3, [r3, #0]
 8007c58:	429a      	cmp	r2, r3
 8007c5a:	d903      	bls.n	8007c64 <xTaskIncrementTick+0xd8>
 8007c5c:	68bb      	ldr	r3, [r7, #8]
 8007c5e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007c60:	4a22      	ldr	r2, [pc, #136]	; (8007cec <xTaskIncrementTick+0x160>)
 8007c62:	6013      	str	r3, [r2, #0]
 8007c64:	68bb      	ldr	r3, [r7, #8]
 8007c66:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007c68:	4613      	mov	r3, r2
 8007c6a:	009b      	lsls	r3, r3, #2
 8007c6c:	4413      	add	r3, r2
 8007c6e:	009b      	lsls	r3, r3, #2
 8007c70:	4a1f      	ldr	r2, [pc, #124]	; (8007cf0 <xTaskIncrementTick+0x164>)
 8007c72:	441a      	add	r2, r3
 8007c74:	68bb      	ldr	r3, [r7, #8]
 8007c76:	3304      	adds	r3, #4
 8007c78:	4619      	mov	r1, r3
 8007c7a:	4610      	mov	r0, r2
 8007c7c:	f7fe fe41 	bl	8006902 <vListInsertEnd>
 8007c80:	68bb      	ldr	r3, [r7, #8]
 8007c82:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007c84:	4b1b      	ldr	r3, [pc, #108]	; (8007cf4 <xTaskIncrementTick+0x168>)
 8007c86:	681b      	ldr	r3, [r3, #0]
 8007c88:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007c8a:	429a      	cmp	r2, r3
 8007c8c:	d3b8      	bcc.n	8007c00 <xTaskIncrementTick+0x74>
 8007c8e:	2301      	movs	r3, #1
 8007c90:	617b      	str	r3, [r7, #20]
 8007c92:	e7b5      	b.n	8007c00 <xTaskIncrementTick+0x74>
 8007c94:	4b17      	ldr	r3, [pc, #92]	; (8007cf4 <xTaskIncrementTick+0x168>)
 8007c96:	681b      	ldr	r3, [r3, #0]
 8007c98:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007c9a:	4915      	ldr	r1, [pc, #84]	; (8007cf0 <xTaskIncrementTick+0x164>)
 8007c9c:	4613      	mov	r3, r2
 8007c9e:	009b      	lsls	r3, r3, #2
 8007ca0:	4413      	add	r3, r2
 8007ca2:	009b      	lsls	r3, r3, #2
 8007ca4:	440b      	add	r3, r1
 8007ca6:	681b      	ldr	r3, [r3, #0]
 8007ca8:	2b01      	cmp	r3, #1
 8007caa:	d901      	bls.n	8007cb0 <xTaskIncrementTick+0x124>
 8007cac:	2301      	movs	r3, #1
 8007cae:	617b      	str	r3, [r7, #20]
 8007cb0:	4b11      	ldr	r3, [pc, #68]	; (8007cf8 <xTaskIncrementTick+0x16c>)
 8007cb2:	681b      	ldr	r3, [r3, #0]
 8007cb4:	2b00      	cmp	r3, #0
 8007cb6:	d007      	beq.n	8007cc8 <xTaskIncrementTick+0x13c>
 8007cb8:	2301      	movs	r3, #1
 8007cba:	617b      	str	r3, [r7, #20]
 8007cbc:	e004      	b.n	8007cc8 <xTaskIncrementTick+0x13c>
 8007cbe:	4b0f      	ldr	r3, [pc, #60]	; (8007cfc <xTaskIncrementTick+0x170>)
 8007cc0:	681b      	ldr	r3, [r3, #0]
 8007cc2:	3301      	adds	r3, #1
 8007cc4:	4a0d      	ldr	r2, [pc, #52]	; (8007cfc <xTaskIncrementTick+0x170>)
 8007cc6:	6013      	str	r3, [r2, #0]
 8007cc8:	697b      	ldr	r3, [r7, #20]
 8007cca:	4618      	mov	r0, r3
 8007ccc:	3718      	adds	r7, #24
 8007cce:	46bd      	mov	sp, r7
 8007cd0:	bd80      	pop	{r7, pc}
 8007cd2:	bf00      	nop
 8007cd4:	20001f00 	.word	0x20001f00
 8007cd8:	20001edc 	.word	0x20001edc
 8007cdc:	20001e90 	.word	0x20001e90
 8007ce0:	20001e94 	.word	0x20001e94
 8007ce4:	20001ef0 	.word	0x20001ef0
 8007ce8:	20001ef8 	.word	0x20001ef8
 8007cec:	20001ee0 	.word	0x20001ee0
 8007cf0:	20001a08 	.word	0x20001a08
 8007cf4:	20001a04 	.word	0x20001a04
 8007cf8:	20001eec 	.word	0x20001eec
 8007cfc:	20001ee8 	.word	0x20001ee8

08007d00 <vTaskSwitchContext>:
 8007d00:	b480      	push	{r7}
 8007d02:	b085      	sub	sp, #20
 8007d04:	af00      	add	r7, sp, #0
 8007d06:	4b2a      	ldr	r3, [pc, #168]	; (8007db0 <vTaskSwitchContext+0xb0>)
 8007d08:	681b      	ldr	r3, [r3, #0]
 8007d0a:	2b00      	cmp	r3, #0
 8007d0c:	d003      	beq.n	8007d16 <vTaskSwitchContext+0x16>
 8007d0e:	4b29      	ldr	r3, [pc, #164]	; (8007db4 <vTaskSwitchContext+0xb4>)
 8007d10:	2201      	movs	r2, #1
 8007d12:	601a      	str	r2, [r3, #0]
 8007d14:	e046      	b.n	8007da4 <vTaskSwitchContext+0xa4>
 8007d16:	4b27      	ldr	r3, [pc, #156]	; (8007db4 <vTaskSwitchContext+0xb4>)
 8007d18:	2200      	movs	r2, #0
 8007d1a:	601a      	str	r2, [r3, #0]
 8007d1c:	4b26      	ldr	r3, [pc, #152]	; (8007db8 <vTaskSwitchContext+0xb8>)
 8007d1e:	681b      	ldr	r3, [r3, #0]
 8007d20:	60fb      	str	r3, [r7, #12]
 8007d22:	e010      	b.n	8007d46 <vTaskSwitchContext+0x46>
 8007d24:	68fb      	ldr	r3, [r7, #12]
 8007d26:	2b00      	cmp	r3, #0
 8007d28:	d10a      	bne.n	8007d40 <vTaskSwitchContext+0x40>
 8007d2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d2e:	f383 8811 	msr	BASEPRI, r3
 8007d32:	f3bf 8f6f 	isb	sy
 8007d36:	f3bf 8f4f 	dsb	sy
 8007d3a:	607b      	str	r3, [r7, #4]
 8007d3c:	bf00      	nop
 8007d3e:	e7fe      	b.n	8007d3e <vTaskSwitchContext+0x3e>
 8007d40:	68fb      	ldr	r3, [r7, #12]
 8007d42:	3b01      	subs	r3, #1
 8007d44:	60fb      	str	r3, [r7, #12]
 8007d46:	491d      	ldr	r1, [pc, #116]	; (8007dbc <vTaskSwitchContext+0xbc>)
 8007d48:	68fa      	ldr	r2, [r7, #12]
 8007d4a:	4613      	mov	r3, r2
 8007d4c:	009b      	lsls	r3, r3, #2
 8007d4e:	4413      	add	r3, r2
 8007d50:	009b      	lsls	r3, r3, #2
 8007d52:	440b      	add	r3, r1
 8007d54:	681b      	ldr	r3, [r3, #0]
 8007d56:	2b00      	cmp	r3, #0
 8007d58:	d0e4      	beq.n	8007d24 <vTaskSwitchContext+0x24>
 8007d5a:	68fa      	ldr	r2, [r7, #12]
 8007d5c:	4613      	mov	r3, r2
 8007d5e:	009b      	lsls	r3, r3, #2
 8007d60:	4413      	add	r3, r2
 8007d62:	009b      	lsls	r3, r3, #2
 8007d64:	4a15      	ldr	r2, [pc, #84]	; (8007dbc <vTaskSwitchContext+0xbc>)
 8007d66:	4413      	add	r3, r2
 8007d68:	60bb      	str	r3, [r7, #8]
 8007d6a:	68bb      	ldr	r3, [r7, #8]
 8007d6c:	685b      	ldr	r3, [r3, #4]
 8007d6e:	685a      	ldr	r2, [r3, #4]
 8007d70:	68bb      	ldr	r3, [r7, #8]
 8007d72:	605a      	str	r2, [r3, #4]
 8007d74:	68bb      	ldr	r3, [r7, #8]
 8007d76:	685a      	ldr	r2, [r3, #4]
 8007d78:	68bb      	ldr	r3, [r7, #8]
 8007d7a:	3308      	adds	r3, #8
 8007d7c:	429a      	cmp	r2, r3
 8007d7e:	d104      	bne.n	8007d8a <vTaskSwitchContext+0x8a>
 8007d80:	68bb      	ldr	r3, [r7, #8]
 8007d82:	685b      	ldr	r3, [r3, #4]
 8007d84:	685a      	ldr	r2, [r3, #4]
 8007d86:	68bb      	ldr	r3, [r7, #8]
 8007d88:	605a      	str	r2, [r3, #4]
 8007d8a:	68bb      	ldr	r3, [r7, #8]
 8007d8c:	685b      	ldr	r3, [r3, #4]
 8007d8e:	68db      	ldr	r3, [r3, #12]
 8007d90:	4a0b      	ldr	r2, [pc, #44]	; (8007dc0 <vTaskSwitchContext+0xc0>)
 8007d92:	6013      	str	r3, [r2, #0]
 8007d94:	4a08      	ldr	r2, [pc, #32]	; (8007db8 <vTaskSwitchContext+0xb8>)
 8007d96:	68fb      	ldr	r3, [r7, #12]
 8007d98:	6013      	str	r3, [r2, #0]
 8007d9a:	4b09      	ldr	r3, [pc, #36]	; (8007dc0 <vTaskSwitchContext+0xc0>)
 8007d9c:	681b      	ldr	r3, [r3, #0]
 8007d9e:	3354      	adds	r3, #84	; 0x54
 8007da0:	4a08      	ldr	r2, [pc, #32]	; (8007dc4 <vTaskSwitchContext+0xc4>)
 8007da2:	6013      	str	r3, [r2, #0]
 8007da4:	bf00      	nop
 8007da6:	3714      	adds	r7, #20
 8007da8:	46bd      	mov	sp, r7
 8007daa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007dae:	4770      	bx	lr
 8007db0:	20001f00 	.word	0x20001f00
 8007db4:	20001eec 	.word	0x20001eec
 8007db8:	20001ee0 	.word	0x20001ee0
 8007dbc:	20001a08 	.word	0x20001a08
 8007dc0:	20001a04 	.word	0x20001a04
 8007dc4:	20000068 	.word	0x20000068

08007dc8 <vTaskPlaceOnEventList>:
 8007dc8:	b580      	push	{r7, lr}
 8007dca:	b084      	sub	sp, #16
 8007dcc:	af00      	add	r7, sp, #0
 8007dce:	6078      	str	r0, [r7, #4]
 8007dd0:	6039      	str	r1, [r7, #0]
 8007dd2:	687b      	ldr	r3, [r7, #4]
 8007dd4:	2b00      	cmp	r3, #0
 8007dd6:	d10a      	bne.n	8007dee <vTaskPlaceOnEventList+0x26>
 8007dd8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ddc:	f383 8811 	msr	BASEPRI, r3
 8007de0:	f3bf 8f6f 	isb	sy
 8007de4:	f3bf 8f4f 	dsb	sy
 8007de8:	60fb      	str	r3, [r7, #12]
 8007dea:	bf00      	nop
 8007dec:	e7fe      	b.n	8007dec <vTaskPlaceOnEventList+0x24>
 8007dee:	4b07      	ldr	r3, [pc, #28]	; (8007e0c <vTaskPlaceOnEventList+0x44>)
 8007df0:	681b      	ldr	r3, [r3, #0]
 8007df2:	3318      	adds	r3, #24
 8007df4:	4619      	mov	r1, r3
 8007df6:	6878      	ldr	r0, [r7, #4]
 8007df8:	f7fe fda7 	bl	800694a <vListInsert>
 8007dfc:	2101      	movs	r1, #1
 8007dfe:	6838      	ldr	r0, [r7, #0]
 8007e00:	f000 fa80 	bl	8008304 <prvAddCurrentTaskToDelayedList>
 8007e04:	bf00      	nop
 8007e06:	3710      	adds	r7, #16
 8007e08:	46bd      	mov	sp, r7
 8007e0a:	bd80      	pop	{r7, pc}
 8007e0c:	20001a04 	.word	0x20001a04

08007e10 <vTaskPlaceOnEventListRestricted>:
 8007e10:	b580      	push	{r7, lr}
 8007e12:	b086      	sub	sp, #24
 8007e14:	af00      	add	r7, sp, #0
 8007e16:	60f8      	str	r0, [r7, #12]
 8007e18:	60b9      	str	r1, [r7, #8]
 8007e1a:	607a      	str	r2, [r7, #4]
 8007e1c:	68fb      	ldr	r3, [r7, #12]
 8007e1e:	2b00      	cmp	r3, #0
 8007e20:	d10a      	bne.n	8007e38 <vTaskPlaceOnEventListRestricted+0x28>
 8007e22:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e26:	f383 8811 	msr	BASEPRI, r3
 8007e2a:	f3bf 8f6f 	isb	sy
 8007e2e:	f3bf 8f4f 	dsb	sy
 8007e32:	617b      	str	r3, [r7, #20]
 8007e34:	bf00      	nop
 8007e36:	e7fe      	b.n	8007e36 <vTaskPlaceOnEventListRestricted+0x26>
 8007e38:	4b0a      	ldr	r3, [pc, #40]	; (8007e64 <vTaskPlaceOnEventListRestricted+0x54>)
 8007e3a:	681b      	ldr	r3, [r3, #0]
 8007e3c:	3318      	adds	r3, #24
 8007e3e:	4619      	mov	r1, r3
 8007e40:	68f8      	ldr	r0, [r7, #12]
 8007e42:	f7fe fd5e 	bl	8006902 <vListInsertEnd>
 8007e46:	687b      	ldr	r3, [r7, #4]
 8007e48:	2b00      	cmp	r3, #0
 8007e4a:	d002      	beq.n	8007e52 <vTaskPlaceOnEventListRestricted+0x42>
 8007e4c:	f04f 33ff 	mov.w	r3, #4294967295
 8007e50:	60bb      	str	r3, [r7, #8]
 8007e52:	6879      	ldr	r1, [r7, #4]
 8007e54:	68b8      	ldr	r0, [r7, #8]
 8007e56:	f000 fa55 	bl	8008304 <prvAddCurrentTaskToDelayedList>
 8007e5a:	bf00      	nop
 8007e5c:	3718      	adds	r7, #24
 8007e5e:	46bd      	mov	sp, r7
 8007e60:	bd80      	pop	{r7, pc}
 8007e62:	bf00      	nop
 8007e64:	20001a04 	.word	0x20001a04

08007e68 <xTaskRemoveFromEventList>:
 8007e68:	b580      	push	{r7, lr}
 8007e6a:	b086      	sub	sp, #24
 8007e6c:	af00      	add	r7, sp, #0
 8007e6e:	6078      	str	r0, [r7, #4]
 8007e70:	687b      	ldr	r3, [r7, #4]
 8007e72:	68db      	ldr	r3, [r3, #12]
 8007e74:	68db      	ldr	r3, [r3, #12]
 8007e76:	613b      	str	r3, [r7, #16]
 8007e78:	693b      	ldr	r3, [r7, #16]
 8007e7a:	2b00      	cmp	r3, #0
 8007e7c:	d10a      	bne.n	8007e94 <xTaskRemoveFromEventList+0x2c>
 8007e7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e82:	f383 8811 	msr	BASEPRI, r3
 8007e86:	f3bf 8f6f 	isb	sy
 8007e8a:	f3bf 8f4f 	dsb	sy
 8007e8e:	60fb      	str	r3, [r7, #12]
 8007e90:	bf00      	nop
 8007e92:	e7fe      	b.n	8007e92 <xTaskRemoveFromEventList+0x2a>
 8007e94:	693b      	ldr	r3, [r7, #16]
 8007e96:	3318      	adds	r3, #24
 8007e98:	4618      	mov	r0, r3
 8007e9a:	f7fe fd8f 	bl	80069bc <uxListRemove>
 8007e9e:	4b1e      	ldr	r3, [pc, #120]	; (8007f18 <xTaskRemoveFromEventList+0xb0>)
 8007ea0:	681b      	ldr	r3, [r3, #0]
 8007ea2:	2b00      	cmp	r3, #0
 8007ea4:	d11d      	bne.n	8007ee2 <xTaskRemoveFromEventList+0x7a>
 8007ea6:	693b      	ldr	r3, [r7, #16]
 8007ea8:	3304      	adds	r3, #4
 8007eaa:	4618      	mov	r0, r3
 8007eac:	f7fe fd86 	bl	80069bc <uxListRemove>
 8007eb0:	693b      	ldr	r3, [r7, #16]
 8007eb2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007eb4:	4b19      	ldr	r3, [pc, #100]	; (8007f1c <xTaskRemoveFromEventList+0xb4>)
 8007eb6:	681b      	ldr	r3, [r3, #0]
 8007eb8:	429a      	cmp	r2, r3
 8007eba:	d903      	bls.n	8007ec4 <xTaskRemoveFromEventList+0x5c>
 8007ebc:	693b      	ldr	r3, [r7, #16]
 8007ebe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007ec0:	4a16      	ldr	r2, [pc, #88]	; (8007f1c <xTaskRemoveFromEventList+0xb4>)
 8007ec2:	6013      	str	r3, [r2, #0]
 8007ec4:	693b      	ldr	r3, [r7, #16]
 8007ec6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007ec8:	4613      	mov	r3, r2
 8007eca:	009b      	lsls	r3, r3, #2
 8007ecc:	4413      	add	r3, r2
 8007ece:	009b      	lsls	r3, r3, #2
 8007ed0:	4a13      	ldr	r2, [pc, #76]	; (8007f20 <xTaskRemoveFromEventList+0xb8>)
 8007ed2:	441a      	add	r2, r3
 8007ed4:	693b      	ldr	r3, [r7, #16]
 8007ed6:	3304      	adds	r3, #4
 8007ed8:	4619      	mov	r1, r3
 8007eda:	4610      	mov	r0, r2
 8007edc:	f7fe fd11 	bl	8006902 <vListInsertEnd>
 8007ee0:	e005      	b.n	8007eee <xTaskRemoveFromEventList+0x86>
 8007ee2:	693b      	ldr	r3, [r7, #16]
 8007ee4:	3318      	adds	r3, #24
 8007ee6:	4619      	mov	r1, r3
 8007ee8:	480e      	ldr	r0, [pc, #56]	; (8007f24 <xTaskRemoveFromEventList+0xbc>)
 8007eea:	f7fe fd0a 	bl	8006902 <vListInsertEnd>
 8007eee:	693b      	ldr	r3, [r7, #16]
 8007ef0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007ef2:	4b0d      	ldr	r3, [pc, #52]	; (8007f28 <xTaskRemoveFromEventList+0xc0>)
 8007ef4:	681b      	ldr	r3, [r3, #0]
 8007ef6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007ef8:	429a      	cmp	r2, r3
 8007efa:	d905      	bls.n	8007f08 <xTaskRemoveFromEventList+0xa0>
 8007efc:	2301      	movs	r3, #1
 8007efe:	617b      	str	r3, [r7, #20]
 8007f00:	4b0a      	ldr	r3, [pc, #40]	; (8007f2c <xTaskRemoveFromEventList+0xc4>)
 8007f02:	2201      	movs	r2, #1
 8007f04:	601a      	str	r2, [r3, #0]
 8007f06:	e001      	b.n	8007f0c <xTaskRemoveFromEventList+0xa4>
 8007f08:	2300      	movs	r3, #0
 8007f0a:	617b      	str	r3, [r7, #20]
 8007f0c:	697b      	ldr	r3, [r7, #20]
 8007f0e:	4618      	mov	r0, r3
 8007f10:	3718      	adds	r7, #24
 8007f12:	46bd      	mov	sp, r7
 8007f14:	bd80      	pop	{r7, pc}
 8007f16:	bf00      	nop
 8007f18:	20001f00 	.word	0x20001f00
 8007f1c:	20001ee0 	.word	0x20001ee0
 8007f20:	20001a08 	.word	0x20001a08
 8007f24:	20001e98 	.word	0x20001e98
 8007f28:	20001a04 	.word	0x20001a04
 8007f2c:	20001eec 	.word	0x20001eec

08007f30 <vTaskInternalSetTimeOutState>:
 8007f30:	b480      	push	{r7}
 8007f32:	b083      	sub	sp, #12
 8007f34:	af00      	add	r7, sp, #0
 8007f36:	6078      	str	r0, [r7, #4]
 8007f38:	4b06      	ldr	r3, [pc, #24]	; (8007f54 <vTaskInternalSetTimeOutState+0x24>)
 8007f3a:	681a      	ldr	r2, [r3, #0]
 8007f3c:	687b      	ldr	r3, [r7, #4]
 8007f3e:	601a      	str	r2, [r3, #0]
 8007f40:	4b05      	ldr	r3, [pc, #20]	; (8007f58 <vTaskInternalSetTimeOutState+0x28>)
 8007f42:	681a      	ldr	r2, [r3, #0]
 8007f44:	687b      	ldr	r3, [r7, #4]
 8007f46:	605a      	str	r2, [r3, #4]
 8007f48:	bf00      	nop
 8007f4a:	370c      	adds	r7, #12
 8007f4c:	46bd      	mov	sp, r7
 8007f4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f52:	4770      	bx	lr
 8007f54:	20001ef0 	.word	0x20001ef0
 8007f58:	20001edc 	.word	0x20001edc

08007f5c <xTaskCheckForTimeOut>:
 8007f5c:	b580      	push	{r7, lr}
 8007f5e:	b088      	sub	sp, #32
 8007f60:	af00      	add	r7, sp, #0
 8007f62:	6078      	str	r0, [r7, #4]
 8007f64:	6039      	str	r1, [r7, #0]
 8007f66:	687b      	ldr	r3, [r7, #4]
 8007f68:	2b00      	cmp	r3, #0
 8007f6a:	d10a      	bne.n	8007f82 <xTaskCheckForTimeOut+0x26>
 8007f6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f70:	f383 8811 	msr	BASEPRI, r3
 8007f74:	f3bf 8f6f 	isb	sy
 8007f78:	f3bf 8f4f 	dsb	sy
 8007f7c:	613b      	str	r3, [r7, #16]
 8007f7e:	bf00      	nop
 8007f80:	e7fe      	b.n	8007f80 <xTaskCheckForTimeOut+0x24>
 8007f82:	683b      	ldr	r3, [r7, #0]
 8007f84:	2b00      	cmp	r3, #0
 8007f86:	d10a      	bne.n	8007f9e <xTaskCheckForTimeOut+0x42>
 8007f88:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f8c:	f383 8811 	msr	BASEPRI, r3
 8007f90:	f3bf 8f6f 	isb	sy
 8007f94:	f3bf 8f4f 	dsb	sy
 8007f98:	60fb      	str	r3, [r7, #12]
 8007f9a:	bf00      	nop
 8007f9c:	e7fe      	b.n	8007f9c <xTaskCheckForTimeOut+0x40>
 8007f9e:	f000 ff39 	bl	8008e14 <vPortEnterCritical>
 8007fa2:	4b1d      	ldr	r3, [pc, #116]	; (8008018 <xTaskCheckForTimeOut+0xbc>)
 8007fa4:	681b      	ldr	r3, [r3, #0]
 8007fa6:	61bb      	str	r3, [r7, #24]
 8007fa8:	687b      	ldr	r3, [r7, #4]
 8007faa:	685b      	ldr	r3, [r3, #4]
 8007fac:	69ba      	ldr	r2, [r7, #24]
 8007fae:	1ad3      	subs	r3, r2, r3
 8007fb0:	617b      	str	r3, [r7, #20]
 8007fb2:	683b      	ldr	r3, [r7, #0]
 8007fb4:	681b      	ldr	r3, [r3, #0]
 8007fb6:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007fba:	d102      	bne.n	8007fc2 <xTaskCheckForTimeOut+0x66>
 8007fbc:	2300      	movs	r3, #0
 8007fbe:	61fb      	str	r3, [r7, #28]
 8007fc0:	e023      	b.n	800800a <xTaskCheckForTimeOut+0xae>
 8007fc2:	687b      	ldr	r3, [r7, #4]
 8007fc4:	681a      	ldr	r2, [r3, #0]
 8007fc6:	4b15      	ldr	r3, [pc, #84]	; (800801c <xTaskCheckForTimeOut+0xc0>)
 8007fc8:	681b      	ldr	r3, [r3, #0]
 8007fca:	429a      	cmp	r2, r3
 8007fcc:	d007      	beq.n	8007fde <xTaskCheckForTimeOut+0x82>
 8007fce:	687b      	ldr	r3, [r7, #4]
 8007fd0:	685b      	ldr	r3, [r3, #4]
 8007fd2:	69ba      	ldr	r2, [r7, #24]
 8007fd4:	429a      	cmp	r2, r3
 8007fd6:	d302      	bcc.n	8007fde <xTaskCheckForTimeOut+0x82>
 8007fd8:	2301      	movs	r3, #1
 8007fda:	61fb      	str	r3, [r7, #28]
 8007fdc:	e015      	b.n	800800a <xTaskCheckForTimeOut+0xae>
 8007fde:	683b      	ldr	r3, [r7, #0]
 8007fe0:	681b      	ldr	r3, [r3, #0]
 8007fe2:	697a      	ldr	r2, [r7, #20]
 8007fe4:	429a      	cmp	r2, r3
 8007fe6:	d20b      	bcs.n	8008000 <xTaskCheckForTimeOut+0xa4>
 8007fe8:	683b      	ldr	r3, [r7, #0]
 8007fea:	681a      	ldr	r2, [r3, #0]
 8007fec:	697b      	ldr	r3, [r7, #20]
 8007fee:	1ad2      	subs	r2, r2, r3
 8007ff0:	683b      	ldr	r3, [r7, #0]
 8007ff2:	601a      	str	r2, [r3, #0]
 8007ff4:	6878      	ldr	r0, [r7, #4]
 8007ff6:	f7ff ff9b 	bl	8007f30 <vTaskInternalSetTimeOutState>
 8007ffa:	2300      	movs	r3, #0
 8007ffc:	61fb      	str	r3, [r7, #28]
 8007ffe:	e004      	b.n	800800a <xTaskCheckForTimeOut+0xae>
 8008000:	683b      	ldr	r3, [r7, #0]
 8008002:	2200      	movs	r2, #0
 8008004:	601a      	str	r2, [r3, #0]
 8008006:	2301      	movs	r3, #1
 8008008:	61fb      	str	r3, [r7, #28]
 800800a:	f000 ff33 	bl	8008e74 <vPortExitCritical>
 800800e:	69fb      	ldr	r3, [r7, #28]
 8008010:	4618      	mov	r0, r3
 8008012:	3720      	adds	r7, #32
 8008014:	46bd      	mov	sp, r7
 8008016:	bd80      	pop	{r7, pc}
 8008018:	20001edc 	.word	0x20001edc
 800801c:	20001ef0 	.word	0x20001ef0

08008020 <vTaskMissedYield>:
 8008020:	b480      	push	{r7}
 8008022:	af00      	add	r7, sp, #0
 8008024:	4b03      	ldr	r3, [pc, #12]	; (8008034 <vTaskMissedYield+0x14>)
 8008026:	2201      	movs	r2, #1
 8008028:	601a      	str	r2, [r3, #0]
 800802a:	bf00      	nop
 800802c:	46bd      	mov	sp, r7
 800802e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008032:	4770      	bx	lr
 8008034:	20001eec 	.word	0x20001eec

08008038 <prvIdleTask>:
 8008038:	b580      	push	{r7, lr}
 800803a:	b082      	sub	sp, #8
 800803c:	af00      	add	r7, sp, #0
 800803e:	6078      	str	r0, [r7, #4]
 8008040:	f000 f852 	bl	80080e8 <prvCheckTasksWaitingTermination>
 8008044:	4b06      	ldr	r3, [pc, #24]	; (8008060 <prvIdleTask+0x28>)
 8008046:	681b      	ldr	r3, [r3, #0]
 8008048:	2b01      	cmp	r3, #1
 800804a:	d9f9      	bls.n	8008040 <prvIdleTask+0x8>
 800804c:	4b05      	ldr	r3, [pc, #20]	; (8008064 <prvIdleTask+0x2c>)
 800804e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008052:	601a      	str	r2, [r3, #0]
 8008054:	f3bf 8f4f 	dsb	sy
 8008058:	f3bf 8f6f 	isb	sy
 800805c:	e7f0      	b.n	8008040 <prvIdleTask+0x8>
 800805e:	bf00      	nop
 8008060:	20001a08 	.word	0x20001a08
 8008064:	e000ed04 	.word	0xe000ed04

08008068 <prvInitialiseTaskLists>:
 8008068:	b580      	push	{r7, lr}
 800806a:	b082      	sub	sp, #8
 800806c:	af00      	add	r7, sp, #0
 800806e:	2300      	movs	r3, #0
 8008070:	607b      	str	r3, [r7, #4]
 8008072:	e00c      	b.n	800808e <prvInitialiseTaskLists+0x26>
 8008074:	687a      	ldr	r2, [r7, #4]
 8008076:	4613      	mov	r3, r2
 8008078:	009b      	lsls	r3, r3, #2
 800807a:	4413      	add	r3, r2
 800807c:	009b      	lsls	r3, r3, #2
 800807e:	4a12      	ldr	r2, [pc, #72]	; (80080c8 <prvInitialiseTaskLists+0x60>)
 8008080:	4413      	add	r3, r2
 8008082:	4618      	mov	r0, r3
 8008084:	f7fe fc10 	bl	80068a8 <vListInitialise>
 8008088:	687b      	ldr	r3, [r7, #4]
 800808a:	3301      	adds	r3, #1
 800808c:	607b      	str	r3, [r7, #4]
 800808e:	687b      	ldr	r3, [r7, #4]
 8008090:	2b37      	cmp	r3, #55	; 0x37
 8008092:	d9ef      	bls.n	8008074 <prvInitialiseTaskLists+0xc>
 8008094:	480d      	ldr	r0, [pc, #52]	; (80080cc <prvInitialiseTaskLists+0x64>)
 8008096:	f7fe fc07 	bl	80068a8 <vListInitialise>
 800809a:	480d      	ldr	r0, [pc, #52]	; (80080d0 <prvInitialiseTaskLists+0x68>)
 800809c:	f7fe fc04 	bl	80068a8 <vListInitialise>
 80080a0:	480c      	ldr	r0, [pc, #48]	; (80080d4 <prvInitialiseTaskLists+0x6c>)
 80080a2:	f7fe fc01 	bl	80068a8 <vListInitialise>
 80080a6:	480c      	ldr	r0, [pc, #48]	; (80080d8 <prvInitialiseTaskLists+0x70>)
 80080a8:	f7fe fbfe 	bl	80068a8 <vListInitialise>
 80080ac:	480b      	ldr	r0, [pc, #44]	; (80080dc <prvInitialiseTaskLists+0x74>)
 80080ae:	f7fe fbfb 	bl	80068a8 <vListInitialise>
 80080b2:	4b0b      	ldr	r3, [pc, #44]	; (80080e0 <prvInitialiseTaskLists+0x78>)
 80080b4:	4a05      	ldr	r2, [pc, #20]	; (80080cc <prvInitialiseTaskLists+0x64>)
 80080b6:	601a      	str	r2, [r3, #0]
 80080b8:	4b0a      	ldr	r3, [pc, #40]	; (80080e4 <prvInitialiseTaskLists+0x7c>)
 80080ba:	4a05      	ldr	r2, [pc, #20]	; (80080d0 <prvInitialiseTaskLists+0x68>)
 80080bc:	601a      	str	r2, [r3, #0]
 80080be:	bf00      	nop
 80080c0:	3708      	adds	r7, #8
 80080c2:	46bd      	mov	sp, r7
 80080c4:	bd80      	pop	{r7, pc}
 80080c6:	bf00      	nop
 80080c8:	20001a08 	.word	0x20001a08
 80080cc:	20001e68 	.word	0x20001e68
 80080d0:	20001e7c 	.word	0x20001e7c
 80080d4:	20001e98 	.word	0x20001e98
 80080d8:	20001eac 	.word	0x20001eac
 80080dc:	20001ec4 	.word	0x20001ec4
 80080e0:	20001e90 	.word	0x20001e90
 80080e4:	20001e94 	.word	0x20001e94

080080e8 <prvCheckTasksWaitingTermination>:
 80080e8:	b580      	push	{r7, lr}
 80080ea:	b082      	sub	sp, #8
 80080ec:	af00      	add	r7, sp, #0
 80080ee:	e019      	b.n	8008124 <prvCheckTasksWaitingTermination+0x3c>
 80080f0:	f000 fe90 	bl	8008e14 <vPortEnterCritical>
 80080f4:	4b10      	ldr	r3, [pc, #64]	; (8008138 <prvCheckTasksWaitingTermination+0x50>)
 80080f6:	68db      	ldr	r3, [r3, #12]
 80080f8:	68db      	ldr	r3, [r3, #12]
 80080fa:	607b      	str	r3, [r7, #4]
 80080fc:	687b      	ldr	r3, [r7, #4]
 80080fe:	3304      	adds	r3, #4
 8008100:	4618      	mov	r0, r3
 8008102:	f7fe fc5b 	bl	80069bc <uxListRemove>
 8008106:	4b0d      	ldr	r3, [pc, #52]	; (800813c <prvCheckTasksWaitingTermination+0x54>)
 8008108:	681b      	ldr	r3, [r3, #0]
 800810a:	3b01      	subs	r3, #1
 800810c:	4a0b      	ldr	r2, [pc, #44]	; (800813c <prvCheckTasksWaitingTermination+0x54>)
 800810e:	6013      	str	r3, [r2, #0]
 8008110:	4b0b      	ldr	r3, [pc, #44]	; (8008140 <prvCheckTasksWaitingTermination+0x58>)
 8008112:	681b      	ldr	r3, [r3, #0]
 8008114:	3b01      	subs	r3, #1
 8008116:	4a0a      	ldr	r2, [pc, #40]	; (8008140 <prvCheckTasksWaitingTermination+0x58>)
 8008118:	6013      	str	r3, [r2, #0]
 800811a:	f000 feab 	bl	8008e74 <vPortExitCritical>
 800811e:	6878      	ldr	r0, [r7, #4]
 8008120:	f000 f810 	bl	8008144 <prvDeleteTCB>
 8008124:	4b06      	ldr	r3, [pc, #24]	; (8008140 <prvCheckTasksWaitingTermination+0x58>)
 8008126:	681b      	ldr	r3, [r3, #0]
 8008128:	2b00      	cmp	r3, #0
 800812a:	d1e1      	bne.n	80080f0 <prvCheckTasksWaitingTermination+0x8>
 800812c:	bf00      	nop
 800812e:	bf00      	nop
 8008130:	3708      	adds	r7, #8
 8008132:	46bd      	mov	sp, r7
 8008134:	bd80      	pop	{r7, pc}
 8008136:	bf00      	nop
 8008138:	20001eac 	.word	0x20001eac
 800813c:	20001ed8 	.word	0x20001ed8
 8008140:	20001ec0 	.word	0x20001ec0

08008144 <prvDeleteTCB>:
 8008144:	b580      	push	{r7, lr}
 8008146:	b084      	sub	sp, #16
 8008148:	af00      	add	r7, sp, #0
 800814a:	6078      	str	r0, [r7, #4]
 800814c:	687b      	ldr	r3, [r7, #4]
 800814e:	3354      	adds	r3, #84	; 0x54
 8008150:	4618      	mov	r0, r3
 8008152:	f001 fca3 	bl	8009a9c <_reclaim_reent>
 8008156:	687b      	ldr	r3, [r7, #4]
 8008158:	f893 30a5 	ldrb.w	r3, [r3, #165]	; 0xa5
 800815c:	2b00      	cmp	r3, #0
 800815e:	d108      	bne.n	8008172 <prvDeleteTCB+0x2e>
 8008160:	687b      	ldr	r3, [r7, #4]
 8008162:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008164:	4618      	mov	r0, r3
 8008166:	f001 f843 	bl	80091f0 <vPortFree>
 800816a:	6878      	ldr	r0, [r7, #4]
 800816c:	f001 f840 	bl	80091f0 <vPortFree>
 8008170:	e018      	b.n	80081a4 <prvDeleteTCB+0x60>
 8008172:	687b      	ldr	r3, [r7, #4]
 8008174:	f893 30a5 	ldrb.w	r3, [r3, #165]	; 0xa5
 8008178:	2b01      	cmp	r3, #1
 800817a:	d103      	bne.n	8008184 <prvDeleteTCB+0x40>
 800817c:	6878      	ldr	r0, [r7, #4]
 800817e:	f001 f837 	bl	80091f0 <vPortFree>
 8008182:	e00f      	b.n	80081a4 <prvDeleteTCB+0x60>
 8008184:	687b      	ldr	r3, [r7, #4]
 8008186:	f893 30a5 	ldrb.w	r3, [r3, #165]	; 0xa5
 800818a:	2b02      	cmp	r3, #2
 800818c:	d00a      	beq.n	80081a4 <prvDeleteTCB+0x60>
 800818e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008192:	f383 8811 	msr	BASEPRI, r3
 8008196:	f3bf 8f6f 	isb	sy
 800819a:	f3bf 8f4f 	dsb	sy
 800819e:	60fb      	str	r3, [r7, #12]
 80081a0:	bf00      	nop
 80081a2:	e7fe      	b.n	80081a2 <prvDeleteTCB+0x5e>
 80081a4:	bf00      	nop
 80081a6:	3710      	adds	r7, #16
 80081a8:	46bd      	mov	sp, r7
 80081aa:	bd80      	pop	{r7, pc}

080081ac <prvResetNextTaskUnblockTime>:
 80081ac:	b480      	push	{r7}
 80081ae:	b083      	sub	sp, #12
 80081b0:	af00      	add	r7, sp, #0
 80081b2:	4b0c      	ldr	r3, [pc, #48]	; (80081e4 <prvResetNextTaskUnblockTime+0x38>)
 80081b4:	681b      	ldr	r3, [r3, #0]
 80081b6:	681b      	ldr	r3, [r3, #0]
 80081b8:	2b00      	cmp	r3, #0
 80081ba:	d104      	bne.n	80081c6 <prvResetNextTaskUnblockTime+0x1a>
 80081bc:	4b0a      	ldr	r3, [pc, #40]	; (80081e8 <prvResetNextTaskUnblockTime+0x3c>)
 80081be:	f04f 32ff 	mov.w	r2, #4294967295
 80081c2:	601a      	str	r2, [r3, #0]
 80081c4:	e008      	b.n	80081d8 <prvResetNextTaskUnblockTime+0x2c>
 80081c6:	4b07      	ldr	r3, [pc, #28]	; (80081e4 <prvResetNextTaskUnblockTime+0x38>)
 80081c8:	681b      	ldr	r3, [r3, #0]
 80081ca:	68db      	ldr	r3, [r3, #12]
 80081cc:	68db      	ldr	r3, [r3, #12]
 80081ce:	607b      	str	r3, [r7, #4]
 80081d0:	687b      	ldr	r3, [r7, #4]
 80081d2:	685b      	ldr	r3, [r3, #4]
 80081d4:	4a04      	ldr	r2, [pc, #16]	; (80081e8 <prvResetNextTaskUnblockTime+0x3c>)
 80081d6:	6013      	str	r3, [r2, #0]
 80081d8:	bf00      	nop
 80081da:	370c      	adds	r7, #12
 80081dc:	46bd      	mov	sp, r7
 80081de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081e2:	4770      	bx	lr
 80081e4:	20001e90 	.word	0x20001e90
 80081e8:	20001ef8 	.word	0x20001ef8

080081ec <xTaskGetSchedulerState>:
 80081ec:	b480      	push	{r7}
 80081ee:	b083      	sub	sp, #12
 80081f0:	af00      	add	r7, sp, #0
 80081f2:	4b0b      	ldr	r3, [pc, #44]	; (8008220 <xTaskGetSchedulerState+0x34>)
 80081f4:	681b      	ldr	r3, [r3, #0]
 80081f6:	2b00      	cmp	r3, #0
 80081f8:	d102      	bne.n	8008200 <xTaskGetSchedulerState+0x14>
 80081fa:	2301      	movs	r3, #1
 80081fc:	607b      	str	r3, [r7, #4]
 80081fe:	e008      	b.n	8008212 <xTaskGetSchedulerState+0x26>
 8008200:	4b08      	ldr	r3, [pc, #32]	; (8008224 <xTaskGetSchedulerState+0x38>)
 8008202:	681b      	ldr	r3, [r3, #0]
 8008204:	2b00      	cmp	r3, #0
 8008206:	d102      	bne.n	800820e <xTaskGetSchedulerState+0x22>
 8008208:	2302      	movs	r3, #2
 800820a:	607b      	str	r3, [r7, #4]
 800820c:	e001      	b.n	8008212 <xTaskGetSchedulerState+0x26>
 800820e:	2300      	movs	r3, #0
 8008210:	607b      	str	r3, [r7, #4]
 8008212:	687b      	ldr	r3, [r7, #4]
 8008214:	4618      	mov	r0, r3
 8008216:	370c      	adds	r7, #12
 8008218:	46bd      	mov	sp, r7
 800821a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800821e:	4770      	bx	lr
 8008220:	20001ee4 	.word	0x20001ee4
 8008224:	20001f00 	.word	0x20001f00

08008228 <xTaskPriorityDisinherit>:
 8008228:	b580      	push	{r7, lr}
 800822a:	b086      	sub	sp, #24
 800822c:	af00      	add	r7, sp, #0
 800822e:	6078      	str	r0, [r7, #4]
 8008230:	687b      	ldr	r3, [r7, #4]
 8008232:	613b      	str	r3, [r7, #16]
 8008234:	2300      	movs	r3, #0
 8008236:	617b      	str	r3, [r7, #20]
 8008238:	687b      	ldr	r3, [r7, #4]
 800823a:	2b00      	cmp	r3, #0
 800823c:	d056      	beq.n	80082ec <xTaskPriorityDisinherit+0xc4>
 800823e:	4b2e      	ldr	r3, [pc, #184]	; (80082f8 <xTaskPriorityDisinherit+0xd0>)
 8008240:	681b      	ldr	r3, [r3, #0]
 8008242:	693a      	ldr	r2, [r7, #16]
 8008244:	429a      	cmp	r2, r3
 8008246:	d00a      	beq.n	800825e <xTaskPriorityDisinherit+0x36>
 8008248:	f04f 0350 	mov.w	r3, #80	; 0x50
 800824c:	f383 8811 	msr	BASEPRI, r3
 8008250:	f3bf 8f6f 	isb	sy
 8008254:	f3bf 8f4f 	dsb	sy
 8008258:	60fb      	str	r3, [r7, #12]
 800825a:	bf00      	nop
 800825c:	e7fe      	b.n	800825c <xTaskPriorityDisinherit+0x34>
 800825e:	693b      	ldr	r3, [r7, #16]
 8008260:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008262:	2b00      	cmp	r3, #0
 8008264:	d10a      	bne.n	800827c <xTaskPriorityDisinherit+0x54>
 8008266:	f04f 0350 	mov.w	r3, #80	; 0x50
 800826a:	f383 8811 	msr	BASEPRI, r3
 800826e:	f3bf 8f6f 	isb	sy
 8008272:	f3bf 8f4f 	dsb	sy
 8008276:	60bb      	str	r3, [r7, #8]
 8008278:	bf00      	nop
 800827a:	e7fe      	b.n	800827a <xTaskPriorityDisinherit+0x52>
 800827c:	693b      	ldr	r3, [r7, #16]
 800827e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008280:	1e5a      	subs	r2, r3, #1
 8008282:	693b      	ldr	r3, [r7, #16]
 8008284:	651a      	str	r2, [r3, #80]	; 0x50
 8008286:	693b      	ldr	r3, [r7, #16]
 8008288:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800828a:	693b      	ldr	r3, [r7, #16]
 800828c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800828e:	429a      	cmp	r2, r3
 8008290:	d02c      	beq.n	80082ec <xTaskPriorityDisinherit+0xc4>
 8008292:	693b      	ldr	r3, [r7, #16]
 8008294:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008296:	2b00      	cmp	r3, #0
 8008298:	d128      	bne.n	80082ec <xTaskPriorityDisinherit+0xc4>
 800829a:	693b      	ldr	r3, [r7, #16]
 800829c:	3304      	adds	r3, #4
 800829e:	4618      	mov	r0, r3
 80082a0:	f7fe fb8c 	bl	80069bc <uxListRemove>
 80082a4:	693b      	ldr	r3, [r7, #16]
 80082a6:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80082a8:	693b      	ldr	r3, [r7, #16]
 80082aa:	62da      	str	r2, [r3, #44]	; 0x2c
 80082ac:	693b      	ldr	r3, [r7, #16]
 80082ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80082b0:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 80082b4:	693b      	ldr	r3, [r7, #16]
 80082b6:	619a      	str	r2, [r3, #24]
 80082b8:	693b      	ldr	r3, [r7, #16]
 80082ba:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80082bc:	4b0f      	ldr	r3, [pc, #60]	; (80082fc <xTaskPriorityDisinherit+0xd4>)
 80082be:	681b      	ldr	r3, [r3, #0]
 80082c0:	429a      	cmp	r2, r3
 80082c2:	d903      	bls.n	80082cc <xTaskPriorityDisinherit+0xa4>
 80082c4:	693b      	ldr	r3, [r7, #16]
 80082c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80082c8:	4a0c      	ldr	r2, [pc, #48]	; (80082fc <xTaskPriorityDisinherit+0xd4>)
 80082ca:	6013      	str	r3, [r2, #0]
 80082cc:	693b      	ldr	r3, [r7, #16]
 80082ce:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80082d0:	4613      	mov	r3, r2
 80082d2:	009b      	lsls	r3, r3, #2
 80082d4:	4413      	add	r3, r2
 80082d6:	009b      	lsls	r3, r3, #2
 80082d8:	4a09      	ldr	r2, [pc, #36]	; (8008300 <xTaskPriorityDisinherit+0xd8>)
 80082da:	441a      	add	r2, r3
 80082dc:	693b      	ldr	r3, [r7, #16]
 80082de:	3304      	adds	r3, #4
 80082e0:	4619      	mov	r1, r3
 80082e2:	4610      	mov	r0, r2
 80082e4:	f7fe fb0d 	bl	8006902 <vListInsertEnd>
 80082e8:	2301      	movs	r3, #1
 80082ea:	617b      	str	r3, [r7, #20]
 80082ec:	697b      	ldr	r3, [r7, #20]
 80082ee:	4618      	mov	r0, r3
 80082f0:	3718      	adds	r7, #24
 80082f2:	46bd      	mov	sp, r7
 80082f4:	bd80      	pop	{r7, pc}
 80082f6:	bf00      	nop
 80082f8:	20001a04 	.word	0x20001a04
 80082fc:	20001ee0 	.word	0x20001ee0
 8008300:	20001a08 	.word	0x20001a08

08008304 <prvAddCurrentTaskToDelayedList>:
 8008304:	b580      	push	{r7, lr}
 8008306:	b084      	sub	sp, #16
 8008308:	af00      	add	r7, sp, #0
 800830a:	6078      	str	r0, [r7, #4]
 800830c:	6039      	str	r1, [r7, #0]
 800830e:	4b21      	ldr	r3, [pc, #132]	; (8008394 <prvAddCurrentTaskToDelayedList+0x90>)
 8008310:	681b      	ldr	r3, [r3, #0]
 8008312:	60fb      	str	r3, [r7, #12]
 8008314:	4b20      	ldr	r3, [pc, #128]	; (8008398 <prvAddCurrentTaskToDelayedList+0x94>)
 8008316:	681b      	ldr	r3, [r3, #0]
 8008318:	3304      	adds	r3, #4
 800831a:	4618      	mov	r0, r3
 800831c:	f7fe fb4e 	bl	80069bc <uxListRemove>
 8008320:	687b      	ldr	r3, [r7, #4]
 8008322:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008326:	d10a      	bne.n	800833e <prvAddCurrentTaskToDelayedList+0x3a>
 8008328:	683b      	ldr	r3, [r7, #0]
 800832a:	2b00      	cmp	r3, #0
 800832c:	d007      	beq.n	800833e <prvAddCurrentTaskToDelayedList+0x3a>
 800832e:	4b1a      	ldr	r3, [pc, #104]	; (8008398 <prvAddCurrentTaskToDelayedList+0x94>)
 8008330:	681b      	ldr	r3, [r3, #0]
 8008332:	3304      	adds	r3, #4
 8008334:	4619      	mov	r1, r3
 8008336:	4819      	ldr	r0, [pc, #100]	; (800839c <prvAddCurrentTaskToDelayedList+0x98>)
 8008338:	f7fe fae3 	bl	8006902 <vListInsertEnd>
 800833c:	e026      	b.n	800838c <prvAddCurrentTaskToDelayedList+0x88>
 800833e:	68fa      	ldr	r2, [r7, #12]
 8008340:	687b      	ldr	r3, [r7, #4]
 8008342:	4413      	add	r3, r2
 8008344:	60bb      	str	r3, [r7, #8]
 8008346:	4b14      	ldr	r3, [pc, #80]	; (8008398 <prvAddCurrentTaskToDelayedList+0x94>)
 8008348:	681b      	ldr	r3, [r3, #0]
 800834a:	68ba      	ldr	r2, [r7, #8]
 800834c:	605a      	str	r2, [r3, #4]
 800834e:	68ba      	ldr	r2, [r7, #8]
 8008350:	68fb      	ldr	r3, [r7, #12]
 8008352:	429a      	cmp	r2, r3
 8008354:	d209      	bcs.n	800836a <prvAddCurrentTaskToDelayedList+0x66>
 8008356:	4b12      	ldr	r3, [pc, #72]	; (80083a0 <prvAddCurrentTaskToDelayedList+0x9c>)
 8008358:	681a      	ldr	r2, [r3, #0]
 800835a:	4b0f      	ldr	r3, [pc, #60]	; (8008398 <prvAddCurrentTaskToDelayedList+0x94>)
 800835c:	681b      	ldr	r3, [r3, #0]
 800835e:	3304      	adds	r3, #4
 8008360:	4619      	mov	r1, r3
 8008362:	4610      	mov	r0, r2
 8008364:	f7fe faf1 	bl	800694a <vListInsert>
 8008368:	e010      	b.n	800838c <prvAddCurrentTaskToDelayedList+0x88>
 800836a:	4b0e      	ldr	r3, [pc, #56]	; (80083a4 <prvAddCurrentTaskToDelayedList+0xa0>)
 800836c:	681a      	ldr	r2, [r3, #0]
 800836e:	4b0a      	ldr	r3, [pc, #40]	; (8008398 <prvAddCurrentTaskToDelayedList+0x94>)
 8008370:	681b      	ldr	r3, [r3, #0]
 8008372:	3304      	adds	r3, #4
 8008374:	4619      	mov	r1, r3
 8008376:	4610      	mov	r0, r2
 8008378:	f7fe fae7 	bl	800694a <vListInsert>
 800837c:	4b0a      	ldr	r3, [pc, #40]	; (80083a8 <prvAddCurrentTaskToDelayedList+0xa4>)
 800837e:	681b      	ldr	r3, [r3, #0]
 8008380:	68ba      	ldr	r2, [r7, #8]
 8008382:	429a      	cmp	r2, r3
 8008384:	d202      	bcs.n	800838c <prvAddCurrentTaskToDelayedList+0x88>
 8008386:	4a08      	ldr	r2, [pc, #32]	; (80083a8 <prvAddCurrentTaskToDelayedList+0xa4>)
 8008388:	68bb      	ldr	r3, [r7, #8]
 800838a:	6013      	str	r3, [r2, #0]
 800838c:	bf00      	nop
 800838e:	3710      	adds	r7, #16
 8008390:	46bd      	mov	sp, r7
 8008392:	bd80      	pop	{r7, pc}
 8008394:	20001edc 	.word	0x20001edc
 8008398:	20001a04 	.word	0x20001a04
 800839c:	20001ec4 	.word	0x20001ec4
 80083a0:	20001e94 	.word	0x20001e94
 80083a4:	20001e90 	.word	0x20001e90
 80083a8:	20001ef8 	.word	0x20001ef8

080083ac <xTimerCreateTimerTask>:
 80083ac:	b580      	push	{r7, lr}
 80083ae:	b08a      	sub	sp, #40	; 0x28
 80083b0:	af04      	add	r7, sp, #16
 80083b2:	2300      	movs	r3, #0
 80083b4:	617b      	str	r3, [r7, #20]
 80083b6:	f000 fba1 	bl	8008afc <prvCheckForValidListAndQueue>
 80083ba:	4b1c      	ldr	r3, [pc, #112]	; (800842c <xTimerCreateTimerTask+0x80>)
 80083bc:	681b      	ldr	r3, [r3, #0]
 80083be:	2b00      	cmp	r3, #0
 80083c0:	d021      	beq.n	8008406 <xTimerCreateTimerTask+0x5a>
 80083c2:	2300      	movs	r3, #0
 80083c4:	60fb      	str	r3, [r7, #12]
 80083c6:	2300      	movs	r3, #0
 80083c8:	60bb      	str	r3, [r7, #8]
 80083ca:	1d3a      	adds	r2, r7, #4
 80083cc:	f107 0108 	add.w	r1, r7, #8
 80083d0:	f107 030c 	add.w	r3, r7, #12
 80083d4:	4618      	mov	r0, r3
 80083d6:	f7fe fa4d 	bl	8006874 <vApplicationGetTimerTaskMemory>
 80083da:	6879      	ldr	r1, [r7, #4]
 80083dc:	68bb      	ldr	r3, [r7, #8]
 80083de:	68fa      	ldr	r2, [r7, #12]
 80083e0:	9202      	str	r2, [sp, #8]
 80083e2:	9301      	str	r3, [sp, #4]
 80083e4:	2302      	movs	r3, #2
 80083e6:	9300      	str	r3, [sp, #0]
 80083e8:	2300      	movs	r3, #0
 80083ea:	460a      	mov	r2, r1
 80083ec:	4910      	ldr	r1, [pc, #64]	; (8008430 <xTimerCreateTimerTask+0x84>)
 80083ee:	4811      	ldr	r0, [pc, #68]	; (8008434 <xTimerCreateTimerTask+0x88>)
 80083f0:	f7ff f8b4 	bl	800755c <xTaskCreateStatic>
 80083f4:	4603      	mov	r3, r0
 80083f6:	4a10      	ldr	r2, [pc, #64]	; (8008438 <xTimerCreateTimerTask+0x8c>)
 80083f8:	6013      	str	r3, [r2, #0]
 80083fa:	4b0f      	ldr	r3, [pc, #60]	; (8008438 <xTimerCreateTimerTask+0x8c>)
 80083fc:	681b      	ldr	r3, [r3, #0]
 80083fe:	2b00      	cmp	r3, #0
 8008400:	d001      	beq.n	8008406 <xTimerCreateTimerTask+0x5a>
 8008402:	2301      	movs	r3, #1
 8008404:	617b      	str	r3, [r7, #20]
 8008406:	697b      	ldr	r3, [r7, #20]
 8008408:	2b00      	cmp	r3, #0
 800840a:	d10a      	bne.n	8008422 <xTimerCreateTimerTask+0x76>
 800840c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008410:	f383 8811 	msr	BASEPRI, r3
 8008414:	f3bf 8f6f 	isb	sy
 8008418:	f3bf 8f4f 	dsb	sy
 800841c:	613b      	str	r3, [r7, #16]
 800841e:	bf00      	nop
 8008420:	e7fe      	b.n	8008420 <xTimerCreateTimerTask+0x74>
 8008422:	697b      	ldr	r3, [r7, #20]
 8008424:	4618      	mov	r0, r3
 8008426:	3718      	adds	r7, #24
 8008428:	46bd      	mov	sp, r7
 800842a:	bd80      	pop	{r7, pc}
 800842c:	20001f34 	.word	0x20001f34
 8008430:	0800ac64 	.word	0x0800ac64
 8008434:	080086a5 	.word	0x080086a5
 8008438:	20001f38 	.word	0x20001f38

0800843c <xTimerCreate>:
 800843c:	b580      	push	{r7, lr}
 800843e:	b088      	sub	sp, #32
 8008440:	af02      	add	r7, sp, #8
 8008442:	60f8      	str	r0, [r7, #12]
 8008444:	60b9      	str	r1, [r7, #8]
 8008446:	607a      	str	r2, [r7, #4]
 8008448:	603b      	str	r3, [r7, #0]
 800844a:	202c      	movs	r0, #44	; 0x2c
 800844c:	f000 fe04 	bl	8009058 <pvPortMalloc>
 8008450:	6178      	str	r0, [r7, #20]
 8008452:	697b      	ldr	r3, [r7, #20]
 8008454:	2b00      	cmp	r3, #0
 8008456:	d00d      	beq.n	8008474 <xTimerCreate+0x38>
 8008458:	697b      	ldr	r3, [r7, #20]
 800845a:	2200      	movs	r2, #0
 800845c:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8008460:	697b      	ldr	r3, [r7, #20]
 8008462:	9301      	str	r3, [sp, #4]
 8008464:	6a3b      	ldr	r3, [r7, #32]
 8008466:	9300      	str	r3, [sp, #0]
 8008468:	683b      	ldr	r3, [r7, #0]
 800846a:	687a      	ldr	r2, [r7, #4]
 800846c:	68b9      	ldr	r1, [r7, #8]
 800846e:	68f8      	ldr	r0, [r7, #12]
 8008470:	f000 f843 	bl	80084fa <prvInitialiseNewTimer>
 8008474:	697b      	ldr	r3, [r7, #20]
 8008476:	4618      	mov	r0, r3
 8008478:	3718      	adds	r7, #24
 800847a:	46bd      	mov	sp, r7
 800847c:	bd80      	pop	{r7, pc}

0800847e <xTimerCreateStatic>:
 800847e:	b580      	push	{r7, lr}
 8008480:	b08a      	sub	sp, #40	; 0x28
 8008482:	af02      	add	r7, sp, #8
 8008484:	60f8      	str	r0, [r7, #12]
 8008486:	60b9      	str	r1, [r7, #8]
 8008488:	607a      	str	r2, [r7, #4]
 800848a:	603b      	str	r3, [r7, #0]
 800848c:	232c      	movs	r3, #44	; 0x2c
 800848e:	613b      	str	r3, [r7, #16]
 8008490:	693b      	ldr	r3, [r7, #16]
 8008492:	2b2c      	cmp	r3, #44	; 0x2c
 8008494:	d00a      	beq.n	80084ac <xTimerCreateStatic+0x2e>
 8008496:	f04f 0350 	mov.w	r3, #80	; 0x50
 800849a:	f383 8811 	msr	BASEPRI, r3
 800849e:	f3bf 8f6f 	isb	sy
 80084a2:	f3bf 8f4f 	dsb	sy
 80084a6:	61bb      	str	r3, [r7, #24]
 80084a8:	bf00      	nop
 80084aa:	e7fe      	b.n	80084aa <xTimerCreateStatic+0x2c>
 80084ac:	693b      	ldr	r3, [r7, #16]
 80084ae:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80084b0:	2b00      	cmp	r3, #0
 80084b2:	d10a      	bne.n	80084ca <xTimerCreateStatic+0x4c>
 80084b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084b8:	f383 8811 	msr	BASEPRI, r3
 80084bc:	f3bf 8f6f 	isb	sy
 80084c0:	f3bf 8f4f 	dsb	sy
 80084c4:	617b      	str	r3, [r7, #20]
 80084c6:	bf00      	nop
 80084c8:	e7fe      	b.n	80084c8 <xTimerCreateStatic+0x4a>
 80084ca:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80084cc:	61fb      	str	r3, [r7, #28]
 80084ce:	69fb      	ldr	r3, [r7, #28]
 80084d0:	2b00      	cmp	r3, #0
 80084d2:	d00d      	beq.n	80084f0 <xTimerCreateStatic+0x72>
 80084d4:	69fb      	ldr	r3, [r7, #28]
 80084d6:	2202      	movs	r2, #2
 80084d8:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 80084dc:	69fb      	ldr	r3, [r7, #28]
 80084de:	9301      	str	r3, [sp, #4]
 80084e0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80084e2:	9300      	str	r3, [sp, #0]
 80084e4:	683b      	ldr	r3, [r7, #0]
 80084e6:	687a      	ldr	r2, [r7, #4]
 80084e8:	68b9      	ldr	r1, [r7, #8]
 80084ea:	68f8      	ldr	r0, [r7, #12]
 80084ec:	f000 f805 	bl	80084fa <prvInitialiseNewTimer>
 80084f0:	69fb      	ldr	r3, [r7, #28]
 80084f2:	4618      	mov	r0, r3
 80084f4:	3720      	adds	r7, #32
 80084f6:	46bd      	mov	sp, r7
 80084f8:	bd80      	pop	{r7, pc}

080084fa <prvInitialiseNewTimer>:
 80084fa:	b580      	push	{r7, lr}
 80084fc:	b086      	sub	sp, #24
 80084fe:	af00      	add	r7, sp, #0
 8008500:	60f8      	str	r0, [r7, #12]
 8008502:	60b9      	str	r1, [r7, #8]
 8008504:	607a      	str	r2, [r7, #4]
 8008506:	603b      	str	r3, [r7, #0]
 8008508:	68bb      	ldr	r3, [r7, #8]
 800850a:	2b00      	cmp	r3, #0
 800850c:	d10a      	bne.n	8008524 <prvInitialiseNewTimer+0x2a>
 800850e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008512:	f383 8811 	msr	BASEPRI, r3
 8008516:	f3bf 8f6f 	isb	sy
 800851a:	f3bf 8f4f 	dsb	sy
 800851e:	617b      	str	r3, [r7, #20]
 8008520:	bf00      	nop
 8008522:	e7fe      	b.n	8008522 <prvInitialiseNewTimer+0x28>
 8008524:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008526:	2b00      	cmp	r3, #0
 8008528:	d01e      	beq.n	8008568 <prvInitialiseNewTimer+0x6e>
 800852a:	f000 fae7 	bl	8008afc <prvCheckForValidListAndQueue>
 800852e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008530:	68fa      	ldr	r2, [r7, #12]
 8008532:	601a      	str	r2, [r3, #0]
 8008534:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008536:	68ba      	ldr	r2, [r7, #8]
 8008538:	619a      	str	r2, [r3, #24]
 800853a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800853c:	683a      	ldr	r2, [r7, #0]
 800853e:	61da      	str	r2, [r3, #28]
 8008540:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008542:	6a3a      	ldr	r2, [r7, #32]
 8008544:	621a      	str	r2, [r3, #32]
 8008546:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008548:	3304      	adds	r3, #4
 800854a:	4618      	mov	r0, r3
 800854c:	f7fe f9cc 	bl	80068e8 <vListInitialiseItem>
 8008550:	687b      	ldr	r3, [r7, #4]
 8008552:	2b00      	cmp	r3, #0
 8008554:	d008      	beq.n	8008568 <prvInitialiseNewTimer+0x6e>
 8008556:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008558:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800855c:	f043 0304 	orr.w	r3, r3, #4
 8008560:	b2da      	uxtb	r2, r3
 8008562:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008564:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8008568:	bf00      	nop
 800856a:	3718      	adds	r7, #24
 800856c:	46bd      	mov	sp, r7
 800856e:	bd80      	pop	{r7, pc}

08008570 <xTimerGenericCommand>:
 8008570:	b580      	push	{r7, lr}
 8008572:	b08a      	sub	sp, #40	; 0x28
 8008574:	af00      	add	r7, sp, #0
 8008576:	60f8      	str	r0, [r7, #12]
 8008578:	60b9      	str	r1, [r7, #8]
 800857a:	607a      	str	r2, [r7, #4]
 800857c:	603b      	str	r3, [r7, #0]
 800857e:	2300      	movs	r3, #0
 8008580:	627b      	str	r3, [r7, #36]	; 0x24
 8008582:	68fb      	ldr	r3, [r7, #12]
 8008584:	2b00      	cmp	r3, #0
 8008586:	d10a      	bne.n	800859e <xTimerGenericCommand+0x2e>
 8008588:	f04f 0350 	mov.w	r3, #80	; 0x50
 800858c:	f383 8811 	msr	BASEPRI, r3
 8008590:	f3bf 8f6f 	isb	sy
 8008594:	f3bf 8f4f 	dsb	sy
 8008598:	623b      	str	r3, [r7, #32]
 800859a:	bf00      	nop
 800859c:	e7fe      	b.n	800859c <xTimerGenericCommand+0x2c>
 800859e:	4b1a      	ldr	r3, [pc, #104]	; (8008608 <xTimerGenericCommand+0x98>)
 80085a0:	681b      	ldr	r3, [r3, #0]
 80085a2:	2b00      	cmp	r3, #0
 80085a4:	d02a      	beq.n	80085fc <xTimerGenericCommand+0x8c>
 80085a6:	68bb      	ldr	r3, [r7, #8]
 80085a8:	613b      	str	r3, [r7, #16]
 80085aa:	687b      	ldr	r3, [r7, #4]
 80085ac:	617b      	str	r3, [r7, #20]
 80085ae:	68fb      	ldr	r3, [r7, #12]
 80085b0:	61bb      	str	r3, [r7, #24]
 80085b2:	68bb      	ldr	r3, [r7, #8]
 80085b4:	2b05      	cmp	r3, #5
 80085b6:	dc18      	bgt.n	80085ea <xTimerGenericCommand+0x7a>
 80085b8:	f7ff fe18 	bl	80081ec <xTaskGetSchedulerState>
 80085bc:	4603      	mov	r3, r0
 80085be:	2b02      	cmp	r3, #2
 80085c0:	d109      	bne.n	80085d6 <xTimerGenericCommand+0x66>
 80085c2:	4b11      	ldr	r3, [pc, #68]	; (8008608 <xTimerGenericCommand+0x98>)
 80085c4:	6818      	ldr	r0, [r3, #0]
 80085c6:	f107 0110 	add.w	r1, r7, #16
 80085ca:	2300      	movs	r3, #0
 80085cc:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80085ce:	f7fe fb5d 	bl	8006c8c <xQueueGenericSend>
 80085d2:	6278      	str	r0, [r7, #36]	; 0x24
 80085d4:	e012      	b.n	80085fc <xTimerGenericCommand+0x8c>
 80085d6:	4b0c      	ldr	r3, [pc, #48]	; (8008608 <xTimerGenericCommand+0x98>)
 80085d8:	6818      	ldr	r0, [r3, #0]
 80085da:	f107 0110 	add.w	r1, r7, #16
 80085de:	2300      	movs	r3, #0
 80085e0:	2200      	movs	r2, #0
 80085e2:	f7fe fb53 	bl	8006c8c <xQueueGenericSend>
 80085e6:	6278      	str	r0, [r7, #36]	; 0x24
 80085e8:	e008      	b.n	80085fc <xTimerGenericCommand+0x8c>
 80085ea:	4b07      	ldr	r3, [pc, #28]	; (8008608 <xTimerGenericCommand+0x98>)
 80085ec:	6818      	ldr	r0, [r3, #0]
 80085ee:	f107 0110 	add.w	r1, r7, #16
 80085f2:	2300      	movs	r3, #0
 80085f4:	683a      	ldr	r2, [r7, #0]
 80085f6:	f7fe fc47 	bl	8006e88 <xQueueGenericSendFromISR>
 80085fa:	6278      	str	r0, [r7, #36]	; 0x24
 80085fc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80085fe:	4618      	mov	r0, r3
 8008600:	3728      	adds	r7, #40	; 0x28
 8008602:	46bd      	mov	sp, r7
 8008604:	bd80      	pop	{r7, pc}
 8008606:	bf00      	nop
 8008608:	20001f34 	.word	0x20001f34

0800860c <prvProcessExpiredTimer>:
 800860c:	b580      	push	{r7, lr}
 800860e:	b088      	sub	sp, #32
 8008610:	af02      	add	r7, sp, #8
 8008612:	6078      	str	r0, [r7, #4]
 8008614:	6039      	str	r1, [r7, #0]
 8008616:	4b22      	ldr	r3, [pc, #136]	; (80086a0 <prvProcessExpiredTimer+0x94>)
 8008618:	681b      	ldr	r3, [r3, #0]
 800861a:	68db      	ldr	r3, [r3, #12]
 800861c:	68db      	ldr	r3, [r3, #12]
 800861e:	617b      	str	r3, [r7, #20]
 8008620:	697b      	ldr	r3, [r7, #20]
 8008622:	3304      	adds	r3, #4
 8008624:	4618      	mov	r0, r3
 8008626:	f7fe f9c9 	bl	80069bc <uxListRemove>
 800862a:	697b      	ldr	r3, [r7, #20]
 800862c:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8008630:	f003 0304 	and.w	r3, r3, #4
 8008634:	2b00      	cmp	r3, #0
 8008636:	d022      	beq.n	800867e <prvProcessExpiredTimer+0x72>
 8008638:	697b      	ldr	r3, [r7, #20]
 800863a:	699a      	ldr	r2, [r3, #24]
 800863c:	687b      	ldr	r3, [r7, #4]
 800863e:	18d1      	adds	r1, r2, r3
 8008640:	687b      	ldr	r3, [r7, #4]
 8008642:	683a      	ldr	r2, [r7, #0]
 8008644:	6978      	ldr	r0, [r7, #20]
 8008646:	f000 f8d1 	bl	80087ec <prvInsertTimerInActiveList>
 800864a:	4603      	mov	r3, r0
 800864c:	2b00      	cmp	r3, #0
 800864e:	d01f      	beq.n	8008690 <prvProcessExpiredTimer+0x84>
 8008650:	2300      	movs	r3, #0
 8008652:	9300      	str	r3, [sp, #0]
 8008654:	2300      	movs	r3, #0
 8008656:	687a      	ldr	r2, [r7, #4]
 8008658:	2100      	movs	r1, #0
 800865a:	6978      	ldr	r0, [r7, #20]
 800865c:	f7ff ff88 	bl	8008570 <xTimerGenericCommand>
 8008660:	6138      	str	r0, [r7, #16]
 8008662:	693b      	ldr	r3, [r7, #16]
 8008664:	2b00      	cmp	r3, #0
 8008666:	d113      	bne.n	8008690 <prvProcessExpiredTimer+0x84>
 8008668:	f04f 0350 	mov.w	r3, #80	; 0x50
 800866c:	f383 8811 	msr	BASEPRI, r3
 8008670:	f3bf 8f6f 	isb	sy
 8008674:	f3bf 8f4f 	dsb	sy
 8008678:	60fb      	str	r3, [r7, #12]
 800867a:	bf00      	nop
 800867c:	e7fe      	b.n	800867c <prvProcessExpiredTimer+0x70>
 800867e:	697b      	ldr	r3, [r7, #20]
 8008680:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8008684:	f023 0301 	bic.w	r3, r3, #1
 8008688:	b2da      	uxtb	r2, r3
 800868a:	697b      	ldr	r3, [r7, #20]
 800868c:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8008690:	697b      	ldr	r3, [r7, #20]
 8008692:	6a1b      	ldr	r3, [r3, #32]
 8008694:	6978      	ldr	r0, [r7, #20]
 8008696:	4798      	blx	r3
 8008698:	bf00      	nop
 800869a:	3718      	adds	r7, #24
 800869c:	46bd      	mov	sp, r7
 800869e:	bd80      	pop	{r7, pc}
 80086a0:	20001f2c 	.word	0x20001f2c

080086a4 <prvTimerTask>:
 80086a4:	b580      	push	{r7, lr}
 80086a6:	b084      	sub	sp, #16
 80086a8:	af00      	add	r7, sp, #0
 80086aa:	6078      	str	r0, [r7, #4]
 80086ac:	f107 0308 	add.w	r3, r7, #8
 80086b0:	4618      	mov	r0, r3
 80086b2:	f000 f857 	bl	8008764 <prvGetNextExpireTime>
 80086b6:	60f8      	str	r0, [r7, #12]
 80086b8:	68bb      	ldr	r3, [r7, #8]
 80086ba:	4619      	mov	r1, r3
 80086bc:	68f8      	ldr	r0, [r7, #12]
 80086be:	f000 f803 	bl	80086c8 <prvProcessTimerOrBlockTask>
 80086c2:	f000 f8d5 	bl	8008870 <prvProcessReceivedCommands>
 80086c6:	e7f1      	b.n	80086ac <prvTimerTask+0x8>

080086c8 <prvProcessTimerOrBlockTask>:
 80086c8:	b580      	push	{r7, lr}
 80086ca:	b084      	sub	sp, #16
 80086cc:	af00      	add	r7, sp, #0
 80086ce:	6078      	str	r0, [r7, #4]
 80086d0:	6039      	str	r1, [r7, #0]
 80086d2:	f7ff f99f 	bl	8007a14 <vTaskSuspendAll>
 80086d6:	f107 0308 	add.w	r3, r7, #8
 80086da:	4618      	mov	r0, r3
 80086dc:	f000 f866 	bl	80087ac <prvSampleTimeNow>
 80086e0:	60f8      	str	r0, [r7, #12]
 80086e2:	68bb      	ldr	r3, [r7, #8]
 80086e4:	2b00      	cmp	r3, #0
 80086e6:	d130      	bne.n	800874a <prvProcessTimerOrBlockTask+0x82>
 80086e8:	683b      	ldr	r3, [r7, #0]
 80086ea:	2b00      	cmp	r3, #0
 80086ec:	d10a      	bne.n	8008704 <prvProcessTimerOrBlockTask+0x3c>
 80086ee:	687a      	ldr	r2, [r7, #4]
 80086f0:	68fb      	ldr	r3, [r7, #12]
 80086f2:	429a      	cmp	r2, r3
 80086f4:	d806      	bhi.n	8008704 <prvProcessTimerOrBlockTask+0x3c>
 80086f6:	f7ff f99b 	bl	8007a30 <xTaskResumeAll>
 80086fa:	68f9      	ldr	r1, [r7, #12]
 80086fc:	6878      	ldr	r0, [r7, #4]
 80086fe:	f7ff ff85 	bl	800860c <prvProcessExpiredTimer>
 8008702:	e024      	b.n	800874e <prvProcessTimerOrBlockTask+0x86>
 8008704:	683b      	ldr	r3, [r7, #0]
 8008706:	2b00      	cmp	r3, #0
 8008708:	d008      	beq.n	800871c <prvProcessTimerOrBlockTask+0x54>
 800870a:	4b13      	ldr	r3, [pc, #76]	; (8008758 <prvProcessTimerOrBlockTask+0x90>)
 800870c:	681b      	ldr	r3, [r3, #0]
 800870e:	681b      	ldr	r3, [r3, #0]
 8008710:	2b00      	cmp	r3, #0
 8008712:	d101      	bne.n	8008718 <prvProcessTimerOrBlockTask+0x50>
 8008714:	2301      	movs	r3, #1
 8008716:	e000      	b.n	800871a <prvProcessTimerOrBlockTask+0x52>
 8008718:	2300      	movs	r3, #0
 800871a:	603b      	str	r3, [r7, #0]
 800871c:	4b0f      	ldr	r3, [pc, #60]	; (800875c <prvProcessTimerOrBlockTask+0x94>)
 800871e:	6818      	ldr	r0, [r3, #0]
 8008720:	687a      	ldr	r2, [r7, #4]
 8008722:	68fb      	ldr	r3, [r7, #12]
 8008724:	1ad3      	subs	r3, r2, r3
 8008726:	683a      	ldr	r2, [r7, #0]
 8008728:	4619      	mov	r1, r3
 800872a:	f7fe fee3 	bl	80074f4 <vQueueWaitForMessageRestricted>
 800872e:	f7ff f97f 	bl	8007a30 <xTaskResumeAll>
 8008732:	4603      	mov	r3, r0
 8008734:	2b00      	cmp	r3, #0
 8008736:	d10a      	bne.n	800874e <prvProcessTimerOrBlockTask+0x86>
 8008738:	4b09      	ldr	r3, [pc, #36]	; (8008760 <prvProcessTimerOrBlockTask+0x98>)
 800873a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800873e:	601a      	str	r2, [r3, #0]
 8008740:	f3bf 8f4f 	dsb	sy
 8008744:	f3bf 8f6f 	isb	sy
 8008748:	e001      	b.n	800874e <prvProcessTimerOrBlockTask+0x86>
 800874a:	f7ff f971 	bl	8007a30 <xTaskResumeAll>
 800874e:	bf00      	nop
 8008750:	3710      	adds	r7, #16
 8008752:	46bd      	mov	sp, r7
 8008754:	bd80      	pop	{r7, pc}
 8008756:	bf00      	nop
 8008758:	20001f30 	.word	0x20001f30
 800875c:	20001f34 	.word	0x20001f34
 8008760:	e000ed04 	.word	0xe000ed04

08008764 <prvGetNextExpireTime>:
 8008764:	b480      	push	{r7}
 8008766:	b085      	sub	sp, #20
 8008768:	af00      	add	r7, sp, #0
 800876a:	6078      	str	r0, [r7, #4]
 800876c:	4b0e      	ldr	r3, [pc, #56]	; (80087a8 <prvGetNextExpireTime+0x44>)
 800876e:	681b      	ldr	r3, [r3, #0]
 8008770:	681b      	ldr	r3, [r3, #0]
 8008772:	2b00      	cmp	r3, #0
 8008774:	d101      	bne.n	800877a <prvGetNextExpireTime+0x16>
 8008776:	2201      	movs	r2, #1
 8008778:	e000      	b.n	800877c <prvGetNextExpireTime+0x18>
 800877a:	2200      	movs	r2, #0
 800877c:	687b      	ldr	r3, [r7, #4]
 800877e:	601a      	str	r2, [r3, #0]
 8008780:	687b      	ldr	r3, [r7, #4]
 8008782:	681b      	ldr	r3, [r3, #0]
 8008784:	2b00      	cmp	r3, #0
 8008786:	d105      	bne.n	8008794 <prvGetNextExpireTime+0x30>
 8008788:	4b07      	ldr	r3, [pc, #28]	; (80087a8 <prvGetNextExpireTime+0x44>)
 800878a:	681b      	ldr	r3, [r3, #0]
 800878c:	68db      	ldr	r3, [r3, #12]
 800878e:	681b      	ldr	r3, [r3, #0]
 8008790:	60fb      	str	r3, [r7, #12]
 8008792:	e001      	b.n	8008798 <prvGetNextExpireTime+0x34>
 8008794:	2300      	movs	r3, #0
 8008796:	60fb      	str	r3, [r7, #12]
 8008798:	68fb      	ldr	r3, [r7, #12]
 800879a:	4618      	mov	r0, r3
 800879c:	3714      	adds	r7, #20
 800879e:	46bd      	mov	sp, r7
 80087a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087a4:	4770      	bx	lr
 80087a6:	bf00      	nop
 80087a8:	20001f2c 	.word	0x20001f2c

080087ac <prvSampleTimeNow>:
 80087ac:	b580      	push	{r7, lr}
 80087ae:	b084      	sub	sp, #16
 80087b0:	af00      	add	r7, sp, #0
 80087b2:	6078      	str	r0, [r7, #4]
 80087b4:	f7ff f9da 	bl	8007b6c <xTaskGetTickCount>
 80087b8:	60f8      	str	r0, [r7, #12]
 80087ba:	4b0b      	ldr	r3, [pc, #44]	; (80087e8 <prvSampleTimeNow+0x3c>)
 80087bc:	681b      	ldr	r3, [r3, #0]
 80087be:	68fa      	ldr	r2, [r7, #12]
 80087c0:	429a      	cmp	r2, r3
 80087c2:	d205      	bcs.n	80087d0 <prvSampleTimeNow+0x24>
 80087c4:	f000 f936 	bl	8008a34 <prvSwitchTimerLists>
 80087c8:	687b      	ldr	r3, [r7, #4]
 80087ca:	2201      	movs	r2, #1
 80087cc:	601a      	str	r2, [r3, #0]
 80087ce:	e002      	b.n	80087d6 <prvSampleTimeNow+0x2a>
 80087d0:	687b      	ldr	r3, [r7, #4]
 80087d2:	2200      	movs	r2, #0
 80087d4:	601a      	str	r2, [r3, #0]
 80087d6:	4a04      	ldr	r2, [pc, #16]	; (80087e8 <prvSampleTimeNow+0x3c>)
 80087d8:	68fb      	ldr	r3, [r7, #12]
 80087da:	6013      	str	r3, [r2, #0]
 80087dc:	68fb      	ldr	r3, [r7, #12]
 80087de:	4618      	mov	r0, r3
 80087e0:	3710      	adds	r7, #16
 80087e2:	46bd      	mov	sp, r7
 80087e4:	bd80      	pop	{r7, pc}
 80087e6:	bf00      	nop
 80087e8:	20001f3c 	.word	0x20001f3c

080087ec <prvInsertTimerInActiveList>:
 80087ec:	b580      	push	{r7, lr}
 80087ee:	b086      	sub	sp, #24
 80087f0:	af00      	add	r7, sp, #0
 80087f2:	60f8      	str	r0, [r7, #12]
 80087f4:	60b9      	str	r1, [r7, #8]
 80087f6:	607a      	str	r2, [r7, #4]
 80087f8:	603b      	str	r3, [r7, #0]
 80087fa:	2300      	movs	r3, #0
 80087fc:	617b      	str	r3, [r7, #20]
 80087fe:	68fb      	ldr	r3, [r7, #12]
 8008800:	68ba      	ldr	r2, [r7, #8]
 8008802:	605a      	str	r2, [r3, #4]
 8008804:	68fb      	ldr	r3, [r7, #12]
 8008806:	68fa      	ldr	r2, [r7, #12]
 8008808:	611a      	str	r2, [r3, #16]
 800880a:	68ba      	ldr	r2, [r7, #8]
 800880c:	687b      	ldr	r3, [r7, #4]
 800880e:	429a      	cmp	r2, r3
 8008810:	d812      	bhi.n	8008838 <prvInsertTimerInActiveList+0x4c>
 8008812:	687a      	ldr	r2, [r7, #4]
 8008814:	683b      	ldr	r3, [r7, #0]
 8008816:	1ad2      	subs	r2, r2, r3
 8008818:	68fb      	ldr	r3, [r7, #12]
 800881a:	699b      	ldr	r3, [r3, #24]
 800881c:	429a      	cmp	r2, r3
 800881e:	d302      	bcc.n	8008826 <prvInsertTimerInActiveList+0x3a>
 8008820:	2301      	movs	r3, #1
 8008822:	617b      	str	r3, [r7, #20]
 8008824:	e01b      	b.n	800885e <prvInsertTimerInActiveList+0x72>
 8008826:	4b10      	ldr	r3, [pc, #64]	; (8008868 <prvInsertTimerInActiveList+0x7c>)
 8008828:	681a      	ldr	r2, [r3, #0]
 800882a:	68fb      	ldr	r3, [r7, #12]
 800882c:	3304      	adds	r3, #4
 800882e:	4619      	mov	r1, r3
 8008830:	4610      	mov	r0, r2
 8008832:	f7fe f88a 	bl	800694a <vListInsert>
 8008836:	e012      	b.n	800885e <prvInsertTimerInActiveList+0x72>
 8008838:	687a      	ldr	r2, [r7, #4]
 800883a:	683b      	ldr	r3, [r7, #0]
 800883c:	429a      	cmp	r2, r3
 800883e:	d206      	bcs.n	800884e <prvInsertTimerInActiveList+0x62>
 8008840:	68ba      	ldr	r2, [r7, #8]
 8008842:	683b      	ldr	r3, [r7, #0]
 8008844:	429a      	cmp	r2, r3
 8008846:	d302      	bcc.n	800884e <prvInsertTimerInActiveList+0x62>
 8008848:	2301      	movs	r3, #1
 800884a:	617b      	str	r3, [r7, #20]
 800884c:	e007      	b.n	800885e <prvInsertTimerInActiveList+0x72>
 800884e:	4b07      	ldr	r3, [pc, #28]	; (800886c <prvInsertTimerInActiveList+0x80>)
 8008850:	681a      	ldr	r2, [r3, #0]
 8008852:	68fb      	ldr	r3, [r7, #12]
 8008854:	3304      	adds	r3, #4
 8008856:	4619      	mov	r1, r3
 8008858:	4610      	mov	r0, r2
 800885a:	f7fe f876 	bl	800694a <vListInsert>
 800885e:	697b      	ldr	r3, [r7, #20]
 8008860:	4618      	mov	r0, r3
 8008862:	3718      	adds	r7, #24
 8008864:	46bd      	mov	sp, r7
 8008866:	bd80      	pop	{r7, pc}
 8008868:	20001f30 	.word	0x20001f30
 800886c:	20001f2c 	.word	0x20001f2c

08008870 <prvProcessReceivedCommands>:
 8008870:	b580      	push	{r7, lr}
 8008872:	b08e      	sub	sp, #56	; 0x38
 8008874:	af02      	add	r7, sp, #8
 8008876:	e0ca      	b.n	8008a0e <prvProcessReceivedCommands+0x19e>
 8008878:	687b      	ldr	r3, [r7, #4]
 800887a:	2b00      	cmp	r3, #0
 800887c:	da18      	bge.n	80088b0 <prvProcessReceivedCommands+0x40>
 800887e:	1d3b      	adds	r3, r7, #4
 8008880:	3304      	adds	r3, #4
 8008882:	62fb      	str	r3, [r7, #44]	; 0x2c
 8008884:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008886:	2b00      	cmp	r3, #0
 8008888:	d10a      	bne.n	80088a0 <prvProcessReceivedCommands+0x30>
 800888a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800888e:	f383 8811 	msr	BASEPRI, r3
 8008892:	f3bf 8f6f 	isb	sy
 8008896:	f3bf 8f4f 	dsb	sy
 800889a:	61fb      	str	r3, [r7, #28]
 800889c:	bf00      	nop
 800889e:	e7fe      	b.n	800889e <prvProcessReceivedCommands+0x2e>
 80088a0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80088a2:	681b      	ldr	r3, [r3, #0]
 80088a4:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80088a6:	6850      	ldr	r0, [r2, #4]
 80088a8:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80088aa:	6892      	ldr	r2, [r2, #8]
 80088ac:	4611      	mov	r1, r2
 80088ae:	4798      	blx	r3
 80088b0:	687b      	ldr	r3, [r7, #4]
 80088b2:	2b00      	cmp	r3, #0
 80088b4:	f2c0 80ab 	blt.w	8008a0e <prvProcessReceivedCommands+0x19e>
 80088b8:	68fb      	ldr	r3, [r7, #12]
 80088ba:	62bb      	str	r3, [r7, #40]	; 0x28
 80088bc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80088be:	695b      	ldr	r3, [r3, #20]
 80088c0:	2b00      	cmp	r3, #0
 80088c2:	d004      	beq.n	80088ce <prvProcessReceivedCommands+0x5e>
 80088c4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80088c6:	3304      	adds	r3, #4
 80088c8:	4618      	mov	r0, r3
 80088ca:	f7fe f877 	bl	80069bc <uxListRemove>
 80088ce:	463b      	mov	r3, r7
 80088d0:	4618      	mov	r0, r3
 80088d2:	f7ff ff6b 	bl	80087ac <prvSampleTimeNow>
 80088d6:	6278      	str	r0, [r7, #36]	; 0x24
 80088d8:	687b      	ldr	r3, [r7, #4]
 80088da:	2b09      	cmp	r3, #9
 80088dc:	f200 8096 	bhi.w	8008a0c <prvProcessReceivedCommands+0x19c>
 80088e0:	a201      	add	r2, pc, #4	; (adr r2, 80088e8 <prvProcessReceivedCommands+0x78>)
 80088e2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80088e6:	bf00      	nop
 80088e8:	08008911 	.word	0x08008911
 80088ec:	08008911 	.word	0x08008911
 80088f0:	08008911 	.word	0x08008911
 80088f4:	08008985 	.word	0x08008985
 80088f8:	08008999 	.word	0x08008999
 80088fc:	080089e3 	.word	0x080089e3
 8008900:	08008911 	.word	0x08008911
 8008904:	08008911 	.word	0x08008911
 8008908:	08008985 	.word	0x08008985
 800890c:	08008999 	.word	0x08008999
 8008910:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008912:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8008916:	f043 0301 	orr.w	r3, r3, #1
 800891a:	b2da      	uxtb	r2, r3
 800891c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800891e:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8008922:	68ba      	ldr	r2, [r7, #8]
 8008924:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008926:	699b      	ldr	r3, [r3, #24]
 8008928:	18d1      	adds	r1, r2, r3
 800892a:	68bb      	ldr	r3, [r7, #8]
 800892c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800892e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8008930:	f7ff ff5c 	bl	80087ec <prvInsertTimerInActiveList>
 8008934:	4603      	mov	r3, r0
 8008936:	2b00      	cmp	r3, #0
 8008938:	d069      	beq.n	8008a0e <prvProcessReceivedCommands+0x19e>
 800893a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800893c:	6a1b      	ldr	r3, [r3, #32]
 800893e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8008940:	4798      	blx	r3
 8008942:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008944:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8008948:	f003 0304 	and.w	r3, r3, #4
 800894c:	2b00      	cmp	r3, #0
 800894e:	d05e      	beq.n	8008a0e <prvProcessReceivedCommands+0x19e>
 8008950:	68ba      	ldr	r2, [r7, #8]
 8008952:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008954:	699b      	ldr	r3, [r3, #24]
 8008956:	441a      	add	r2, r3
 8008958:	2300      	movs	r3, #0
 800895a:	9300      	str	r3, [sp, #0]
 800895c:	2300      	movs	r3, #0
 800895e:	2100      	movs	r1, #0
 8008960:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8008962:	f7ff fe05 	bl	8008570 <xTimerGenericCommand>
 8008966:	6238      	str	r0, [r7, #32]
 8008968:	6a3b      	ldr	r3, [r7, #32]
 800896a:	2b00      	cmp	r3, #0
 800896c:	d14f      	bne.n	8008a0e <prvProcessReceivedCommands+0x19e>
 800896e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008972:	f383 8811 	msr	BASEPRI, r3
 8008976:	f3bf 8f6f 	isb	sy
 800897a:	f3bf 8f4f 	dsb	sy
 800897e:	61bb      	str	r3, [r7, #24]
 8008980:	bf00      	nop
 8008982:	e7fe      	b.n	8008982 <prvProcessReceivedCommands+0x112>
 8008984:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008986:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800898a:	f023 0301 	bic.w	r3, r3, #1
 800898e:	b2da      	uxtb	r2, r3
 8008990:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008992:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8008996:	e03a      	b.n	8008a0e <prvProcessReceivedCommands+0x19e>
 8008998:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800899a:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800899e:	f043 0301 	orr.w	r3, r3, #1
 80089a2:	b2da      	uxtb	r2, r3
 80089a4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80089a6:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 80089aa:	68ba      	ldr	r2, [r7, #8]
 80089ac:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80089ae:	619a      	str	r2, [r3, #24]
 80089b0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80089b2:	699b      	ldr	r3, [r3, #24]
 80089b4:	2b00      	cmp	r3, #0
 80089b6:	d10a      	bne.n	80089ce <prvProcessReceivedCommands+0x15e>
 80089b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089bc:	f383 8811 	msr	BASEPRI, r3
 80089c0:	f3bf 8f6f 	isb	sy
 80089c4:	f3bf 8f4f 	dsb	sy
 80089c8:	617b      	str	r3, [r7, #20]
 80089ca:	bf00      	nop
 80089cc:	e7fe      	b.n	80089cc <prvProcessReceivedCommands+0x15c>
 80089ce:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80089d0:	699a      	ldr	r2, [r3, #24]
 80089d2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80089d4:	18d1      	adds	r1, r2, r3
 80089d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80089d8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80089da:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80089dc:	f7ff ff06 	bl	80087ec <prvInsertTimerInActiveList>
 80089e0:	e015      	b.n	8008a0e <prvProcessReceivedCommands+0x19e>
 80089e2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80089e4:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 80089e8:	f003 0302 	and.w	r3, r3, #2
 80089ec:	2b00      	cmp	r3, #0
 80089ee:	d103      	bne.n	80089f8 <prvProcessReceivedCommands+0x188>
 80089f0:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80089f2:	f000 fbfd 	bl	80091f0 <vPortFree>
 80089f6:	e00a      	b.n	8008a0e <prvProcessReceivedCommands+0x19e>
 80089f8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80089fa:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 80089fe:	f023 0301 	bic.w	r3, r3, #1
 8008a02:	b2da      	uxtb	r2, r3
 8008a04:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008a06:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8008a0a:	e000      	b.n	8008a0e <prvProcessReceivedCommands+0x19e>
 8008a0c:	bf00      	nop
 8008a0e:	4b08      	ldr	r3, [pc, #32]	; (8008a30 <prvProcessReceivedCommands+0x1c0>)
 8008a10:	681b      	ldr	r3, [r3, #0]
 8008a12:	1d39      	adds	r1, r7, #4
 8008a14:	2200      	movs	r2, #0
 8008a16:	4618      	mov	r0, r3
 8008a18:	f7fe fad2 	bl	8006fc0 <xQueueReceive>
 8008a1c:	4603      	mov	r3, r0
 8008a1e:	2b00      	cmp	r3, #0
 8008a20:	f47f af2a 	bne.w	8008878 <prvProcessReceivedCommands+0x8>
 8008a24:	bf00      	nop
 8008a26:	bf00      	nop
 8008a28:	3730      	adds	r7, #48	; 0x30
 8008a2a:	46bd      	mov	sp, r7
 8008a2c:	bd80      	pop	{r7, pc}
 8008a2e:	bf00      	nop
 8008a30:	20001f34 	.word	0x20001f34

08008a34 <prvSwitchTimerLists>:
 8008a34:	b580      	push	{r7, lr}
 8008a36:	b088      	sub	sp, #32
 8008a38:	af02      	add	r7, sp, #8
 8008a3a:	e048      	b.n	8008ace <prvSwitchTimerLists+0x9a>
 8008a3c:	4b2d      	ldr	r3, [pc, #180]	; (8008af4 <prvSwitchTimerLists+0xc0>)
 8008a3e:	681b      	ldr	r3, [r3, #0]
 8008a40:	68db      	ldr	r3, [r3, #12]
 8008a42:	681b      	ldr	r3, [r3, #0]
 8008a44:	613b      	str	r3, [r7, #16]
 8008a46:	4b2b      	ldr	r3, [pc, #172]	; (8008af4 <prvSwitchTimerLists+0xc0>)
 8008a48:	681b      	ldr	r3, [r3, #0]
 8008a4a:	68db      	ldr	r3, [r3, #12]
 8008a4c:	68db      	ldr	r3, [r3, #12]
 8008a4e:	60fb      	str	r3, [r7, #12]
 8008a50:	68fb      	ldr	r3, [r7, #12]
 8008a52:	3304      	adds	r3, #4
 8008a54:	4618      	mov	r0, r3
 8008a56:	f7fd ffb1 	bl	80069bc <uxListRemove>
 8008a5a:	68fb      	ldr	r3, [r7, #12]
 8008a5c:	6a1b      	ldr	r3, [r3, #32]
 8008a5e:	68f8      	ldr	r0, [r7, #12]
 8008a60:	4798      	blx	r3
 8008a62:	68fb      	ldr	r3, [r7, #12]
 8008a64:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8008a68:	f003 0304 	and.w	r3, r3, #4
 8008a6c:	2b00      	cmp	r3, #0
 8008a6e:	d02e      	beq.n	8008ace <prvSwitchTimerLists+0x9a>
 8008a70:	68fb      	ldr	r3, [r7, #12]
 8008a72:	699b      	ldr	r3, [r3, #24]
 8008a74:	693a      	ldr	r2, [r7, #16]
 8008a76:	4413      	add	r3, r2
 8008a78:	60bb      	str	r3, [r7, #8]
 8008a7a:	68ba      	ldr	r2, [r7, #8]
 8008a7c:	693b      	ldr	r3, [r7, #16]
 8008a7e:	429a      	cmp	r2, r3
 8008a80:	d90e      	bls.n	8008aa0 <prvSwitchTimerLists+0x6c>
 8008a82:	68fb      	ldr	r3, [r7, #12]
 8008a84:	68ba      	ldr	r2, [r7, #8]
 8008a86:	605a      	str	r2, [r3, #4]
 8008a88:	68fb      	ldr	r3, [r7, #12]
 8008a8a:	68fa      	ldr	r2, [r7, #12]
 8008a8c:	611a      	str	r2, [r3, #16]
 8008a8e:	4b19      	ldr	r3, [pc, #100]	; (8008af4 <prvSwitchTimerLists+0xc0>)
 8008a90:	681a      	ldr	r2, [r3, #0]
 8008a92:	68fb      	ldr	r3, [r7, #12]
 8008a94:	3304      	adds	r3, #4
 8008a96:	4619      	mov	r1, r3
 8008a98:	4610      	mov	r0, r2
 8008a9a:	f7fd ff56 	bl	800694a <vListInsert>
 8008a9e:	e016      	b.n	8008ace <prvSwitchTimerLists+0x9a>
 8008aa0:	2300      	movs	r3, #0
 8008aa2:	9300      	str	r3, [sp, #0]
 8008aa4:	2300      	movs	r3, #0
 8008aa6:	693a      	ldr	r2, [r7, #16]
 8008aa8:	2100      	movs	r1, #0
 8008aaa:	68f8      	ldr	r0, [r7, #12]
 8008aac:	f7ff fd60 	bl	8008570 <xTimerGenericCommand>
 8008ab0:	6078      	str	r0, [r7, #4]
 8008ab2:	687b      	ldr	r3, [r7, #4]
 8008ab4:	2b00      	cmp	r3, #0
 8008ab6:	d10a      	bne.n	8008ace <prvSwitchTimerLists+0x9a>
 8008ab8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008abc:	f383 8811 	msr	BASEPRI, r3
 8008ac0:	f3bf 8f6f 	isb	sy
 8008ac4:	f3bf 8f4f 	dsb	sy
 8008ac8:	603b      	str	r3, [r7, #0]
 8008aca:	bf00      	nop
 8008acc:	e7fe      	b.n	8008acc <prvSwitchTimerLists+0x98>
 8008ace:	4b09      	ldr	r3, [pc, #36]	; (8008af4 <prvSwitchTimerLists+0xc0>)
 8008ad0:	681b      	ldr	r3, [r3, #0]
 8008ad2:	681b      	ldr	r3, [r3, #0]
 8008ad4:	2b00      	cmp	r3, #0
 8008ad6:	d1b1      	bne.n	8008a3c <prvSwitchTimerLists+0x8>
 8008ad8:	4b06      	ldr	r3, [pc, #24]	; (8008af4 <prvSwitchTimerLists+0xc0>)
 8008ada:	681b      	ldr	r3, [r3, #0]
 8008adc:	617b      	str	r3, [r7, #20]
 8008ade:	4b06      	ldr	r3, [pc, #24]	; (8008af8 <prvSwitchTimerLists+0xc4>)
 8008ae0:	681b      	ldr	r3, [r3, #0]
 8008ae2:	4a04      	ldr	r2, [pc, #16]	; (8008af4 <prvSwitchTimerLists+0xc0>)
 8008ae4:	6013      	str	r3, [r2, #0]
 8008ae6:	4a04      	ldr	r2, [pc, #16]	; (8008af8 <prvSwitchTimerLists+0xc4>)
 8008ae8:	697b      	ldr	r3, [r7, #20]
 8008aea:	6013      	str	r3, [r2, #0]
 8008aec:	bf00      	nop
 8008aee:	3718      	adds	r7, #24
 8008af0:	46bd      	mov	sp, r7
 8008af2:	bd80      	pop	{r7, pc}
 8008af4:	20001f2c 	.word	0x20001f2c
 8008af8:	20001f30 	.word	0x20001f30

08008afc <prvCheckForValidListAndQueue>:
 8008afc:	b580      	push	{r7, lr}
 8008afe:	b082      	sub	sp, #8
 8008b00:	af02      	add	r7, sp, #8
 8008b02:	f000 f987 	bl	8008e14 <vPortEnterCritical>
 8008b06:	4b15      	ldr	r3, [pc, #84]	; (8008b5c <prvCheckForValidListAndQueue+0x60>)
 8008b08:	681b      	ldr	r3, [r3, #0]
 8008b0a:	2b00      	cmp	r3, #0
 8008b0c:	d120      	bne.n	8008b50 <prvCheckForValidListAndQueue+0x54>
 8008b0e:	4814      	ldr	r0, [pc, #80]	; (8008b60 <prvCheckForValidListAndQueue+0x64>)
 8008b10:	f7fd feca 	bl	80068a8 <vListInitialise>
 8008b14:	4813      	ldr	r0, [pc, #76]	; (8008b64 <prvCheckForValidListAndQueue+0x68>)
 8008b16:	f7fd fec7 	bl	80068a8 <vListInitialise>
 8008b1a:	4b13      	ldr	r3, [pc, #76]	; (8008b68 <prvCheckForValidListAndQueue+0x6c>)
 8008b1c:	4a10      	ldr	r2, [pc, #64]	; (8008b60 <prvCheckForValidListAndQueue+0x64>)
 8008b1e:	601a      	str	r2, [r3, #0]
 8008b20:	4b12      	ldr	r3, [pc, #72]	; (8008b6c <prvCheckForValidListAndQueue+0x70>)
 8008b22:	4a10      	ldr	r2, [pc, #64]	; (8008b64 <prvCheckForValidListAndQueue+0x68>)
 8008b24:	601a      	str	r2, [r3, #0]
 8008b26:	2300      	movs	r3, #0
 8008b28:	9300      	str	r3, [sp, #0]
 8008b2a:	4b11      	ldr	r3, [pc, #68]	; (8008b70 <prvCheckForValidListAndQueue+0x74>)
 8008b2c:	4a11      	ldr	r2, [pc, #68]	; (8008b74 <prvCheckForValidListAndQueue+0x78>)
 8008b2e:	2110      	movs	r1, #16
 8008b30:	200a      	movs	r0, #10
 8008b32:	f7fd ffd5 	bl	8006ae0 <xQueueGenericCreateStatic>
 8008b36:	4603      	mov	r3, r0
 8008b38:	4a08      	ldr	r2, [pc, #32]	; (8008b5c <prvCheckForValidListAndQueue+0x60>)
 8008b3a:	6013      	str	r3, [r2, #0]
 8008b3c:	4b07      	ldr	r3, [pc, #28]	; (8008b5c <prvCheckForValidListAndQueue+0x60>)
 8008b3e:	681b      	ldr	r3, [r3, #0]
 8008b40:	2b00      	cmp	r3, #0
 8008b42:	d005      	beq.n	8008b50 <prvCheckForValidListAndQueue+0x54>
 8008b44:	4b05      	ldr	r3, [pc, #20]	; (8008b5c <prvCheckForValidListAndQueue+0x60>)
 8008b46:	681b      	ldr	r3, [r3, #0]
 8008b48:	490b      	ldr	r1, [pc, #44]	; (8008b78 <prvCheckForValidListAndQueue+0x7c>)
 8008b4a:	4618      	mov	r0, r3
 8008b4c:	f7fe fca8 	bl	80074a0 <vQueueAddToRegistry>
 8008b50:	f000 f990 	bl	8008e74 <vPortExitCritical>
 8008b54:	bf00      	nop
 8008b56:	46bd      	mov	sp, r7
 8008b58:	bd80      	pop	{r7, pc}
 8008b5a:	bf00      	nop
 8008b5c:	20001f34 	.word	0x20001f34
 8008b60:	20001f04 	.word	0x20001f04
 8008b64:	20001f18 	.word	0x20001f18
 8008b68:	20001f2c 	.word	0x20001f2c
 8008b6c:	20001f30 	.word	0x20001f30
 8008b70:	20001fe0 	.word	0x20001fe0
 8008b74:	20001f40 	.word	0x20001f40
 8008b78:	0800ac6c 	.word	0x0800ac6c

08008b7c <pvTimerGetTimerID>:
 8008b7c:	b580      	push	{r7, lr}
 8008b7e:	b086      	sub	sp, #24
 8008b80:	af00      	add	r7, sp, #0
 8008b82:	6078      	str	r0, [r7, #4]
 8008b84:	687b      	ldr	r3, [r7, #4]
 8008b86:	617b      	str	r3, [r7, #20]
 8008b88:	687b      	ldr	r3, [r7, #4]
 8008b8a:	2b00      	cmp	r3, #0
 8008b8c:	d10a      	bne.n	8008ba4 <pvTimerGetTimerID+0x28>
 8008b8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b92:	f383 8811 	msr	BASEPRI, r3
 8008b96:	f3bf 8f6f 	isb	sy
 8008b9a:	f3bf 8f4f 	dsb	sy
 8008b9e:	60fb      	str	r3, [r7, #12]
 8008ba0:	bf00      	nop
 8008ba2:	e7fe      	b.n	8008ba2 <pvTimerGetTimerID+0x26>
 8008ba4:	f000 f936 	bl	8008e14 <vPortEnterCritical>
 8008ba8:	697b      	ldr	r3, [r7, #20]
 8008baa:	69db      	ldr	r3, [r3, #28]
 8008bac:	613b      	str	r3, [r7, #16]
 8008bae:	f000 f961 	bl	8008e74 <vPortExitCritical>
 8008bb2:	693b      	ldr	r3, [r7, #16]
 8008bb4:	4618      	mov	r0, r3
 8008bb6:	3718      	adds	r7, #24
 8008bb8:	46bd      	mov	sp, r7
 8008bba:	bd80      	pop	{r7, pc}

08008bbc <pxPortInitialiseStack>:
 8008bbc:	b480      	push	{r7}
 8008bbe:	b085      	sub	sp, #20
 8008bc0:	af00      	add	r7, sp, #0
 8008bc2:	60f8      	str	r0, [r7, #12]
 8008bc4:	60b9      	str	r1, [r7, #8]
 8008bc6:	607a      	str	r2, [r7, #4]
 8008bc8:	68fb      	ldr	r3, [r7, #12]
 8008bca:	3b04      	subs	r3, #4
 8008bcc:	60fb      	str	r3, [r7, #12]
 8008bce:	68fb      	ldr	r3, [r7, #12]
 8008bd0:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8008bd4:	601a      	str	r2, [r3, #0]
 8008bd6:	68fb      	ldr	r3, [r7, #12]
 8008bd8:	3b04      	subs	r3, #4
 8008bda:	60fb      	str	r3, [r7, #12]
 8008bdc:	68bb      	ldr	r3, [r7, #8]
 8008bde:	f023 0201 	bic.w	r2, r3, #1
 8008be2:	68fb      	ldr	r3, [r7, #12]
 8008be4:	601a      	str	r2, [r3, #0]
 8008be6:	68fb      	ldr	r3, [r7, #12]
 8008be8:	3b04      	subs	r3, #4
 8008bea:	60fb      	str	r3, [r7, #12]
 8008bec:	4a0c      	ldr	r2, [pc, #48]	; (8008c20 <pxPortInitialiseStack+0x64>)
 8008bee:	68fb      	ldr	r3, [r7, #12]
 8008bf0:	601a      	str	r2, [r3, #0]
 8008bf2:	68fb      	ldr	r3, [r7, #12]
 8008bf4:	3b14      	subs	r3, #20
 8008bf6:	60fb      	str	r3, [r7, #12]
 8008bf8:	687a      	ldr	r2, [r7, #4]
 8008bfa:	68fb      	ldr	r3, [r7, #12]
 8008bfc:	601a      	str	r2, [r3, #0]
 8008bfe:	68fb      	ldr	r3, [r7, #12]
 8008c00:	3b04      	subs	r3, #4
 8008c02:	60fb      	str	r3, [r7, #12]
 8008c04:	68fb      	ldr	r3, [r7, #12]
 8008c06:	f06f 0202 	mvn.w	r2, #2
 8008c0a:	601a      	str	r2, [r3, #0]
 8008c0c:	68fb      	ldr	r3, [r7, #12]
 8008c0e:	3b20      	subs	r3, #32
 8008c10:	60fb      	str	r3, [r7, #12]
 8008c12:	68fb      	ldr	r3, [r7, #12]
 8008c14:	4618      	mov	r0, r3
 8008c16:	3714      	adds	r7, #20
 8008c18:	46bd      	mov	sp, r7
 8008c1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c1e:	4770      	bx	lr
 8008c20:	08008c25 	.word	0x08008c25

08008c24 <prvTaskExitError>:
 8008c24:	b480      	push	{r7}
 8008c26:	b085      	sub	sp, #20
 8008c28:	af00      	add	r7, sp, #0
 8008c2a:	2300      	movs	r3, #0
 8008c2c:	607b      	str	r3, [r7, #4]
 8008c2e:	4b12      	ldr	r3, [pc, #72]	; (8008c78 <prvTaskExitError+0x54>)
 8008c30:	681b      	ldr	r3, [r3, #0]
 8008c32:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008c36:	d00a      	beq.n	8008c4e <prvTaskExitError+0x2a>
 8008c38:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c3c:	f383 8811 	msr	BASEPRI, r3
 8008c40:	f3bf 8f6f 	isb	sy
 8008c44:	f3bf 8f4f 	dsb	sy
 8008c48:	60fb      	str	r3, [r7, #12]
 8008c4a:	bf00      	nop
 8008c4c:	e7fe      	b.n	8008c4c <prvTaskExitError+0x28>
 8008c4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c52:	f383 8811 	msr	BASEPRI, r3
 8008c56:	f3bf 8f6f 	isb	sy
 8008c5a:	f3bf 8f4f 	dsb	sy
 8008c5e:	60bb      	str	r3, [r7, #8]
 8008c60:	bf00      	nop
 8008c62:	bf00      	nop
 8008c64:	687b      	ldr	r3, [r7, #4]
 8008c66:	2b00      	cmp	r3, #0
 8008c68:	d0fc      	beq.n	8008c64 <prvTaskExitError+0x40>
 8008c6a:	bf00      	nop
 8008c6c:	bf00      	nop
 8008c6e:	3714      	adds	r7, #20
 8008c70:	46bd      	mov	sp, r7
 8008c72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c76:	4770      	bx	lr
 8008c78:	2000000c 	.word	0x2000000c
 8008c7c:	00000000 	.word	0x00000000

08008c80 <SVC_Handler>:
 8008c80:	4b07      	ldr	r3, [pc, #28]	; (8008ca0 <pxCurrentTCBConst2>)
 8008c82:	6819      	ldr	r1, [r3, #0]
 8008c84:	6808      	ldr	r0, [r1, #0]
 8008c86:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008c8a:	f380 8809 	msr	PSP, r0
 8008c8e:	f3bf 8f6f 	isb	sy
 8008c92:	f04f 0000 	mov.w	r0, #0
 8008c96:	f380 8811 	msr	BASEPRI, r0
 8008c9a:	4770      	bx	lr
 8008c9c:	f3af 8000 	nop.w

08008ca0 <pxCurrentTCBConst2>:
 8008ca0:	20001a04 	.word	0x20001a04
 8008ca4:	bf00      	nop
 8008ca6:	bf00      	nop

08008ca8 <prvPortStartFirstTask>:
 8008ca8:	4808      	ldr	r0, [pc, #32]	; (8008ccc <prvPortStartFirstTask+0x24>)
 8008caa:	6800      	ldr	r0, [r0, #0]
 8008cac:	6800      	ldr	r0, [r0, #0]
 8008cae:	f380 8808 	msr	MSP, r0
 8008cb2:	f04f 0000 	mov.w	r0, #0
 8008cb6:	f380 8814 	msr	CONTROL, r0
 8008cba:	b662      	cpsie	i
 8008cbc:	b661      	cpsie	f
 8008cbe:	f3bf 8f4f 	dsb	sy
 8008cc2:	f3bf 8f6f 	isb	sy
 8008cc6:	df00      	svc	0
 8008cc8:	bf00      	nop
 8008cca:	bf00      	nop
 8008ccc:	e000ed08 	.word	0xe000ed08

08008cd0 <xPortStartScheduler>:
 8008cd0:	b580      	push	{r7, lr}
 8008cd2:	b086      	sub	sp, #24
 8008cd4:	af00      	add	r7, sp, #0
 8008cd6:	4b46      	ldr	r3, [pc, #280]	; (8008df0 <xPortStartScheduler+0x120>)
 8008cd8:	681b      	ldr	r3, [r3, #0]
 8008cda:	4a46      	ldr	r2, [pc, #280]	; (8008df4 <xPortStartScheduler+0x124>)
 8008cdc:	4293      	cmp	r3, r2
 8008cde:	d10a      	bne.n	8008cf6 <xPortStartScheduler+0x26>
 8008ce0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ce4:	f383 8811 	msr	BASEPRI, r3
 8008ce8:	f3bf 8f6f 	isb	sy
 8008cec:	f3bf 8f4f 	dsb	sy
 8008cf0:	613b      	str	r3, [r7, #16]
 8008cf2:	bf00      	nop
 8008cf4:	e7fe      	b.n	8008cf4 <xPortStartScheduler+0x24>
 8008cf6:	4b3e      	ldr	r3, [pc, #248]	; (8008df0 <xPortStartScheduler+0x120>)
 8008cf8:	681b      	ldr	r3, [r3, #0]
 8008cfa:	4a3f      	ldr	r2, [pc, #252]	; (8008df8 <xPortStartScheduler+0x128>)
 8008cfc:	4293      	cmp	r3, r2
 8008cfe:	d10a      	bne.n	8008d16 <xPortStartScheduler+0x46>
 8008d00:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d04:	f383 8811 	msr	BASEPRI, r3
 8008d08:	f3bf 8f6f 	isb	sy
 8008d0c:	f3bf 8f4f 	dsb	sy
 8008d10:	60fb      	str	r3, [r7, #12]
 8008d12:	bf00      	nop
 8008d14:	e7fe      	b.n	8008d14 <xPortStartScheduler+0x44>
 8008d16:	4b39      	ldr	r3, [pc, #228]	; (8008dfc <xPortStartScheduler+0x12c>)
 8008d18:	617b      	str	r3, [r7, #20]
 8008d1a:	697b      	ldr	r3, [r7, #20]
 8008d1c:	781b      	ldrb	r3, [r3, #0]
 8008d1e:	b2db      	uxtb	r3, r3
 8008d20:	607b      	str	r3, [r7, #4]
 8008d22:	697b      	ldr	r3, [r7, #20]
 8008d24:	22ff      	movs	r2, #255	; 0xff
 8008d26:	701a      	strb	r2, [r3, #0]
 8008d28:	697b      	ldr	r3, [r7, #20]
 8008d2a:	781b      	ldrb	r3, [r3, #0]
 8008d2c:	b2db      	uxtb	r3, r3
 8008d2e:	70fb      	strb	r3, [r7, #3]
 8008d30:	78fb      	ldrb	r3, [r7, #3]
 8008d32:	b2db      	uxtb	r3, r3
 8008d34:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8008d38:	b2da      	uxtb	r2, r3
 8008d3a:	4b31      	ldr	r3, [pc, #196]	; (8008e00 <xPortStartScheduler+0x130>)
 8008d3c:	701a      	strb	r2, [r3, #0]
 8008d3e:	4b31      	ldr	r3, [pc, #196]	; (8008e04 <xPortStartScheduler+0x134>)
 8008d40:	2207      	movs	r2, #7
 8008d42:	601a      	str	r2, [r3, #0]
 8008d44:	e009      	b.n	8008d5a <xPortStartScheduler+0x8a>
 8008d46:	4b2f      	ldr	r3, [pc, #188]	; (8008e04 <xPortStartScheduler+0x134>)
 8008d48:	681b      	ldr	r3, [r3, #0]
 8008d4a:	3b01      	subs	r3, #1
 8008d4c:	4a2d      	ldr	r2, [pc, #180]	; (8008e04 <xPortStartScheduler+0x134>)
 8008d4e:	6013      	str	r3, [r2, #0]
 8008d50:	78fb      	ldrb	r3, [r7, #3]
 8008d52:	b2db      	uxtb	r3, r3
 8008d54:	005b      	lsls	r3, r3, #1
 8008d56:	b2db      	uxtb	r3, r3
 8008d58:	70fb      	strb	r3, [r7, #3]
 8008d5a:	78fb      	ldrb	r3, [r7, #3]
 8008d5c:	b2db      	uxtb	r3, r3
 8008d5e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008d62:	2b80      	cmp	r3, #128	; 0x80
 8008d64:	d0ef      	beq.n	8008d46 <xPortStartScheduler+0x76>
 8008d66:	4b27      	ldr	r3, [pc, #156]	; (8008e04 <xPortStartScheduler+0x134>)
 8008d68:	681b      	ldr	r3, [r3, #0]
 8008d6a:	f1c3 0307 	rsb	r3, r3, #7
 8008d6e:	2b04      	cmp	r3, #4
 8008d70:	d00a      	beq.n	8008d88 <xPortStartScheduler+0xb8>
 8008d72:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d76:	f383 8811 	msr	BASEPRI, r3
 8008d7a:	f3bf 8f6f 	isb	sy
 8008d7e:	f3bf 8f4f 	dsb	sy
 8008d82:	60bb      	str	r3, [r7, #8]
 8008d84:	bf00      	nop
 8008d86:	e7fe      	b.n	8008d86 <xPortStartScheduler+0xb6>
 8008d88:	4b1e      	ldr	r3, [pc, #120]	; (8008e04 <xPortStartScheduler+0x134>)
 8008d8a:	681b      	ldr	r3, [r3, #0]
 8008d8c:	021b      	lsls	r3, r3, #8
 8008d8e:	4a1d      	ldr	r2, [pc, #116]	; (8008e04 <xPortStartScheduler+0x134>)
 8008d90:	6013      	str	r3, [r2, #0]
 8008d92:	4b1c      	ldr	r3, [pc, #112]	; (8008e04 <xPortStartScheduler+0x134>)
 8008d94:	681b      	ldr	r3, [r3, #0]
 8008d96:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8008d9a:	4a1a      	ldr	r2, [pc, #104]	; (8008e04 <xPortStartScheduler+0x134>)
 8008d9c:	6013      	str	r3, [r2, #0]
 8008d9e:	687b      	ldr	r3, [r7, #4]
 8008da0:	b2da      	uxtb	r2, r3
 8008da2:	697b      	ldr	r3, [r7, #20]
 8008da4:	701a      	strb	r2, [r3, #0]
 8008da6:	4b18      	ldr	r3, [pc, #96]	; (8008e08 <xPortStartScheduler+0x138>)
 8008da8:	681b      	ldr	r3, [r3, #0]
 8008daa:	4a17      	ldr	r2, [pc, #92]	; (8008e08 <xPortStartScheduler+0x138>)
 8008dac:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8008db0:	6013      	str	r3, [r2, #0]
 8008db2:	4b15      	ldr	r3, [pc, #84]	; (8008e08 <xPortStartScheduler+0x138>)
 8008db4:	681b      	ldr	r3, [r3, #0]
 8008db6:	4a14      	ldr	r2, [pc, #80]	; (8008e08 <xPortStartScheduler+0x138>)
 8008db8:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8008dbc:	6013      	str	r3, [r2, #0]
 8008dbe:	f000 f8dd 	bl	8008f7c <vPortSetupTimerInterrupt>
 8008dc2:	4b12      	ldr	r3, [pc, #72]	; (8008e0c <xPortStartScheduler+0x13c>)
 8008dc4:	2200      	movs	r2, #0
 8008dc6:	601a      	str	r2, [r3, #0]
 8008dc8:	f000 f8fc 	bl	8008fc4 <vPortEnableVFP>
 8008dcc:	4b10      	ldr	r3, [pc, #64]	; (8008e10 <xPortStartScheduler+0x140>)
 8008dce:	681b      	ldr	r3, [r3, #0]
 8008dd0:	4a0f      	ldr	r2, [pc, #60]	; (8008e10 <xPortStartScheduler+0x140>)
 8008dd2:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8008dd6:	6013      	str	r3, [r2, #0]
 8008dd8:	f7ff ff66 	bl	8008ca8 <prvPortStartFirstTask>
 8008ddc:	f7fe ff90 	bl	8007d00 <vTaskSwitchContext>
 8008de0:	f7ff ff20 	bl	8008c24 <prvTaskExitError>
 8008de4:	2300      	movs	r3, #0
 8008de6:	4618      	mov	r0, r3
 8008de8:	3718      	adds	r7, #24
 8008dea:	46bd      	mov	sp, r7
 8008dec:	bd80      	pop	{r7, pc}
 8008dee:	bf00      	nop
 8008df0:	e000ed00 	.word	0xe000ed00
 8008df4:	410fc271 	.word	0x410fc271
 8008df8:	410fc270 	.word	0x410fc270
 8008dfc:	e000e400 	.word	0xe000e400
 8008e00:	20002030 	.word	0x20002030
 8008e04:	20002034 	.word	0x20002034
 8008e08:	e000ed20 	.word	0xe000ed20
 8008e0c:	2000000c 	.word	0x2000000c
 8008e10:	e000ef34 	.word	0xe000ef34

08008e14 <vPortEnterCritical>:
 8008e14:	b480      	push	{r7}
 8008e16:	b083      	sub	sp, #12
 8008e18:	af00      	add	r7, sp, #0
 8008e1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e1e:	f383 8811 	msr	BASEPRI, r3
 8008e22:	f3bf 8f6f 	isb	sy
 8008e26:	f3bf 8f4f 	dsb	sy
 8008e2a:	607b      	str	r3, [r7, #4]
 8008e2c:	bf00      	nop
 8008e2e:	4b0f      	ldr	r3, [pc, #60]	; (8008e6c <vPortEnterCritical+0x58>)
 8008e30:	681b      	ldr	r3, [r3, #0]
 8008e32:	3301      	adds	r3, #1
 8008e34:	4a0d      	ldr	r2, [pc, #52]	; (8008e6c <vPortEnterCritical+0x58>)
 8008e36:	6013      	str	r3, [r2, #0]
 8008e38:	4b0c      	ldr	r3, [pc, #48]	; (8008e6c <vPortEnterCritical+0x58>)
 8008e3a:	681b      	ldr	r3, [r3, #0]
 8008e3c:	2b01      	cmp	r3, #1
 8008e3e:	d10f      	bne.n	8008e60 <vPortEnterCritical+0x4c>
 8008e40:	4b0b      	ldr	r3, [pc, #44]	; (8008e70 <vPortEnterCritical+0x5c>)
 8008e42:	681b      	ldr	r3, [r3, #0]
 8008e44:	b2db      	uxtb	r3, r3
 8008e46:	2b00      	cmp	r3, #0
 8008e48:	d00a      	beq.n	8008e60 <vPortEnterCritical+0x4c>
 8008e4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e4e:	f383 8811 	msr	BASEPRI, r3
 8008e52:	f3bf 8f6f 	isb	sy
 8008e56:	f3bf 8f4f 	dsb	sy
 8008e5a:	603b      	str	r3, [r7, #0]
 8008e5c:	bf00      	nop
 8008e5e:	e7fe      	b.n	8008e5e <vPortEnterCritical+0x4a>
 8008e60:	bf00      	nop
 8008e62:	370c      	adds	r7, #12
 8008e64:	46bd      	mov	sp, r7
 8008e66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e6a:	4770      	bx	lr
 8008e6c:	2000000c 	.word	0x2000000c
 8008e70:	e000ed04 	.word	0xe000ed04

08008e74 <vPortExitCritical>:
 8008e74:	b480      	push	{r7}
 8008e76:	b083      	sub	sp, #12
 8008e78:	af00      	add	r7, sp, #0
 8008e7a:	4b12      	ldr	r3, [pc, #72]	; (8008ec4 <vPortExitCritical+0x50>)
 8008e7c:	681b      	ldr	r3, [r3, #0]
 8008e7e:	2b00      	cmp	r3, #0
 8008e80:	d10a      	bne.n	8008e98 <vPortExitCritical+0x24>
 8008e82:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e86:	f383 8811 	msr	BASEPRI, r3
 8008e8a:	f3bf 8f6f 	isb	sy
 8008e8e:	f3bf 8f4f 	dsb	sy
 8008e92:	607b      	str	r3, [r7, #4]
 8008e94:	bf00      	nop
 8008e96:	e7fe      	b.n	8008e96 <vPortExitCritical+0x22>
 8008e98:	4b0a      	ldr	r3, [pc, #40]	; (8008ec4 <vPortExitCritical+0x50>)
 8008e9a:	681b      	ldr	r3, [r3, #0]
 8008e9c:	3b01      	subs	r3, #1
 8008e9e:	4a09      	ldr	r2, [pc, #36]	; (8008ec4 <vPortExitCritical+0x50>)
 8008ea0:	6013      	str	r3, [r2, #0]
 8008ea2:	4b08      	ldr	r3, [pc, #32]	; (8008ec4 <vPortExitCritical+0x50>)
 8008ea4:	681b      	ldr	r3, [r3, #0]
 8008ea6:	2b00      	cmp	r3, #0
 8008ea8:	d105      	bne.n	8008eb6 <vPortExitCritical+0x42>
 8008eaa:	2300      	movs	r3, #0
 8008eac:	603b      	str	r3, [r7, #0]
 8008eae:	683b      	ldr	r3, [r7, #0]
 8008eb0:	f383 8811 	msr	BASEPRI, r3
 8008eb4:	bf00      	nop
 8008eb6:	bf00      	nop
 8008eb8:	370c      	adds	r7, #12
 8008eba:	46bd      	mov	sp, r7
 8008ebc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ec0:	4770      	bx	lr
 8008ec2:	bf00      	nop
 8008ec4:	2000000c 	.word	0x2000000c
	...

08008ed0 <PendSV_Handler>:
 8008ed0:	f3ef 8009 	mrs	r0, PSP
 8008ed4:	f3bf 8f6f 	isb	sy
 8008ed8:	4b15      	ldr	r3, [pc, #84]	; (8008f30 <pxCurrentTCBConst>)
 8008eda:	681a      	ldr	r2, [r3, #0]
 8008edc:	f01e 0f10 	tst.w	lr, #16
 8008ee0:	bf08      	it	eq
 8008ee2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008ee6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008eea:	6010      	str	r0, [r2, #0]
 8008eec:	e92d 0009 	stmdb	sp!, {r0, r3}
 8008ef0:	f04f 0050 	mov.w	r0, #80	; 0x50
 8008ef4:	f380 8811 	msr	BASEPRI, r0
 8008ef8:	f3bf 8f4f 	dsb	sy
 8008efc:	f3bf 8f6f 	isb	sy
 8008f00:	f7fe fefe 	bl	8007d00 <vTaskSwitchContext>
 8008f04:	f04f 0000 	mov.w	r0, #0
 8008f08:	f380 8811 	msr	BASEPRI, r0
 8008f0c:	bc09      	pop	{r0, r3}
 8008f0e:	6819      	ldr	r1, [r3, #0]
 8008f10:	6808      	ldr	r0, [r1, #0]
 8008f12:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008f16:	f01e 0f10 	tst.w	lr, #16
 8008f1a:	bf08      	it	eq
 8008f1c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8008f20:	f380 8809 	msr	PSP, r0
 8008f24:	f3bf 8f6f 	isb	sy
 8008f28:	4770      	bx	lr
 8008f2a:	bf00      	nop
 8008f2c:	f3af 8000 	nop.w

08008f30 <pxCurrentTCBConst>:
 8008f30:	20001a04 	.word	0x20001a04
 8008f34:	bf00      	nop
 8008f36:	bf00      	nop

08008f38 <xPortSysTickHandler>:
 8008f38:	b580      	push	{r7, lr}
 8008f3a:	b082      	sub	sp, #8
 8008f3c:	af00      	add	r7, sp, #0
 8008f3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f42:	f383 8811 	msr	BASEPRI, r3
 8008f46:	f3bf 8f6f 	isb	sy
 8008f4a:	f3bf 8f4f 	dsb	sy
 8008f4e:	607b      	str	r3, [r7, #4]
 8008f50:	bf00      	nop
 8008f52:	f7fe fe1b 	bl	8007b8c <xTaskIncrementTick>
 8008f56:	4603      	mov	r3, r0
 8008f58:	2b00      	cmp	r3, #0
 8008f5a:	d003      	beq.n	8008f64 <xPortSysTickHandler+0x2c>
 8008f5c:	4b06      	ldr	r3, [pc, #24]	; (8008f78 <xPortSysTickHandler+0x40>)
 8008f5e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008f62:	601a      	str	r2, [r3, #0]
 8008f64:	2300      	movs	r3, #0
 8008f66:	603b      	str	r3, [r7, #0]
 8008f68:	683b      	ldr	r3, [r7, #0]
 8008f6a:	f383 8811 	msr	BASEPRI, r3
 8008f6e:	bf00      	nop
 8008f70:	bf00      	nop
 8008f72:	3708      	adds	r7, #8
 8008f74:	46bd      	mov	sp, r7
 8008f76:	bd80      	pop	{r7, pc}
 8008f78:	e000ed04 	.word	0xe000ed04

08008f7c <vPortSetupTimerInterrupt>:
 8008f7c:	b480      	push	{r7}
 8008f7e:	af00      	add	r7, sp, #0
 8008f80:	4b0b      	ldr	r3, [pc, #44]	; (8008fb0 <vPortSetupTimerInterrupt+0x34>)
 8008f82:	2200      	movs	r2, #0
 8008f84:	601a      	str	r2, [r3, #0]
 8008f86:	4b0b      	ldr	r3, [pc, #44]	; (8008fb4 <vPortSetupTimerInterrupt+0x38>)
 8008f88:	2200      	movs	r2, #0
 8008f8a:	601a      	str	r2, [r3, #0]
 8008f8c:	4b0a      	ldr	r3, [pc, #40]	; (8008fb8 <vPortSetupTimerInterrupt+0x3c>)
 8008f8e:	681b      	ldr	r3, [r3, #0]
 8008f90:	4a0a      	ldr	r2, [pc, #40]	; (8008fbc <vPortSetupTimerInterrupt+0x40>)
 8008f92:	fba2 2303 	umull	r2, r3, r2, r3
 8008f96:	099b      	lsrs	r3, r3, #6
 8008f98:	4a09      	ldr	r2, [pc, #36]	; (8008fc0 <vPortSetupTimerInterrupt+0x44>)
 8008f9a:	3b01      	subs	r3, #1
 8008f9c:	6013      	str	r3, [r2, #0]
 8008f9e:	4b04      	ldr	r3, [pc, #16]	; (8008fb0 <vPortSetupTimerInterrupt+0x34>)
 8008fa0:	2207      	movs	r2, #7
 8008fa2:	601a      	str	r2, [r3, #0]
 8008fa4:	bf00      	nop
 8008fa6:	46bd      	mov	sp, r7
 8008fa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008fac:	4770      	bx	lr
 8008fae:	bf00      	nop
 8008fb0:	e000e010 	.word	0xe000e010
 8008fb4:	e000e018 	.word	0xe000e018
 8008fb8:	20000000 	.word	0x20000000
 8008fbc:	10624dd3 	.word	0x10624dd3
 8008fc0:	e000e014 	.word	0xe000e014

08008fc4 <vPortEnableVFP>:
 8008fc4:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8008fd4 <vPortEnableVFP+0x10>
 8008fc8:	6801      	ldr	r1, [r0, #0]
 8008fca:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008fce:	6001      	str	r1, [r0, #0]
 8008fd0:	4770      	bx	lr
 8008fd2:	bf00      	nop
 8008fd4:	e000ed88 	.word	0xe000ed88

08008fd8 <vPortValidateInterruptPriority>:
 8008fd8:	b480      	push	{r7}
 8008fda:	b085      	sub	sp, #20
 8008fdc:	af00      	add	r7, sp, #0
 8008fde:	f3ef 8305 	mrs	r3, IPSR
 8008fe2:	60fb      	str	r3, [r7, #12]
 8008fe4:	68fb      	ldr	r3, [r7, #12]
 8008fe6:	2b0f      	cmp	r3, #15
 8008fe8:	d914      	bls.n	8009014 <vPortValidateInterruptPriority+0x3c>
 8008fea:	4a17      	ldr	r2, [pc, #92]	; (8009048 <vPortValidateInterruptPriority+0x70>)
 8008fec:	68fb      	ldr	r3, [r7, #12]
 8008fee:	4413      	add	r3, r2
 8008ff0:	781b      	ldrb	r3, [r3, #0]
 8008ff2:	72fb      	strb	r3, [r7, #11]
 8008ff4:	4b15      	ldr	r3, [pc, #84]	; (800904c <vPortValidateInterruptPriority+0x74>)
 8008ff6:	781b      	ldrb	r3, [r3, #0]
 8008ff8:	7afa      	ldrb	r2, [r7, #11]
 8008ffa:	429a      	cmp	r2, r3
 8008ffc:	d20a      	bcs.n	8009014 <vPortValidateInterruptPriority+0x3c>
 8008ffe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009002:	f383 8811 	msr	BASEPRI, r3
 8009006:	f3bf 8f6f 	isb	sy
 800900a:	f3bf 8f4f 	dsb	sy
 800900e:	607b      	str	r3, [r7, #4]
 8009010:	bf00      	nop
 8009012:	e7fe      	b.n	8009012 <vPortValidateInterruptPriority+0x3a>
 8009014:	4b0e      	ldr	r3, [pc, #56]	; (8009050 <vPortValidateInterruptPriority+0x78>)
 8009016:	681b      	ldr	r3, [r3, #0]
 8009018:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 800901c:	4b0d      	ldr	r3, [pc, #52]	; (8009054 <vPortValidateInterruptPriority+0x7c>)
 800901e:	681b      	ldr	r3, [r3, #0]
 8009020:	429a      	cmp	r2, r3
 8009022:	d90a      	bls.n	800903a <vPortValidateInterruptPriority+0x62>
 8009024:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009028:	f383 8811 	msr	BASEPRI, r3
 800902c:	f3bf 8f6f 	isb	sy
 8009030:	f3bf 8f4f 	dsb	sy
 8009034:	603b      	str	r3, [r7, #0]
 8009036:	bf00      	nop
 8009038:	e7fe      	b.n	8009038 <vPortValidateInterruptPriority+0x60>
 800903a:	bf00      	nop
 800903c:	3714      	adds	r7, #20
 800903e:	46bd      	mov	sp, r7
 8009040:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009044:	4770      	bx	lr
 8009046:	bf00      	nop
 8009048:	e000e3f0 	.word	0xe000e3f0
 800904c:	20002030 	.word	0x20002030
 8009050:	e000ed0c 	.word	0xe000ed0c
 8009054:	20002034 	.word	0x20002034

08009058 <pvPortMalloc>:
 8009058:	b580      	push	{r7, lr}
 800905a:	b08a      	sub	sp, #40	; 0x28
 800905c:	af00      	add	r7, sp, #0
 800905e:	6078      	str	r0, [r7, #4]
 8009060:	2300      	movs	r3, #0
 8009062:	61fb      	str	r3, [r7, #28]
 8009064:	f7fe fcd6 	bl	8007a14 <vTaskSuspendAll>
 8009068:	4b5b      	ldr	r3, [pc, #364]	; (80091d8 <pvPortMalloc+0x180>)
 800906a:	681b      	ldr	r3, [r3, #0]
 800906c:	2b00      	cmp	r3, #0
 800906e:	d101      	bne.n	8009074 <pvPortMalloc+0x1c>
 8009070:	f000 f920 	bl	80092b4 <prvHeapInit>
 8009074:	4b59      	ldr	r3, [pc, #356]	; (80091dc <pvPortMalloc+0x184>)
 8009076:	681a      	ldr	r2, [r3, #0]
 8009078:	687b      	ldr	r3, [r7, #4]
 800907a:	4013      	ands	r3, r2
 800907c:	2b00      	cmp	r3, #0
 800907e:	f040 8093 	bne.w	80091a8 <pvPortMalloc+0x150>
 8009082:	687b      	ldr	r3, [r7, #4]
 8009084:	2b00      	cmp	r3, #0
 8009086:	d01d      	beq.n	80090c4 <pvPortMalloc+0x6c>
 8009088:	2208      	movs	r2, #8
 800908a:	687b      	ldr	r3, [r7, #4]
 800908c:	4413      	add	r3, r2
 800908e:	607b      	str	r3, [r7, #4]
 8009090:	687b      	ldr	r3, [r7, #4]
 8009092:	f003 0307 	and.w	r3, r3, #7
 8009096:	2b00      	cmp	r3, #0
 8009098:	d014      	beq.n	80090c4 <pvPortMalloc+0x6c>
 800909a:	687b      	ldr	r3, [r7, #4]
 800909c:	f023 0307 	bic.w	r3, r3, #7
 80090a0:	3308      	adds	r3, #8
 80090a2:	607b      	str	r3, [r7, #4]
 80090a4:	687b      	ldr	r3, [r7, #4]
 80090a6:	f003 0307 	and.w	r3, r3, #7
 80090aa:	2b00      	cmp	r3, #0
 80090ac:	d00a      	beq.n	80090c4 <pvPortMalloc+0x6c>
 80090ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090b2:	f383 8811 	msr	BASEPRI, r3
 80090b6:	f3bf 8f6f 	isb	sy
 80090ba:	f3bf 8f4f 	dsb	sy
 80090be:	617b      	str	r3, [r7, #20]
 80090c0:	bf00      	nop
 80090c2:	e7fe      	b.n	80090c2 <pvPortMalloc+0x6a>
 80090c4:	687b      	ldr	r3, [r7, #4]
 80090c6:	2b00      	cmp	r3, #0
 80090c8:	d06e      	beq.n	80091a8 <pvPortMalloc+0x150>
 80090ca:	4b45      	ldr	r3, [pc, #276]	; (80091e0 <pvPortMalloc+0x188>)
 80090cc:	681b      	ldr	r3, [r3, #0]
 80090ce:	687a      	ldr	r2, [r7, #4]
 80090d0:	429a      	cmp	r2, r3
 80090d2:	d869      	bhi.n	80091a8 <pvPortMalloc+0x150>
 80090d4:	4b43      	ldr	r3, [pc, #268]	; (80091e4 <pvPortMalloc+0x18c>)
 80090d6:	623b      	str	r3, [r7, #32]
 80090d8:	4b42      	ldr	r3, [pc, #264]	; (80091e4 <pvPortMalloc+0x18c>)
 80090da:	681b      	ldr	r3, [r3, #0]
 80090dc:	627b      	str	r3, [r7, #36]	; 0x24
 80090de:	e004      	b.n	80090ea <pvPortMalloc+0x92>
 80090e0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80090e2:	623b      	str	r3, [r7, #32]
 80090e4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80090e6:	681b      	ldr	r3, [r3, #0]
 80090e8:	627b      	str	r3, [r7, #36]	; 0x24
 80090ea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80090ec:	685b      	ldr	r3, [r3, #4]
 80090ee:	687a      	ldr	r2, [r7, #4]
 80090f0:	429a      	cmp	r2, r3
 80090f2:	d903      	bls.n	80090fc <pvPortMalloc+0xa4>
 80090f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80090f6:	681b      	ldr	r3, [r3, #0]
 80090f8:	2b00      	cmp	r3, #0
 80090fa:	d1f1      	bne.n	80090e0 <pvPortMalloc+0x88>
 80090fc:	4b36      	ldr	r3, [pc, #216]	; (80091d8 <pvPortMalloc+0x180>)
 80090fe:	681b      	ldr	r3, [r3, #0]
 8009100:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8009102:	429a      	cmp	r2, r3
 8009104:	d050      	beq.n	80091a8 <pvPortMalloc+0x150>
 8009106:	6a3b      	ldr	r3, [r7, #32]
 8009108:	681b      	ldr	r3, [r3, #0]
 800910a:	2208      	movs	r2, #8
 800910c:	4413      	add	r3, r2
 800910e:	61fb      	str	r3, [r7, #28]
 8009110:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009112:	681a      	ldr	r2, [r3, #0]
 8009114:	6a3b      	ldr	r3, [r7, #32]
 8009116:	601a      	str	r2, [r3, #0]
 8009118:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800911a:	685a      	ldr	r2, [r3, #4]
 800911c:	687b      	ldr	r3, [r7, #4]
 800911e:	1ad2      	subs	r2, r2, r3
 8009120:	2308      	movs	r3, #8
 8009122:	005b      	lsls	r3, r3, #1
 8009124:	429a      	cmp	r2, r3
 8009126:	d91f      	bls.n	8009168 <pvPortMalloc+0x110>
 8009128:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800912a:	687b      	ldr	r3, [r7, #4]
 800912c:	4413      	add	r3, r2
 800912e:	61bb      	str	r3, [r7, #24]
 8009130:	69bb      	ldr	r3, [r7, #24]
 8009132:	f003 0307 	and.w	r3, r3, #7
 8009136:	2b00      	cmp	r3, #0
 8009138:	d00a      	beq.n	8009150 <pvPortMalloc+0xf8>
 800913a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800913e:	f383 8811 	msr	BASEPRI, r3
 8009142:	f3bf 8f6f 	isb	sy
 8009146:	f3bf 8f4f 	dsb	sy
 800914a:	613b      	str	r3, [r7, #16]
 800914c:	bf00      	nop
 800914e:	e7fe      	b.n	800914e <pvPortMalloc+0xf6>
 8009150:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009152:	685a      	ldr	r2, [r3, #4]
 8009154:	687b      	ldr	r3, [r7, #4]
 8009156:	1ad2      	subs	r2, r2, r3
 8009158:	69bb      	ldr	r3, [r7, #24]
 800915a:	605a      	str	r2, [r3, #4]
 800915c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800915e:	687a      	ldr	r2, [r7, #4]
 8009160:	605a      	str	r2, [r3, #4]
 8009162:	69b8      	ldr	r0, [r7, #24]
 8009164:	f000 f908 	bl	8009378 <prvInsertBlockIntoFreeList>
 8009168:	4b1d      	ldr	r3, [pc, #116]	; (80091e0 <pvPortMalloc+0x188>)
 800916a:	681a      	ldr	r2, [r3, #0]
 800916c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800916e:	685b      	ldr	r3, [r3, #4]
 8009170:	1ad3      	subs	r3, r2, r3
 8009172:	4a1b      	ldr	r2, [pc, #108]	; (80091e0 <pvPortMalloc+0x188>)
 8009174:	6013      	str	r3, [r2, #0]
 8009176:	4b1a      	ldr	r3, [pc, #104]	; (80091e0 <pvPortMalloc+0x188>)
 8009178:	681a      	ldr	r2, [r3, #0]
 800917a:	4b1b      	ldr	r3, [pc, #108]	; (80091e8 <pvPortMalloc+0x190>)
 800917c:	681b      	ldr	r3, [r3, #0]
 800917e:	429a      	cmp	r2, r3
 8009180:	d203      	bcs.n	800918a <pvPortMalloc+0x132>
 8009182:	4b17      	ldr	r3, [pc, #92]	; (80091e0 <pvPortMalloc+0x188>)
 8009184:	681b      	ldr	r3, [r3, #0]
 8009186:	4a18      	ldr	r2, [pc, #96]	; (80091e8 <pvPortMalloc+0x190>)
 8009188:	6013      	str	r3, [r2, #0]
 800918a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800918c:	685a      	ldr	r2, [r3, #4]
 800918e:	4b13      	ldr	r3, [pc, #76]	; (80091dc <pvPortMalloc+0x184>)
 8009190:	681b      	ldr	r3, [r3, #0]
 8009192:	431a      	orrs	r2, r3
 8009194:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009196:	605a      	str	r2, [r3, #4]
 8009198:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800919a:	2200      	movs	r2, #0
 800919c:	601a      	str	r2, [r3, #0]
 800919e:	4b13      	ldr	r3, [pc, #76]	; (80091ec <pvPortMalloc+0x194>)
 80091a0:	681b      	ldr	r3, [r3, #0]
 80091a2:	3301      	adds	r3, #1
 80091a4:	4a11      	ldr	r2, [pc, #68]	; (80091ec <pvPortMalloc+0x194>)
 80091a6:	6013      	str	r3, [r2, #0]
 80091a8:	f7fe fc42 	bl	8007a30 <xTaskResumeAll>
 80091ac:	69fb      	ldr	r3, [r7, #28]
 80091ae:	f003 0307 	and.w	r3, r3, #7
 80091b2:	2b00      	cmp	r3, #0
 80091b4:	d00a      	beq.n	80091cc <pvPortMalloc+0x174>
 80091b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091ba:	f383 8811 	msr	BASEPRI, r3
 80091be:	f3bf 8f6f 	isb	sy
 80091c2:	f3bf 8f4f 	dsb	sy
 80091c6:	60fb      	str	r3, [r7, #12]
 80091c8:	bf00      	nop
 80091ca:	e7fe      	b.n	80091ca <pvPortMalloc+0x172>
 80091cc:	69fb      	ldr	r3, [r7, #28]
 80091ce:	4618      	mov	r0, r3
 80091d0:	3728      	adds	r7, #40	; 0x28
 80091d2:	46bd      	mov	sp, r7
 80091d4:	bd80      	pop	{r7, pc}
 80091d6:	bf00      	nop
 80091d8:	20005c40 	.word	0x20005c40
 80091dc:	20005c54 	.word	0x20005c54
 80091e0:	20005c44 	.word	0x20005c44
 80091e4:	20005c38 	.word	0x20005c38
 80091e8:	20005c48 	.word	0x20005c48
 80091ec:	20005c4c 	.word	0x20005c4c

080091f0 <vPortFree>:
 80091f0:	b580      	push	{r7, lr}
 80091f2:	b086      	sub	sp, #24
 80091f4:	af00      	add	r7, sp, #0
 80091f6:	6078      	str	r0, [r7, #4]
 80091f8:	687b      	ldr	r3, [r7, #4]
 80091fa:	617b      	str	r3, [r7, #20]
 80091fc:	687b      	ldr	r3, [r7, #4]
 80091fe:	2b00      	cmp	r3, #0
 8009200:	d04d      	beq.n	800929e <vPortFree+0xae>
 8009202:	2308      	movs	r3, #8
 8009204:	425b      	negs	r3, r3
 8009206:	697a      	ldr	r2, [r7, #20]
 8009208:	4413      	add	r3, r2
 800920a:	617b      	str	r3, [r7, #20]
 800920c:	697b      	ldr	r3, [r7, #20]
 800920e:	613b      	str	r3, [r7, #16]
 8009210:	693b      	ldr	r3, [r7, #16]
 8009212:	685a      	ldr	r2, [r3, #4]
 8009214:	4b24      	ldr	r3, [pc, #144]	; (80092a8 <vPortFree+0xb8>)
 8009216:	681b      	ldr	r3, [r3, #0]
 8009218:	4013      	ands	r3, r2
 800921a:	2b00      	cmp	r3, #0
 800921c:	d10a      	bne.n	8009234 <vPortFree+0x44>
 800921e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009222:	f383 8811 	msr	BASEPRI, r3
 8009226:	f3bf 8f6f 	isb	sy
 800922a:	f3bf 8f4f 	dsb	sy
 800922e:	60fb      	str	r3, [r7, #12]
 8009230:	bf00      	nop
 8009232:	e7fe      	b.n	8009232 <vPortFree+0x42>
 8009234:	693b      	ldr	r3, [r7, #16]
 8009236:	681b      	ldr	r3, [r3, #0]
 8009238:	2b00      	cmp	r3, #0
 800923a:	d00a      	beq.n	8009252 <vPortFree+0x62>
 800923c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009240:	f383 8811 	msr	BASEPRI, r3
 8009244:	f3bf 8f6f 	isb	sy
 8009248:	f3bf 8f4f 	dsb	sy
 800924c:	60bb      	str	r3, [r7, #8]
 800924e:	bf00      	nop
 8009250:	e7fe      	b.n	8009250 <vPortFree+0x60>
 8009252:	693b      	ldr	r3, [r7, #16]
 8009254:	685a      	ldr	r2, [r3, #4]
 8009256:	4b14      	ldr	r3, [pc, #80]	; (80092a8 <vPortFree+0xb8>)
 8009258:	681b      	ldr	r3, [r3, #0]
 800925a:	4013      	ands	r3, r2
 800925c:	2b00      	cmp	r3, #0
 800925e:	d01e      	beq.n	800929e <vPortFree+0xae>
 8009260:	693b      	ldr	r3, [r7, #16]
 8009262:	681b      	ldr	r3, [r3, #0]
 8009264:	2b00      	cmp	r3, #0
 8009266:	d11a      	bne.n	800929e <vPortFree+0xae>
 8009268:	693b      	ldr	r3, [r7, #16]
 800926a:	685a      	ldr	r2, [r3, #4]
 800926c:	4b0e      	ldr	r3, [pc, #56]	; (80092a8 <vPortFree+0xb8>)
 800926e:	681b      	ldr	r3, [r3, #0]
 8009270:	43db      	mvns	r3, r3
 8009272:	401a      	ands	r2, r3
 8009274:	693b      	ldr	r3, [r7, #16]
 8009276:	605a      	str	r2, [r3, #4]
 8009278:	f7fe fbcc 	bl	8007a14 <vTaskSuspendAll>
 800927c:	693b      	ldr	r3, [r7, #16]
 800927e:	685a      	ldr	r2, [r3, #4]
 8009280:	4b0a      	ldr	r3, [pc, #40]	; (80092ac <vPortFree+0xbc>)
 8009282:	681b      	ldr	r3, [r3, #0]
 8009284:	4413      	add	r3, r2
 8009286:	4a09      	ldr	r2, [pc, #36]	; (80092ac <vPortFree+0xbc>)
 8009288:	6013      	str	r3, [r2, #0]
 800928a:	6938      	ldr	r0, [r7, #16]
 800928c:	f000 f874 	bl	8009378 <prvInsertBlockIntoFreeList>
 8009290:	4b07      	ldr	r3, [pc, #28]	; (80092b0 <vPortFree+0xc0>)
 8009292:	681b      	ldr	r3, [r3, #0]
 8009294:	3301      	adds	r3, #1
 8009296:	4a06      	ldr	r2, [pc, #24]	; (80092b0 <vPortFree+0xc0>)
 8009298:	6013      	str	r3, [r2, #0]
 800929a:	f7fe fbc9 	bl	8007a30 <xTaskResumeAll>
 800929e:	bf00      	nop
 80092a0:	3718      	adds	r7, #24
 80092a2:	46bd      	mov	sp, r7
 80092a4:	bd80      	pop	{r7, pc}
 80092a6:	bf00      	nop
 80092a8:	20005c54 	.word	0x20005c54
 80092ac:	20005c44 	.word	0x20005c44
 80092b0:	20005c50 	.word	0x20005c50

080092b4 <prvHeapInit>:
 80092b4:	b480      	push	{r7}
 80092b6:	b085      	sub	sp, #20
 80092b8:	af00      	add	r7, sp, #0
 80092ba:	f44f 5370 	mov.w	r3, #15360	; 0x3c00
 80092be:	60bb      	str	r3, [r7, #8]
 80092c0:	4b27      	ldr	r3, [pc, #156]	; (8009360 <prvHeapInit+0xac>)
 80092c2:	60fb      	str	r3, [r7, #12]
 80092c4:	68fb      	ldr	r3, [r7, #12]
 80092c6:	f003 0307 	and.w	r3, r3, #7
 80092ca:	2b00      	cmp	r3, #0
 80092cc:	d00c      	beq.n	80092e8 <prvHeapInit+0x34>
 80092ce:	68fb      	ldr	r3, [r7, #12]
 80092d0:	3307      	adds	r3, #7
 80092d2:	60fb      	str	r3, [r7, #12]
 80092d4:	68fb      	ldr	r3, [r7, #12]
 80092d6:	f023 0307 	bic.w	r3, r3, #7
 80092da:	60fb      	str	r3, [r7, #12]
 80092dc:	68ba      	ldr	r2, [r7, #8]
 80092de:	68fb      	ldr	r3, [r7, #12]
 80092e0:	1ad3      	subs	r3, r2, r3
 80092e2:	4a1f      	ldr	r2, [pc, #124]	; (8009360 <prvHeapInit+0xac>)
 80092e4:	4413      	add	r3, r2
 80092e6:	60bb      	str	r3, [r7, #8]
 80092e8:	68fb      	ldr	r3, [r7, #12]
 80092ea:	607b      	str	r3, [r7, #4]
 80092ec:	4a1d      	ldr	r2, [pc, #116]	; (8009364 <prvHeapInit+0xb0>)
 80092ee:	687b      	ldr	r3, [r7, #4]
 80092f0:	6013      	str	r3, [r2, #0]
 80092f2:	4b1c      	ldr	r3, [pc, #112]	; (8009364 <prvHeapInit+0xb0>)
 80092f4:	2200      	movs	r2, #0
 80092f6:	605a      	str	r2, [r3, #4]
 80092f8:	687b      	ldr	r3, [r7, #4]
 80092fa:	68ba      	ldr	r2, [r7, #8]
 80092fc:	4413      	add	r3, r2
 80092fe:	60fb      	str	r3, [r7, #12]
 8009300:	2208      	movs	r2, #8
 8009302:	68fb      	ldr	r3, [r7, #12]
 8009304:	1a9b      	subs	r3, r3, r2
 8009306:	60fb      	str	r3, [r7, #12]
 8009308:	68fb      	ldr	r3, [r7, #12]
 800930a:	f023 0307 	bic.w	r3, r3, #7
 800930e:	60fb      	str	r3, [r7, #12]
 8009310:	68fb      	ldr	r3, [r7, #12]
 8009312:	4a15      	ldr	r2, [pc, #84]	; (8009368 <prvHeapInit+0xb4>)
 8009314:	6013      	str	r3, [r2, #0]
 8009316:	4b14      	ldr	r3, [pc, #80]	; (8009368 <prvHeapInit+0xb4>)
 8009318:	681b      	ldr	r3, [r3, #0]
 800931a:	2200      	movs	r2, #0
 800931c:	605a      	str	r2, [r3, #4]
 800931e:	4b12      	ldr	r3, [pc, #72]	; (8009368 <prvHeapInit+0xb4>)
 8009320:	681b      	ldr	r3, [r3, #0]
 8009322:	2200      	movs	r2, #0
 8009324:	601a      	str	r2, [r3, #0]
 8009326:	687b      	ldr	r3, [r7, #4]
 8009328:	603b      	str	r3, [r7, #0]
 800932a:	683b      	ldr	r3, [r7, #0]
 800932c:	68fa      	ldr	r2, [r7, #12]
 800932e:	1ad2      	subs	r2, r2, r3
 8009330:	683b      	ldr	r3, [r7, #0]
 8009332:	605a      	str	r2, [r3, #4]
 8009334:	4b0c      	ldr	r3, [pc, #48]	; (8009368 <prvHeapInit+0xb4>)
 8009336:	681a      	ldr	r2, [r3, #0]
 8009338:	683b      	ldr	r3, [r7, #0]
 800933a:	601a      	str	r2, [r3, #0]
 800933c:	683b      	ldr	r3, [r7, #0]
 800933e:	685b      	ldr	r3, [r3, #4]
 8009340:	4a0a      	ldr	r2, [pc, #40]	; (800936c <prvHeapInit+0xb8>)
 8009342:	6013      	str	r3, [r2, #0]
 8009344:	683b      	ldr	r3, [r7, #0]
 8009346:	685b      	ldr	r3, [r3, #4]
 8009348:	4a09      	ldr	r2, [pc, #36]	; (8009370 <prvHeapInit+0xbc>)
 800934a:	6013      	str	r3, [r2, #0]
 800934c:	4b09      	ldr	r3, [pc, #36]	; (8009374 <prvHeapInit+0xc0>)
 800934e:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8009352:	601a      	str	r2, [r3, #0]
 8009354:	bf00      	nop
 8009356:	3714      	adds	r7, #20
 8009358:	46bd      	mov	sp, r7
 800935a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800935e:	4770      	bx	lr
 8009360:	20002038 	.word	0x20002038
 8009364:	20005c38 	.word	0x20005c38
 8009368:	20005c40 	.word	0x20005c40
 800936c:	20005c48 	.word	0x20005c48
 8009370:	20005c44 	.word	0x20005c44
 8009374:	20005c54 	.word	0x20005c54

08009378 <prvInsertBlockIntoFreeList>:
 8009378:	b480      	push	{r7}
 800937a:	b085      	sub	sp, #20
 800937c:	af00      	add	r7, sp, #0
 800937e:	6078      	str	r0, [r7, #4]
 8009380:	4b28      	ldr	r3, [pc, #160]	; (8009424 <prvInsertBlockIntoFreeList+0xac>)
 8009382:	60fb      	str	r3, [r7, #12]
 8009384:	e002      	b.n	800938c <prvInsertBlockIntoFreeList+0x14>
 8009386:	68fb      	ldr	r3, [r7, #12]
 8009388:	681b      	ldr	r3, [r3, #0]
 800938a:	60fb      	str	r3, [r7, #12]
 800938c:	68fb      	ldr	r3, [r7, #12]
 800938e:	681b      	ldr	r3, [r3, #0]
 8009390:	687a      	ldr	r2, [r7, #4]
 8009392:	429a      	cmp	r2, r3
 8009394:	d8f7      	bhi.n	8009386 <prvInsertBlockIntoFreeList+0xe>
 8009396:	68fb      	ldr	r3, [r7, #12]
 8009398:	60bb      	str	r3, [r7, #8]
 800939a:	68fb      	ldr	r3, [r7, #12]
 800939c:	685b      	ldr	r3, [r3, #4]
 800939e:	68ba      	ldr	r2, [r7, #8]
 80093a0:	4413      	add	r3, r2
 80093a2:	687a      	ldr	r2, [r7, #4]
 80093a4:	429a      	cmp	r2, r3
 80093a6:	d108      	bne.n	80093ba <prvInsertBlockIntoFreeList+0x42>
 80093a8:	68fb      	ldr	r3, [r7, #12]
 80093aa:	685a      	ldr	r2, [r3, #4]
 80093ac:	687b      	ldr	r3, [r7, #4]
 80093ae:	685b      	ldr	r3, [r3, #4]
 80093b0:	441a      	add	r2, r3
 80093b2:	68fb      	ldr	r3, [r7, #12]
 80093b4:	605a      	str	r2, [r3, #4]
 80093b6:	68fb      	ldr	r3, [r7, #12]
 80093b8:	607b      	str	r3, [r7, #4]
 80093ba:	687b      	ldr	r3, [r7, #4]
 80093bc:	60bb      	str	r3, [r7, #8]
 80093be:	687b      	ldr	r3, [r7, #4]
 80093c0:	685b      	ldr	r3, [r3, #4]
 80093c2:	68ba      	ldr	r2, [r7, #8]
 80093c4:	441a      	add	r2, r3
 80093c6:	68fb      	ldr	r3, [r7, #12]
 80093c8:	681b      	ldr	r3, [r3, #0]
 80093ca:	429a      	cmp	r2, r3
 80093cc:	d118      	bne.n	8009400 <prvInsertBlockIntoFreeList+0x88>
 80093ce:	68fb      	ldr	r3, [r7, #12]
 80093d0:	681a      	ldr	r2, [r3, #0]
 80093d2:	4b15      	ldr	r3, [pc, #84]	; (8009428 <prvInsertBlockIntoFreeList+0xb0>)
 80093d4:	681b      	ldr	r3, [r3, #0]
 80093d6:	429a      	cmp	r2, r3
 80093d8:	d00d      	beq.n	80093f6 <prvInsertBlockIntoFreeList+0x7e>
 80093da:	687b      	ldr	r3, [r7, #4]
 80093dc:	685a      	ldr	r2, [r3, #4]
 80093de:	68fb      	ldr	r3, [r7, #12]
 80093e0:	681b      	ldr	r3, [r3, #0]
 80093e2:	685b      	ldr	r3, [r3, #4]
 80093e4:	441a      	add	r2, r3
 80093e6:	687b      	ldr	r3, [r7, #4]
 80093e8:	605a      	str	r2, [r3, #4]
 80093ea:	68fb      	ldr	r3, [r7, #12]
 80093ec:	681b      	ldr	r3, [r3, #0]
 80093ee:	681a      	ldr	r2, [r3, #0]
 80093f0:	687b      	ldr	r3, [r7, #4]
 80093f2:	601a      	str	r2, [r3, #0]
 80093f4:	e008      	b.n	8009408 <prvInsertBlockIntoFreeList+0x90>
 80093f6:	4b0c      	ldr	r3, [pc, #48]	; (8009428 <prvInsertBlockIntoFreeList+0xb0>)
 80093f8:	681a      	ldr	r2, [r3, #0]
 80093fa:	687b      	ldr	r3, [r7, #4]
 80093fc:	601a      	str	r2, [r3, #0]
 80093fe:	e003      	b.n	8009408 <prvInsertBlockIntoFreeList+0x90>
 8009400:	68fb      	ldr	r3, [r7, #12]
 8009402:	681a      	ldr	r2, [r3, #0]
 8009404:	687b      	ldr	r3, [r7, #4]
 8009406:	601a      	str	r2, [r3, #0]
 8009408:	68fa      	ldr	r2, [r7, #12]
 800940a:	687b      	ldr	r3, [r7, #4]
 800940c:	429a      	cmp	r2, r3
 800940e:	d002      	beq.n	8009416 <prvInsertBlockIntoFreeList+0x9e>
 8009410:	68fb      	ldr	r3, [r7, #12]
 8009412:	687a      	ldr	r2, [r7, #4]
 8009414:	601a      	str	r2, [r3, #0]
 8009416:	bf00      	nop
 8009418:	3714      	adds	r7, #20
 800941a:	46bd      	mov	sp, r7
 800941c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009420:	4770      	bx	lr
 8009422:	bf00      	nop
 8009424:	20005c38 	.word	0x20005c38
 8009428:	20005c40 	.word	0x20005c40

0800942c <_strtol_l.constprop.0>:
 800942c:	2b01      	cmp	r3, #1
 800942e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009432:	d001      	beq.n	8009438 <_strtol_l.constprop.0+0xc>
 8009434:	2b24      	cmp	r3, #36	; 0x24
 8009436:	d906      	bls.n	8009446 <_strtol_l.constprop.0+0x1a>
 8009438:	f000 fbbc 	bl	8009bb4 <__errno>
 800943c:	2316      	movs	r3, #22
 800943e:	6003      	str	r3, [r0, #0]
 8009440:	2000      	movs	r0, #0
 8009442:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009446:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 800952c <_strtol_l.constprop.0+0x100>
 800944a:	460d      	mov	r5, r1
 800944c:	462e      	mov	r6, r5
 800944e:	f815 4b01 	ldrb.w	r4, [r5], #1
 8009452:	f81c 7004 	ldrb.w	r7, [ip, r4]
 8009456:	f017 0708 	ands.w	r7, r7, #8
 800945a:	d1f7      	bne.n	800944c <_strtol_l.constprop.0+0x20>
 800945c:	2c2d      	cmp	r4, #45	; 0x2d
 800945e:	d132      	bne.n	80094c6 <_strtol_l.constprop.0+0x9a>
 8009460:	782c      	ldrb	r4, [r5, #0]
 8009462:	2701      	movs	r7, #1
 8009464:	1cb5      	adds	r5, r6, #2
 8009466:	2b00      	cmp	r3, #0
 8009468:	d05b      	beq.n	8009522 <_strtol_l.constprop.0+0xf6>
 800946a:	2b10      	cmp	r3, #16
 800946c:	d109      	bne.n	8009482 <_strtol_l.constprop.0+0x56>
 800946e:	2c30      	cmp	r4, #48	; 0x30
 8009470:	d107      	bne.n	8009482 <_strtol_l.constprop.0+0x56>
 8009472:	782c      	ldrb	r4, [r5, #0]
 8009474:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 8009478:	2c58      	cmp	r4, #88	; 0x58
 800947a:	d14d      	bne.n	8009518 <_strtol_l.constprop.0+0xec>
 800947c:	786c      	ldrb	r4, [r5, #1]
 800947e:	2310      	movs	r3, #16
 8009480:	3502      	adds	r5, #2
 8009482:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 8009486:	f108 38ff 	add.w	r8, r8, #4294967295
 800948a:	f04f 0e00 	mov.w	lr, #0
 800948e:	fbb8 f9f3 	udiv	r9, r8, r3
 8009492:	4676      	mov	r6, lr
 8009494:	fb03 8a19 	mls	sl, r3, r9, r8
 8009498:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 800949c:	f1bc 0f09 	cmp.w	ip, #9
 80094a0:	d816      	bhi.n	80094d0 <_strtol_l.constprop.0+0xa4>
 80094a2:	4664      	mov	r4, ip
 80094a4:	42a3      	cmp	r3, r4
 80094a6:	dd24      	ble.n	80094f2 <_strtol_l.constprop.0+0xc6>
 80094a8:	f1be 3fff 	cmp.w	lr, #4294967295
 80094ac:	d008      	beq.n	80094c0 <_strtol_l.constprop.0+0x94>
 80094ae:	45b1      	cmp	r9, r6
 80094b0:	d31c      	bcc.n	80094ec <_strtol_l.constprop.0+0xc0>
 80094b2:	d101      	bne.n	80094b8 <_strtol_l.constprop.0+0x8c>
 80094b4:	45a2      	cmp	sl, r4
 80094b6:	db19      	blt.n	80094ec <_strtol_l.constprop.0+0xc0>
 80094b8:	fb06 4603 	mla	r6, r6, r3, r4
 80094bc:	f04f 0e01 	mov.w	lr, #1
 80094c0:	f815 4b01 	ldrb.w	r4, [r5], #1
 80094c4:	e7e8      	b.n	8009498 <_strtol_l.constprop.0+0x6c>
 80094c6:	2c2b      	cmp	r4, #43	; 0x2b
 80094c8:	bf04      	itt	eq
 80094ca:	782c      	ldrbeq	r4, [r5, #0]
 80094cc:	1cb5      	addeq	r5, r6, #2
 80094ce:	e7ca      	b.n	8009466 <_strtol_l.constprop.0+0x3a>
 80094d0:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 80094d4:	f1bc 0f19 	cmp.w	ip, #25
 80094d8:	d801      	bhi.n	80094de <_strtol_l.constprop.0+0xb2>
 80094da:	3c37      	subs	r4, #55	; 0x37
 80094dc:	e7e2      	b.n	80094a4 <_strtol_l.constprop.0+0x78>
 80094de:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 80094e2:	f1bc 0f19 	cmp.w	ip, #25
 80094e6:	d804      	bhi.n	80094f2 <_strtol_l.constprop.0+0xc6>
 80094e8:	3c57      	subs	r4, #87	; 0x57
 80094ea:	e7db      	b.n	80094a4 <_strtol_l.constprop.0+0x78>
 80094ec:	f04f 3eff 	mov.w	lr, #4294967295
 80094f0:	e7e6      	b.n	80094c0 <_strtol_l.constprop.0+0x94>
 80094f2:	f1be 3fff 	cmp.w	lr, #4294967295
 80094f6:	d105      	bne.n	8009504 <_strtol_l.constprop.0+0xd8>
 80094f8:	2322      	movs	r3, #34	; 0x22
 80094fa:	6003      	str	r3, [r0, #0]
 80094fc:	4646      	mov	r6, r8
 80094fe:	b942      	cbnz	r2, 8009512 <_strtol_l.constprop.0+0xe6>
 8009500:	4630      	mov	r0, r6
 8009502:	e79e      	b.n	8009442 <_strtol_l.constprop.0+0x16>
 8009504:	b107      	cbz	r7, 8009508 <_strtol_l.constprop.0+0xdc>
 8009506:	4276      	negs	r6, r6
 8009508:	2a00      	cmp	r2, #0
 800950a:	d0f9      	beq.n	8009500 <_strtol_l.constprop.0+0xd4>
 800950c:	f1be 0f00 	cmp.w	lr, #0
 8009510:	d000      	beq.n	8009514 <_strtol_l.constprop.0+0xe8>
 8009512:	1e69      	subs	r1, r5, #1
 8009514:	6011      	str	r1, [r2, #0]
 8009516:	e7f3      	b.n	8009500 <_strtol_l.constprop.0+0xd4>
 8009518:	2430      	movs	r4, #48	; 0x30
 800951a:	2b00      	cmp	r3, #0
 800951c:	d1b1      	bne.n	8009482 <_strtol_l.constprop.0+0x56>
 800951e:	2308      	movs	r3, #8
 8009520:	e7af      	b.n	8009482 <_strtol_l.constprop.0+0x56>
 8009522:	2c30      	cmp	r4, #48	; 0x30
 8009524:	d0a5      	beq.n	8009472 <_strtol_l.constprop.0+0x46>
 8009526:	230a      	movs	r3, #10
 8009528:	e7ab      	b.n	8009482 <_strtol_l.constprop.0+0x56>
 800952a:	bf00      	nop
 800952c:	0800ad99 	.word	0x0800ad99

08009530 <strtol>:
 8009530:	4613      	mov	r3, r2
 8009532:	460a      	mov	r2, r1
 8009534:	4601      	mov	r1, r0
 8009536:	4802      	ldr	r0, [pc, #8]	; (8009540 <strtol+0x10>)
 8009538:	6800      	ldr	r0, [r0, #0]
 800953a:	f7ff bf77 	b.w	800942c <_strtol_l.constprop.0>
 800953e:	bf00      	nop
 8009540:	20000068 	.word	0x20000068

08009544 <std>:
 8009544:	2300      	movs	r3, #0
 8009546:	b510      	push	{r4, lr}
 8009548:	4604      	mov	r4, r0
 800954a:	e9c0 3300 	strd	r3, r3, [r0]
 800954e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8009552:	6083      	str	r3, [r0, #8]
 8009554:	8181      	strh	r1, [r0, #12]
 8009556:	6643      	str	r3, [r0, #100]	; 0x64
 8009558:	81c2      	strh	r2, [r0, #14]
 800955a:	6183      	str	r3, [r0, #24]
 800955c:	4619      	mov	r1, r3
 800955e:	2208      	movs	r2, #8
 8009560:	305c      	adds	r0, #92	; 0x5c
 8009562:	f000 fa27 	bl	80099b4 <memset>
 8009566:	4b0d      	ldr	r3, [pc, #52]	; (800959c <std+0x58>)
 8009568:	6263      	str	r3, [r4, #36]	; 0x24
 800956a:	4b0d      	ldr	r3, [pc, #52]	; (80095a0 <std+0x5c>)
 800956c:	62a3      	str	r3, [r4, #40]	; 0x28
 800956e:	4b0d      	ldr	r3, [pc, #52]	; (80095a4 <std+0x60>)
 8009570:	62e3      	str	r3, [r4, #44]	; 0x2c
 8009572:	4b0d      	ldr	r3, [pc, #52]	; (80095a8 <std+0x64>)
 8009574:	6323      	str	r3, [r4, #48]	; 0x30
 8009576:	4b0d      	ldr	r3, [pc, #52]	; (80095ac <std+0x68>)
 8009578:	6224      	str	r4, [r4, #32]
 800957a:	429c      	cmp	r4, r3
 800957c:	d006      	beq.n	800958c <std+0x48>
 800957e:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8009582:	4294      	cmp	r4, r2
 8009584:	d002      	beq.n	800958c <std+0x48>
 8009586:	33d0      	adds	r3, #208	; 0xd0
 8009588:	429c      	cmp	r4, r3
 800958a:	d105      	bne.n	8009598 <std+0x54>
 800958c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8009590:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009594:	f000 bb38 	b.w	8009c08 <__retarget_lock_init_recursive>
 8009598:	bd10      	pop	{r4, pc}
 800959a:	bf00      	nop
 800959c:	080097e5 	.word	0x080097e5
 80095a0:	08009807 	.word	0x08009807
 80095a4:	0800983f 	.word	0x0800983f
 80095a8:	08009863 	.word	0x08009863
 80095ac:	20005c58 	.word	0x20005c58

080095b0 <stdio_exit_handler>:
 80095b0:	4a02      	ldr	r2, [pc, #8]	; (80095bc <stdio_exit_handler+0xc>)
 80095b2:	4903      	ldr	r1, [pc, #12]	; (80095c0 <stdio_exit_handler+0x10>)
 80095b4:	4803      	ldr	r0, [pc, #12]	; (80095c4 <stdio_exit_handler+0x14>)
 80095b6:	f000 b869 	b.w	800968c <_fwalk_sglue>
 80095ba:	bf00      	nop
 80095bc:	20000010 	.word	0x20000010
 80095c0:	0800a7cd 	.word	0x0800a7cd
 80095c4:	2000001c 	.word	0x2000001c

080095c8 <cleanup_stdio>:
 80095c8:	6841      	ldr	r1, [r0, #4]
 80095ca:	4b0c      	ldr	r3, [pc, #48]	; (80095fc <cleanup_stdio+0x34>)
 80095cc:	4299      	cmp	r1, r3
 80095ce:	b510      	push	{r4, lr}
 80095d0:	4604      	mov	r4, r0
 80095d2:	d001      	beq.n	80095d8 <cleanup_stdio+0x10>
 80095d4:	f001 f8fa 	bl	800a7cc <_fflush_r>
 80095d8:	68a1      	ldr	r1, [r4, #8]
 80095da:	4b09      	ldr	r3, [pc, #36]	; (8009600 <cleanup_stdio+0x38>)
 80095dc:	4299      	cmp	r1, r3
 80095de:	d002      	beq.n	80095e6 <cleanup_stdio+0x1e>
 80095e0:	4620      	mov	r0, r4
 80095e2:	f001 f8f3 	bl	800a7cc <_fflush_r>
 80095e6:	68e1      	ldr	r1, [r4, #12]
 80095e8:	4b06      	ldr	r3, [pc, #24]	; (8009604 <cleanup_stdio+0x3c>)
 80095ea:	4299      	cmp	r1, r3
 80095ec:	d004      	beq.n	80095f8 <cleanup_stdio+0x30>
 80095ee:	4620      	mov	r0, r4
 80095f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80095f4:	f001 b8ea 	b.w	800a7cc <_fflush_r>
 80095f8:	bd10      	pop	{r4, pc}
 80095fa:	bf00      	nop
 80095fc:	20005c58 	.word	0x20005c58
 8009600:	20005cc0 	.word	0x20005cc0
 8009604:	20005d28 	.word	0x20005d28

08009608 <global_stdio_init.part.0>:
 8009608:	b510      	push	{r4, lr}
 800960a:	4b0b      	ldr	r3, [pc, #44]	; (8009638 <global_stdio_init.part.0+0x30>)
 800960c:	4c0b      	ldr	r4, [pc, #44]	; (800963c <global_stdio_init.part.0+0x34>)
 800960e:	4a0c      	ldr	r2, [pc, #48]	; (8009640 <global_stdio_init.part.0+0x38>)
 8009610:	601a      	str	r2, [r3, #0]
 8009612:	4620      	mov	r0, r4
 8009614:	2200      	movs	r2, #0
 8009616:	2104      	movs	r1, #4
 8009618:	f7ff ff94 	bl	8009544 <std>
 800961c:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8009620:	2201      	movs	r2, #1
 8009622:	2109      	movs	r1, #9
 8009624:	f7ff ff8e 	bl	8009544 <std>
 8009628:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 800962c:	2202      	movs	r2, #2
 800962e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009632:	2112      	movs	r1, #18
 8009634:	f7ff bf86 	b.w	8009544 <std>
 8009638:	20005d90 	.word	0x20005d90
 800963c:	20005c58 	.word	0x20005c58
 8009640:	080095b1 	.word	0x080095b1

08009644 <__sfp_lock_acquire>:
 8009644:	4801      	ldr	r0, [pc, #4]	; (800964c <__sfp_lock_acquire+0x8>)
 8009646:	f000 bae0 	b.w	8009c0a <__retarget_lock_acquire_recursive>
 800964a:	bf00      	nop
 800964c:	20005d99 	.word	0x20005d99

08009650 <__sfp_lock_release>:
 8009650:	4801      	ldr	r0, [pc, #4]	; (8009658 <__sfp_lock_release+0x8>)
 8009652:	f000 badb 	b.w	8009c0c <__retarget_lock_release_recursive>
 8009656:	bf00      	nop
 8009658:	20005d99 	.word	0x20005d99

0800965c <__sinit>:
 800965c:	b510      	push	{r4, lr}
 800965e:	4604      	mov	r4, r0
 8009660:	f7ff fff0 	bl	8009644 <__sfp_lock_acquire>
 8009664:	6a23      	ldr	r3, [r4, #32]
 8009666:	b11b      	cbz	r3, 8009670 <__sinit+0x14>
 8009668:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800966c:	f7ff bff0 	b.w	8009650 <__sfp_lock_release>
 8009670:	4b04      	ldr	r3, [pc, #16]	; (8009684 <__sinit+0x28>)
 8009672:	6223      	str	r3, [r4, #32]
 8009674:	4b04      	ldr	r3, [pc, #16]	; (8009688 <__sinit+0x2c>)
 8009676:	681b      	ldr	r3, [r3, #0]
 8009678:	2b00      	cmp	r3, #0
 800967a:	d1f5      	bne.n	8009668 <__sinit+0xc>
 800967c:	f7ff ffc4 	bl	8009608 <global_stdio_init.part.0>
 8009680:	e7f2      	b.n	8009668 <__sinit+0xc>
 8009682:	bf00      	nop
 8009684:	080095c9 	.word	0x080095c9
 8009688:	20005d90 	.word	0x20005d90

0800968c <_fwalk_sglue>:
 800968c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009690:	4607      	mov	r7, r0
 8009692:	4688      	mov	r8, r1
 8009694:	4614      	mov	r4, r2
 8009696:	2600      	movs	r6, #0
 8009698:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800969c:	f1b9 0901 	subs.w	r9, r9, #1
 80096a0:	d505      	bpl.n	80096ae <_fwalk_sglue+0x22>
 80096a2:	6824      	ldr	r4, [r4, #0]
 80096a4:	2c00      	cmp	r4, #0
 80096a6:	d1f7      	bne.n	8009698 <_fwalk_sglue+0xc>
 80096a8:	4630      	mov	r0, r6
 80096aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80096ae:	89ab      	ldrh	r3, [r5, #12]
 80096b0:	2b01      	cmp	r3, #1
 80096b2:	d907      	bls.n	80096c4 <_fwalk_sglue+0x38>
 80096b4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80096b8:	3301      	adds	r3, #1
 80096ba:	d003      	beq.n	80096c4 <_fwalk_sglue+0x38>
 80096bc:	4629      	mov	r1, r5
 80096be:	4638      	mov	r0, r7
 80096c0:	47c0      	blx	r8
 80096c2:	4306      	orrs	r6, r0
 80096c4:	3568      	adds	r5, #104	; 0x68
 80096c6:	e7e9      	b.n	800969c <_fwalk_sglue+0x10>

080096c8 <iprintf>:
 80096c8:	b40f      	push	{r0, r1, r2, r3}
 80096ca:	b507      	push	{r0, r1, r2, lr}
 80096cc:	4906      	ldr	r1, [pc, #24]	; (80096e8 <iprintf+0x20>)
 80096ce:	ab04      	add	r3, sp, #16
 80096d0:	6808      	ldr	r0, [r1, #0]
 80096d2:	f853 2b04 	ldr.w	r2, [r3], #4
 80096d6:	6881      	ldr	r1, [r0, #8]
 80096d8:	9301      	str	r3, [sp, #4]
 80096da:	f000 fd47 	bl	800a16c <_vfiprintf_r>
 80096de:	b003      	add	sp, #12
 80096e0:	f85d eb04 	ldr.w	lr, [sp], #4
 80096e4:	b004      	add	sp, #16
 80096e6:	4770      	bx	lr
 80096e8:	20000068 	.word	0x20000068

080096ec <_puts_r>:
 80096ec:	6a03      	ldr	r3, [r0, #32]
 80096ee:	b570      	push	{r4, r5, r6, lr}
 80096f0:	6884      	ldr	r4, [r0, #8]
 80096f2:	4605      	mov	r5, r0
 80096f4:	460e      	mov	r6, r1
 80096f6:	b90b      	cbnz	r3, 80096fc <_puts_r+0x10>
 80096f8:	f7ff ffb0 	bl	800965c <__sinit>
 80096fc:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80096fe:	07db      	lsls	r3, r3, #31
 8009700:	d405      	bmi.n	800970e <_puts_r+0x22>
 8009702:	89a3      	ldrh	r3, [r4, #12]
 8009704:	0598      	lsls	r0, r3, #22
 8009706:	d402      	bmi.n	800970e <_puts_r+0x22>
 8009708:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800970a:	f000 fa7e 	bl	8009c0a <__retarget_lock_acquire_recursive>
 800970e:	89a3      	ldrh	r3, [r4, #12]
 8009710:	0719      	lsls	r1, r3, #28
 8009712:	d513      	bpl.n	800973c <_puts_r+0x50>
 8009714:	6923      	ldr	r3, [r4, #16]
 8009716:	b18b      	cbz	r3, 800973c <_puts_r+0x50>
 8009718:	3e01      	subs	r6, #1
 800971a:	68a3      	ldr	r3, [r4, #8]
 800971c:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8009720:	3b01      	subs	r3, #1
 8009722:	60a3      	str	r3, [r4, #8]
 8009724:	b9e9      	cbnz	r1, 8009762 <_puts_r+0x76>
 8009726:	2b00      	cmp	r3, #0
 8009728:	da2e      	bge.n	8009788 <_puts_r+0x9c>
 800972a:	4622      	mov	r2, r4
 800972c:	210a      	movs	r1, #10
 800972e:	4628      	mov	r0, r5
 8009730:	f000 f89b 	bl	800986a <__swbuf_r>
 8009734:	3001      	adds	r0, #1
 8009736:	d007      	beq.n	8009748 <_puts_r+0x5c>
 8009738:	250a      	movs	r5, #10
 800973a:	e007      	b.n	800974c <_puts_r+0x60>
 800973c:	4621      	mov	r1, r4
 800973e:	4628      	mov	r0, r5
 8009740:	f000 f8d0 	bl	80098e4 <__swsetup_r>
 8009744:	2800      	cmp	r0, #0
 8009746:	d0e7      	beq.n	8009718 <_puts_r+0x2c>
 8009748:	f04f 35ff 	mov.w	r5, #4294967295
 800974c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800974e:	07da      	lsls	r2, r3, #31
 8009750:	d405      	bmi.n	800975e <_puts_r+0x72>
 8009752:	89a3      	ldrh	r3, [r4, #12]
 8009754:	059b      	lsls	r3, r3, #22
 8009756:	d402      	bmi.n	800975e <_puts_r+0x72>
 8009758:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800975a:	f000 fa57 	bl	8009c0c <__retarget_lock_release_recursive>
 800975e:	4628      	mov	r0, r5
 8009760:	bd70      	pop	{r4, r5, r6, pc}
 8009762:	2b00      	cmp	r3, #0
 8009764:	da04      	bge.n	8009770 <_puts_r+0x84>
 8009766:	69a2      	ldr	r2, [r4, #24]
 8009768:	429a      	cmp	r2, r3
 800976a:	dc06      	bgt.n	800977a <_puts_r+0x8e>
 800976c:	290a      	cmp	r1, #10
 800976e:	d004      	beq.n	800977a <_puts_r+0x8e>
 8009770:	6823      	ldr	r3, [r4, #0]
 8009772:	1c5a      	adds	r2, r3, #1
 8009774:	6022      	str	r2, [r4, #0]
 8009776:	7019      	strb	r1, [r3, #0]
 8009778:	e7cf      	b.n	800971a <_puts_r+0x2e>
 800977a:	4622      	mov	r2, r4
 800977c:	4628      	mov	r0, r5
 800977e:	f000 f874 	bl	800986a <__swbuf_r>
 8009782:	3001      	adds	r0, #1
 8009784:	d1c9      	bne.n	800971a <_puts_r+0x2e>
 8009786:	e7df      	b.n	8009748 <_puts_r+0x5c>
 8009788:	6823      	ldr	r3, [r4, #0]
 800978a:	250a      	movs	r5, #10
 800978c:	1c5a      	adds	r2, r3, #1
 800978e:	6022      	str	r2, [r4, #0]
 8009790:	701d      	strb	r5, [r3, #0]
 8009792:	e7db      	b.n	800974c <_puts_r+0x60>

08009794 <puts>:
 8009794:	4b02      	ldr	r3, [pc, #8]	; (80097a0 <puts+0xc>)
 8009796:	4601      	mov	r1, r0
 8009798:	6818      	ldr	r0, [r3, #0]
 800979a:	f7ff bfa7 	b.w	80096ec <_puts_r>
 800979e:	bf00      	nop
 80097a0:	20000068 	.word	0x20000068

080097a4 <siprintf>:
 80097a4:	b40e      	push	{r1, r2, r3}
 80097a6:	b500      	push	{lr}
 80097a8:	b09c      	sub	sp, #112	; 0x70
 80097aa:	ab1d      	add	r3, sp, #116	; 0x74
 80097ac:	9002      	str	r0, [sp, #8]
 80097ae:	9006      	str	r0, [sp, #24]
 80097b0:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80097b4:	4809      	ldr	r0, [pc, #36]	; (80097dc <siprintf+0x38>)
 80097b6:	9107      	str	r1, [sp, #28]
 80097b8:	9104      	str	r1, [sp, #16]
 80097ba:	4909      	ldr	r1, [pc, #36]	; (80097e0 <siprintf+0x3c>)
 80097bc:	f853 2b04 	ldr.w	r2, [r3], #4
 80097c0:	9105      	str	r1, [sp, #20]
 80097c2:	6800      	ldr	r0, [r0, #0]
 80097c4:	9301      	str	r3, [sp, #4]
 80097c6:	a902      	add	r1, sp, #8
 80097c8:	f000 fba8 	bl	8009f1c <_svfiprintf_r>
 80097cc:	9b02      	ldr	r3, [sp, #8]
 80097ce:	2200      	movs	r2, #0
 80097d0:	701a      	strb	r2, [r3, #0]
 80097d2:	b01c      	add	sp, #112	; 0x70
 80097d4:	f85d eb04 	ldr.w	lr, [sp], #4
 80097d8:	b003      	add	sp, #12
 80097da:	4770      	bx	lr
 80097dc:	20000068 	.word	0x20000068
 80097e0:	ffff0208 	.word	0xffff0208

080097e4 <__sread>:
 80097e4:	b510      	push	{r4, lr}
 80097e6:	460c      	mov	r4, r1
 80097e8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80097ec:	f000 f9be 	bl	8009b6c <_read_r>
 80097f0:	2800      	cmp	r0, #0
 80097f2:	bfab      	itete	ge
 80097f4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80097f6:	89a3      	ldrhlt	r3, [r4, #12]
 80097f8:	181b      	addge	r3, r3, r0
 80097fa:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80097fe:	bfac      	ite	ge
 8009800:	6563      	strge	r3, [r4, #84]	; 0x54
 8009802:	81a3      	strhlt	r3, [r4, #12]
 8009804:	bd10      	pop	{r4, pc}

08009806 <__swrite>:
 8009806:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800980a:	461f      	mov	r7, r3
 800980c:	898b      	ldrh	r3, [r1, #12]
 800980e:	05db      	lsls	r3, r3, #23
 8009810:	4605      	mov	r5, r0
 8009812:	460c      	mov	r4, r1
 8009814:	4616      	mov	r6, r2
 8009816:	d505      	bpl.n	8009824 <__swrite+0x1e>
 8009818:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800981c:	2302      	movs	r3, #2
 800981e:	2200      	movs	r2, #0
 8009820:	f000 f992 	bl	8009b48 <_lseek_r>
 8009824:	89a3      	ldrh	r3, [r4, #12]
 8009826:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800982a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800982e:	81a3      	strh	r3, [r4, #12]
 8009830:	4632      	mov	r2, r6
 8009832:	463b      	mov	r3, r7
 8009834:	4628      	mov	r0, r5
 8009836:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800983a:	f000 b9a9 	b.w	8009b90 <_write_r>

0800983e <__sseek>:
 800983e:	b510      	push	{r4, lr}
 8009840:	460c      	mov	r4, r1
 8009842:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8009846:	f000 f97f 	bl	8009b48 <_lseek_r>
 800984a:	1c43      	adds	r3, r0, #1
 800984c:	89a3      	ldrh	r3, [r4, #12]
 800984e:	bf15      	itete	ne
 8009850:	6560      	strne	r0, [r4, #84]	; 0x54
 8009852:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8009856:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800985a:	81a3      	strheq	r3, [r4, #12]
 800985c:	bf18      	it	ne
 800985e:	81a3      	strhne	r3, [r4, #12]
 8009860:	bd10      	pop	{r4, pc}

08009862 <__sclose>:
 8009862:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8009866:	f000 b909 	b.w	8009a7c <_close_r>

0800986a <__swbuf_r>:
 800986a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800986c:	460e      	mov	r6, r1
 800986e:	4614      	mov	r4, r2
 8009870:	4605      	mov	r5, r0
 8009872:	b118      	cbz	r0, 800987c <__swbuf_r+0x12>
 8009874:	6a03      	ldr	r3, [r0, #32]
 8009876:	b90b      	cbnz	r3, 800987c <__swbuf_r+0x12>
 8009878:	f7ff fef0 	bl	800965c <__sinit>
 800987c:	69a3      	ldr	r3, [r4, #24]
 800987e:	60a3      	str	r3, [r4, #8]
 8009880:	89a3      	ldrh	r3, [r4, #12]
 8009882:	071a      	lsls	r2, r3, #28
 8009884:	d525      	bpl.n	80098d2 <__swbuf_r+0x68>
 8009886:	6923      	ldr	r3, [r4, #16]
 8009888:	b31b      	cbz	r3, 80098d2 <__swbuf_r+0x68>
 800988a:	6823      	ldr	r3, [r4, #0]
 800988c:	6922      	ldr	r2, [r4, #16]
 800988e:	1a98      	subs	r0, r3, r2
 8009890:	6963      	ldr	r3, [r4, #20]
 8009892:	b2f6      	uxtb	r6, r6
 8009894:	4283      	cmp	r3, r0
 8009896:	4637      	mov	r7, r6
 8009898:	dc04      	bgt.n	80098a4 <__swbuf_r+0x3a>
 800989a:	4621      	mov	r1, r4
 800989c:	4628      	mov	r0, r5
 800989e:	f000 ff95 	bl	800a7cc <_fflush_r>
 80098a2:	b9e0      	cbnz	r0, 80098de <__swbuf_r+0x74>
 80098a4:	68a3      	ldr	r3, [r4, #8]
 80098a6:	3b01      	subs	r3, #1
 80098a8:	60a3      	str	r3, [r4, #8]
 80098aa:	6823      	ldr	r3, [r4, #0]
 80098ac:	1c5a      	adds	r2, r3, #1
 80098ae:	6022      	str	r2, [r4, #0]
 80098b0:	701e      	strb	r6, [r3, #0]
 80098b2:	6962      	ldr	r2, [r4, #20]
 80098b4:	1c43      	adds	r3, r0, #1
 80098b6:	429a      	cmp	r2, r3
 80098b8:	d004      	beq.n	80098c4 <__swbuf_r+0x5a>
 80098ba:	89a3      	ldrh	r3, [r4, #12]
 80098bc:	07db      	lsls	r3, r3, #31
 80098be:	d506      	bpl.n	80098ce <__swbuf_r+0x64>
 80098c0:	2e0a      	cmp	r6, #10
 80098c2:	d104      	bne.n	80098ce <__swbuf_r+0x64>
 80098c4:	4621      	mov	r1, r4
 80098c6:	4628      	mov	r0, r5
 80098c8:	f000 ff80 	bl	800a7cc <_fflush_r>
 80098cc:	b938      	cbnz	r0, 80098de <__swbuf_r+0x74>
 80098ce:	4638      	mov	r0, r7
 80098d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80098d2:	4621      	mov	r1, r4
 80098d4:	4628      	mov	r0, r5
 80098d6:	f000 f805 	bl	80098e4 <__swsetup_r>
 80098da:	2800      	cmp	r0, #0
 80098dc:	d0d5      	beq.n	800988a <__swbuf_r+0x20>
 80098de:	f04f 37ff 	mov.w	r7, #4294967295
 80098e2:	e7f4      	b.n	80098ce <__swbuf_r+0x64>

080098e4 <__swsetup_r>:
 80098e4:	b538      	push	{r3, r4, r5, lr}
 80098e6:	4b2a      	ldr	r3, [pc, #168]	; (8009990 <__swsetup_r+0xac>)
 80098e8:	4605      	mov	r5, r0
 80098ea:	6818      	ldr	r0, [r3, #0]
 80098ec:	460c      	mov	r4, r1
 80098ee:	b118      	cbz	r0, 80098f8 <__swsetup_r+0x14>
 80098f0:	6a03      	ldr	r3, [r0, #32]
 80098f2:	b90b      	cbnz	r3, 80098f8 <__swsetup_r+0x14>
 80098f4:	f7ff feb2 	bl	800965c <__sinit>
 80098f8:	89a3      	ldrh	r3, [r4, #12]
 80098fa:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80098fe:	0718      	lsls	r0, r3, #28
 8009900:	d422      	bmi.n	8009948 <__swsetup_r+0x64>
 8009902:	06d9      	lsls	r1, r3, #27
 8009904:	d407      	bmi.n	8009916 <__swsetup_r+0x32>
 8009906:	2309      	movs	r3, #9
 8009908:	602b      	str	r3, [r5, #0]
 800990a:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800990e:	81a3      	strh	r3, [r4, #12]
 8009910:	f04f 30ff 	mov.w	r0, #4294967295
 8009914:	e034      	b.n	8009980 <__swsetup_r+0x9c>
 8009916:	0758      	lsls	r0, r3, #29
 8009918:	d512      	bpl.n	8009940 <__swsetup_r+0x5c>
 800991a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800991c:	b141      	cbz	r1, 8009930 <__swsetup_r+0x4c>
 800991e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8009922:	4299      	cmp	r1, r3
 8009924:	d002      	beq.n	800992c <__swsetup_r+0x48>
 8009926:	4628      	mov	r0, r5
 8009928:	f000 f99e 	bl	8009c68 <_free_r>
 800992c:	2300      	movs	r3, #0
 800992e:	6363      	str	r3, [r4, #52]	; 0x34
 8009930:	89a3      	ldrh	r3, [r4, #12]
 8009932:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8009936:	81a3      	strh	r3, [r4, #12]
 8009938:	2300      	movs	r3, #0
 800993a:	6063      	str	r3, [r4, #4]
 800993c:	6923      	ldr	r3, [r4, #16]
 800993e:	6023      	str	r3, [r4, #0]
 8009940:	89a3      	ldrh	r3, [r4, #12]
 8009942:	f043 0308 	orr.w	r3, r3, #8
 8009946:	81a3      	strh	r3, [r4, #12]
 8009948:	6923      	ldr	r3, [r4, #16]
 800994a:	b94b      	cbnz	r3, 8009960 <__swsetup_r+0x7c>
 800994c:	89a3      	ldrh	r3, [r4, #12]
 800994e:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8009952:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8009956:	d003      	beq.n	8009960 <__swsetup_r+0x7c>
 8009958:	4621      	mov	r1, r4
 800995a:	4628      	mov	r0, r5
 800995c:	f000 ff96 	bl	800a88c <__smakebuf_r>
 8009960:	89a0      	ldrh	r0, [r4, #12]
 8009962:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8009966:	f010 0301 	ands.w	r3, r0, #1
 800996a:	d00a      	beq.n	8009982 <__swsetup_r+0x9e>
 800996c:	2300      	movs	r3, #0
 800996e:	60a3      	str	r3, [r4, #8]
 8009970:	6963      	ldr	r3, [r4, #20]
 8009972:	425b      	negs	r3, r3
 8009974:	61a3      	str	r3, [r4, #24]
 8009976:	6923      	ldr	r3, [r4, #16]
 8009978:	b943      	cbnz	r3, 800998c <__swsetup_r+0xa8>
 800997a:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800997e:	d1c4      	bne.n	800990a <__swsetup_r+0x26>
 8009980:	bd38      	pop	{r3, r4, r5, pc}
 8009982:	0781      	lsls	r1, r0, #30
 8009984:	bf58      	it	pl
 8009986:	6963      	ldrpl	r3, [r4, #20]
 8009988:	60a3      	str	r3, [r4, #8]
 800998a:	e7f4      	b.n	8009976 <__swsetup_r+0x92>
 800998c:	2000      	movs	r0, #0
 800998e:	e7f7      	b.n	8009980 <__swsetup_r+0x9c>
 8009990:	20000068 	.word	0x20000068

08009994 <memcmp>:
 8009994:	b510      	push	{r4, lr}
 8009996:	3901      	subs	r1, #1
 8009998:	4402      	add	r2, r0
 800999a:	4290      	cmp	r0, r2
 800999c:	d101      	bne.n	80099a2 <memcmp+0xe>
 800999e:	2000      	movs	r0, #0
 80099a0:	e005      	b.n	80099ae <memcmp+0x1a>
 80099a2:	7803      	ldrb	r3, [r0, #0]
 80099a4:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 80099a8:	42a3      	cmp	r3, r4
 80099aa:	d001      	beq.n	80099b0 <memcmp+0x1c>
 80099ac:	1b18      	subs	r0, r3, r4
 80099ae:	bd10      	pop	{r4, pc}
 80099b0:	3001      	adds	r0, #1
 80099b2:	e7f2      	b.n	800999a <memcmp+0x6>

080099b4 <memset>:
 80099b4:	4402      	add	r2, r0
 80099b6:	4603      	mov	r3, r0
 80099b8:	4293      	cmp	r3, r2
 80099ba:	d100      	bne.n	80099be <memset+0xa>
 80099bc:	4770      	bx	lr
 80099be:	f803 1b01 	strb.w	r1, [r3], #1
 80099c2:	e7f9      	b.n	80099b8 <memset+0x4>

080099c4 <strtok>:
 80099c4:	4b16      	ldr	r3, [pc, #88]	; (8009a20 <strtok+0x5c>)
 80099c6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80099c8:	681e      	ldr	r6, [r3, #0]
 80099ca:	6c74      	ldr	r4, [r6, #68]	; 0x44
 80099cc:	4605      	mov	r5, r0
 80099ce:	b9fc      	cbnz	r4, 8009a10 <strtok+0x4c>
 80099d0:	2050      	movs	r0, #80	; 0x50
 80099d2:	9101      	str	r1, [sp, #4]
 80099d4:	f000 f994 	bl	8009d00 <malloc>
 80099d8:	9901      	ldr	r1, [sp, #4]
 80099da:	6470      	str	r0, [r6, #68]	; 0x44
 80099dc:	4602      	mov	r2, r0
 80099de:	b920      	cbnz	r0, 80099ea <strtok+0x26>
 80099e0:	4b10      	ldr	r3, [pc, #64]	; (8009a24 <strtok+0x60>)
 80099e2:	4811      	ldr	r0, [pc, #68]	; (8009a28 <strtok+0x64>)
 80099e4:	215b      	movs	r1, #91	; 0x5b
 80099e6:	f000 f921 	bl	8009c2c <__assert_func>
 80099ea:	e9c0 4400 	strd	r4, r4, [r0]
 80099ee:	e9c0 4402 	strd	r4, r4, [r0, #8]
 80099f2:	e9c0 4404 	strd	r4, r4, [r0, #16]
 80099f6:	e9c0 440a 	strd	r4, r4, [r0, #40]	; 0x28
 80099fa:	e9c0 440c 	strd	r4, r4, [r0, #48]	; 0x30
 80099fe:	e9c0 440e 	strd	r4, r4, [r0, #56]	; 0x38
 8009a02:	e9c0 4410 	strd	r4, r4, [r0, #64]	; 0x40
 8009a06:	e9c0 4412 	strd	r4, r4, [r0, #72]	; 0x48
 8009a0a:	6184      	str	r4, [r0, #24]
 8009a0c:	7704      	strb	r4, [r0, #28]
 8009a0e:	6244      	str	r4, [r0, #36]	; 0x24
 8009a10:	6c72      	ldr	r2, [r6, #68]	; 0x44
 8009a12:	2301      	movs	r3, #1
 8009a14:	4628      	mov	r0, r5
 8009a16:	b002      	add	sp, #8
 8009a18:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009a1c:	f000 b806 	b.w	8009a2c <__strtok_r>
 8009a20:	20000068 	.word	0x20000068
 8009a24:	0800ae99 	.word	0x0800ae99
 8009a28:	0800aeb0 	.word	0x0800aeb0

08009a2c <__strtok_r>:
 8009a2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009a2e:	b908      	cbnz	r0, 8009a34 <__strtok_r+0x8>
 8009a30:	6810      	ldr	r0, [r2, #0]
 8009a32:	b188      	cbz	r0, 8009a58 <__strtok_r+0x2c>
 8009a34:	4604      	mov	r4, r0
 8009a36:	4620      	mov	r0, r4
 8009a38:	f814 5b01 	ldrb.w	r5, [r4], #1
 8009a3c:	460f      	mov	r7, r1
 8009a3e:	f817 6b01 	ldrb.w	r6, [r7], #1
 8009a42:	b91e      	cbnz	r6, 8009a4c <__strtok_r+0x20>
 8009a44:	b965      	cbnz	r5, 8009a60 <__strtok_r+0x34>
 8009a46:	6015      	str	r5, [r2, #0]
 8009a48:	4628      	mov	r0, r5
 8009a4a:	e005      	b.n	8009a58 <__strtok_r+0x2c>
 8009a4c:	42b5      	cmp	r5, r6
 8009a4e:	d1f6      	bne.n	8009a3e <__strtok_r+0x12>
 8009a50:	2b00      	cmp	r3, #0
 8009a52:	d1f0      	bne.n	8009a36 <__strtok_r+0xa>
 8009a54:	6014      	str	r4, [r2, #0]
 8009a56:	7003      	strb	r3, [r0, #0]
 8009a58:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009a5a:	461c      	mov	r4, r3
 8009a5c:	e00c      	b.n	8009a78 <__strtok_r+0x4c>
 8009a5e:	b915      	cbnz	r5, 8009a66 <__strtok_r+0x3a>
 8009a60:	f814 3b01 	ldrb.w	r3, [r4], #1
 8009a64:	460e      	mov	r6, r1
 8009a66:	f816 5b01 	ldrb.w	r5, [r6], #1
 8009a6a:	42ab      	cmp	r3, r5
 8009a6c:	d1f7      	bne.n	8009a5e <__strtok_r+0x32>
 8009a6e:	2b00      	cmp	r3, #0
 8009a70:	d0f3      	beq.n	8009a5a <__strtok_r+0x2e>
 8009a72:	2300      	movs	r3, #0
 8009a74:	f804 3c01 	strb.w	r3, [r4, #-1]
 8009a78:	6014      	str	r4, [r2, #0]
 8009a7a:	e7ed      	b.n	8009a58 <__strtok_r+0x2c>

08009a7c <_close_r>:
 8009a7c:	b538      	push	{r3, r4, r5, lr}
 8009a7e:	4d06      	ldr	r5, [pc, #24]	; (8009a98 <_close_r+0x1c>)
 8009a80:	2300      	movs	r3, #0
 8009a82:	4604      	mov	r4, r0
 8009a84:	4608      	mov	r0, r1
 8009a86:	602b      	str	r3, [r5, #0]
 8009a88:	f7f7 fe63 	bl	8001752 <_close>
 8009a8c:	1c43      	adds	r3, r0, #1
 8009a8e:	d102      	bne.n	8009a96 <_close_r+0x1a>
 8009a90:	682b      	ldr	r3, [r5, #0]
 8009a92:	b103      	cbz	r3, 8009a96 <_close_r+0x1a>
 8009a94:	6023      	str	r3, [r4, #0]
 8009a96:	bd38      	pop	{r3, r4, r5, pc}
 8009a98:	20005d94 	.word	0x20005d94

08009a9c <_reclaim_reent>:
 8009a9c:	4b29      	ldr	r3, [pc, #164]	; (8009b44 <_reclaim_reent+0xa8>)
 8009a9e:	681b      	ldr	r3, [r3, #0]
 8009aa0:	4283      	cmp	r3, r0
 8009aa2:	b570      	push	{r4, r5, r6, lr}
 8009aa4:	4604      	mov	r4, r0
 8009aa6:	d04b      	beq.n	8009b40 <_reclaim_reent+0xa4>
 8009aa8:	69c3      	ldr	r3, [r0, #28]
 8009aaa:	b143      	cbz	r3, 8009abe <_reclaim_reent+0x22>
 8009aac:	68db      	ldr	r3, [r3, #12]
 8009aae:	2b00      	cmp	r3, #0
 8009ab0:	d144      	bne.n	8009b3c <_reclaim_reent+0xa0>
 8009ab2:	69e3      	ldr	r3, [r4, #28]
 8009ab4:	6819      	ldr	r1, [r3, #0]
 8009ab6:	b111      	cbz	r1, 8009abe <_reclaim_reent+0x22>
 8009ab8:	4620      	mov	r0, r4
 8009aba:	f000 f8d5 	bl	8009c68 <_free_r>
 8009abe:	6961      	ldr	r1, [r4, #20]
 8009ac0:	b111      	cbz	r1, 8009ac8 <_reclaim_reent+0x2c>
 8009ac2:	4620      	mov	r0, r4
 8009ac4:	f000 f8d0 	bl	8009c68 <_free_r>
 8009ac8:	69e1      	ldr	r1, [r4, #28]
 8009aca:	b111      	cbz	r1, 8009ad2 <_reclaim_reent+0x36>
 8009acc:	4620      	mov	r0, r4
 8009ace:	f000 f8cb 	bl	8009c68 <_free_r>
 8009ad2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8009ad4:	b111      	cbz	r1, 8009adc <_reclaim_reent+0x40>
 8009ad6:	4620      	mov	r0, r4
 8009ad8:	f000 f8c6 	bl	8009c68 <_free_r>
 8009adc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8009ade:	b111      	cbz	r1, 8009ae6 <_reclaim_reent+0x4a>
 8009ae0:	4620      	mov	r0, r4
 8009ae2:	f000 f8c1 	bl	8009c68 <_free_r>
 8009ae6:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8009ae8:	b111      	cbz	r1, 8009af0 <_reclaim_reent+0x54>
 8009aea:	4620      	mov	r0, r4
 8009aec:	f000 f8bc 	bl	8009c68 <_free_r>
 8009af0:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8009af2:	b111      	cbz	r1, 8009afa <_reclaim_reent+0x5e>
 8009af4:	4620      	mov	r0, r4
 8009af6:	f000 f8b7 	bl	8009c68 <_free_r>
 8009afa:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8009afc:	b111      	cbz	r1, 8009b04 <_reclaim_reent+0x68>
 8009afe:	4620      	mov	r0, r4
 8009b00:	f000 f8b2 	bl	8009c68 <_free_r>
 8009b04:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8009b06:	b111      	cbz	r1, 8009b0e <_reclaim_reent+0x72>
 8009b08:	4620      	mov	r0, r4
 8009b0a:	f000 f8ad 	bl	8009c68 <_free_r>
 8009b0e:	6a23      	ldr	r3, [r4, #32]
 8009b10:	b1b3      	cbz	r3, 8009b40 <_reclaim_reent+0xa4>
 8009b12:	4620      	mov	r0, r4
 8009b14:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009b18:	4718      	bx	r3
 8009b1a:	5949      	ldr	r1, [r1, r5]
 8009b1c:	b941      	cbnz	r1, 8009b30 <_reclaim_reent+0x94>
 8009b1e:	3504      	adds	r5, #4
 8009b20:	69e3      	ldr	r3, [r4, #28]
 8009b22:	2d80      	cmp	r5, #128	; 0x80
 8009b24:	68d9      	ldr	r1, [r3, #12]
 8009b26:	d1f8      	bne.n	8009b1a <_reclaim_reent+0x7e>
 8009b28:	4620      	mov	r0, r4
 8009b2a:	f000 f89d 	bl	8009c68 <_free_r>
 8009b2e:	e7c0      	b.n	8009ab2 <_reclaim_reent+0x16>
 8009b30:	680e      	ldr	r6, [r1, #0]
 8009b32:	4620      	mov	r0, r4
 8009b34:	f000 f898 	bl	8009c68 <_free_r>
 8009b38:	4631      	mov	r1, r6
 8009b3a:	e7ef      	b.n	8009b1c <_reclaim_reent+0x80>
 8009b3c:	2500      	movs	r5, #0
 8009b3e:	e7ef      	b.n	8009b20 <_reclaim_reent+0x84>
 8009b40:	bd70      	pop	{r4, r5, r6, pc}
 8009b42:	bf00      	nop
 8009b44:	20000068 	.word	0x20000068

08009b48 <_lseek_r>:
 8009b48:	b538      	push	{r3, r4, r5, lr}
 8009b4a:	4d07      	ldr	r5, [pc, #28]	; (8009b68 <_lseek_r+0x20>)
 8009b4c:	4604      	mov	r4, r0
 8009b4e:	4608      	mov	r0, r1
 8009b50:	4611      	mov	r1, r2
 8009b52:	2200      	movs	r2, #0
 8009b54:	602a      	str	r2, [r5, #0]
 8009b56:	461a      	mov	r2, r3
 8009b58:	f7f7 fe22 	bl	80017a0 <_lseek>
 8009b5c:	1c43      	adds	r3, r0, #1
 8009b5e:	d102      	bne.n	8009b66 <_lseek_r+0x1e>
 8009b60:	682b      	ldr	r3, [r5, #0]
 8009b62:	b103      	cbz	r3, 8009b66 <_lseek_r+0x1e>
 8009b64:	6023      	str	r3, [r4, #0]
 8009b66:	bd38      	pop	{r3, r4, r5, pc}
 8009b68:	20005d94 	.word	0x20005d94

08009b6c <_read_r>:
 8009b6c:	b538      	push	{r3, r4, r5, lr}
 8009b6e:	4d07      	ldr	r5, [pc, #28]	; (8009b8c <_read_r+0x20>)
 8009b70:	4604      	mov	r4, r0
 8009b72:	4608      	mov	r0, r1
 8009b74:	4611      	mov	r1, r2
 8009b76:	2200      	movs	r2, #0
 8009b78:	602a      	str	r2, [r5, #0]
 8009b7a:	461a      	mov	r2, r3
 8009b7c:	f7f7 fdcc 	bl	8001718 <_read>
 8009b80:	1c43      	adds	r3, r0, #1
 8009b82:	d102      	bne.n	8009b8a <_read_r+0x1e>
 8009b84:	682b      	ldr	r3, [r5, #0]
 8009b86:	b103      	cbz	r3, 8009b8a <_read_r+0x1e>
 8009b88:	6023      	str	r3, [r4, #0]
 8009b8a:	bd38      	pop	{r3, r4, r5, pc}
 8009b8c:	20005d94 	.word	0x20005d94

08009b90 <_write_r>:
 8009b90:	b538      	push	{r3, r4, r5, lr}
 8009b92:	4d07      	ldr	r5, [pc, #28]	; (8009bb0 <_write_r+0x20>)
 8009b94:	4604      	mov	r4, r0
 8009b96:	4608      	mov	r0, r1
 8009b98:	4611      	mov	r1, r2
 8009b9a:	2200      	movs	r2, #0
 8009b9c:	602a      	str	r2, [r5, #0]
 8009b9e:	461a      	mov	r2, r3
 8009ba0:	f7f8 f920 	bl	8001de4 <_write>
 8009ba4:	1c43      	adds	r3, r0, #1
 8009ba6:	d102      	bne.n	8009bae <_write_r+0x1e>
 8009ba8:	682b      	ldr	r3, [r5, #0]
 8009baa:	b103      	cbz	r3, 8009bae <_write_r+0x1e>
 8009bac:	6023      	str	r3, [r4, #0]
 8009bae:	bd38      	pop	{r3, r4, r5, pc}
 8009bb0:	20005d94 	.word	0x20005d94

08009bb4 <__errno>:
 8009bb4:	4b01      	ldr	r3, [pc, #4]	; (8009bbc <__errno+0x8>)
 8009bb6:	6818      	ldr	r0, [r3, #0]
 8009bb8:	4770      	bx	lr
 8009bba:	bf00      	nop
 8009bbc:	20000068 	.word	0x20000068

08009bc0 <__libc_init_array>:
 8009bc0:	b570      	push	{r4, r5, r6, lr}
 8009bc2:	4d0d      	ldr	r5, [pc, #52]	; (8009bf8 <__libc_init_array+0x38>)
 8009bc4:	4c0d      	ldr	r4, [pc, #52]	; (8009bfc <__libc_init_array+0x3c>)
 8009bc6:	1b64      	subs	r4, r4, r5
 8009bc8:	10a4      	asrs	r4, r4, #2
 8009bca:	2600      	movs	r6, #0
 8009bcc:	42a6      	cmp	r6, r4
 8009bce:	d109      	bne.n	8009be4 <__libc_init_array+0x24>
 8009bd0:	4d0b      	ldr	r5, [pc, #44]	; (8009c00 <__libc_init_array+0x40>)
 8009bd2:	4c0c      	ldr	r4, [pc, #48]	; (8009c04 <__libc_init_array+0x44>)
 8009bd4:	f000 ff64 	bl	800aaa0 <_init>
 8009bd8:	1b64      	subs	r4, r4, r5
 8009bda:	10a4      	asrs	r4, r4, #2
 8009bdc:	2600      	movs	r6, #0
 8009bde:	42a6      	cmp	r6, r4
 8009be0:	d105      	bne.n	8009bee <__libc_init_array+0x2e>
 8009be2:	bd70      	pop	{r4, r5, r6, pc}
 8009be4:	f855 3b04 	ldr.w	r3, [r5], #4
 8009be8:	4798      	blx	r3
 8009bea:	3601      	adds	r6, #1
 8009bec:	e7ee      	b.n	8009bcc <__libc_init_array+0xc>
 8009bee:	f855 3b04 	ldr.w	r3, [r5], #4
 8009bf2:	4798      	blx	r3
 8009bf4:	3601      	adds	r6, #1
 8009bf6:	e7f2      	b.n	8009bde <__libc_init_array+0x1e>
 8009bf8:	0800af84 	.word	0x0800af84
 8009bfc:	0800af84 	.word	0x0800af84
 8009c00:	0800af84 	.word	0x0800af84
 8009c04:	0800af88 	.word	0x0800af88

08009c08 <__retarget_lock_init_recursive>:
 8009c08:	4770      	bx	lr

08009c0a <__retarget_lock_acquire_recursive>:
 8009c0a:	4770      	bx	lr

08009c0c <__retarget_lock_release_recursive>:
 8009c0c:	4770      	bx	lr

08009c0e <memcpy>:
 8009c0e:	440a      	add	r2, r1
 8009c10:	4291      	cmp	r1, r2
 8009c12:	f100 33ff 	add.w	r3, r0, #4294967295
 8009c16:	d100      	bne.n	8009c1a <memcpy+0xc>
 8009c18:	4770      	bx	lr
 8009c1a:	b510      	push	{r4, lr}
 8009c1c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8009c20:	f803 4f01 	strb.w	r4, [r3, #1]!
 8009c24:	4291      	cmp	r1, r2
 8009c26:	d1f9      	bne.n	8009c1c <memcpy+0xe>
 8009c28:	bd10      	pop	{r4, pc}
	...

08009c2c <__assert_func>:
 8009c2c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8009c2e:	4614      	mov	r4, r2
 8009c30:	461a      	mov	r2, r3
 8009c32:	4b09      	ldr	r3, [pc, #36]	; (8009c58 <__assert_func+0x2c>)
 8009c34:	681b      	ldr	r3, [r3, #0]
 8009c36:	4605      	mov	r5, r0
 8009c38:	68d8      	ldr	r0, [r3, #12]
 8009c3a:	b14c      	cbz	r4, 8009c50 <__assert_func+0x24>
 8009c3c:	4b07      	ldr	r3, [pc, #28]	; (8009c5c <__assert_func+0x30>)
 8009c3e:	9100      	str	r1, [sp, #0]
 8009c40:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8009c44:	4906      	ldr	r1, [pc, #24]	; (8009c60 <__assert_func+0x34>)
 8009c46:	462b      	mov	r3, r5
 8009c48:	f000 fde8 	bl	800a81c <fiprintf>
 8009c4c:	f000 fea6 	bl	800a99c <abort>
 8009c50:	4b04      	ldr	r3, [pc, #16]	; (8009c64 <__assert_func+0x38>)
 8009c52:	461c      	mov	r4, r3
 8009c54:	e7f3      	b.n	8009c3e <__assert_func+0x12>
 8009c56:	bf00      	nop
 8009c58:	20000068 	.word	0x20000068
 8009c5c:	0800af0a 	.word	0x0800af0a
 8009c60:	0800af17 	.word	0x0800af17
 8009c64:	0800af45 	.word	0x0800af45

08009c68 <_free_r>:
 8009c68:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009c6a:	2900      	cmp	r1, #0
 8009c6c:	d044      	beq.n	8009cf8 <_free_r+0x90>
 8009c6e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8009c72:	9001      	str	r0, [sp, #4]
 8009c74:	2b00      	cmp	r3, #0
 8009c76:	f1a1 0404 	sub.w	r4, r1, #4
 8009c7a:	bfb8      	it	lt
 8009c7c:	18e4      	addlt	r4, r4, r3
 8009c7e:	f000 f8e7 	bl	8009e50 <__malloc_lock>
 8009c82:	4a1e      	ldr	r2, [pc, #120]	; (8009cfc <_free_r+0x94>)
 8009c84:	9801      	ldr	r0, [sp, #4]
 8009c86:	6813      	ldr	r3, [r2, #0]
 8009c88:	b933      	cbnz	r3, 8009c98 <_free_r+0x30>
 8009c8a:	6063      	str	r3, [r4, #4]
 8009c8c:	6014      	str	r4, [r2, #0]
 8009c8e:	b003      	add	sp, #12
 8009c90:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8009c94:	f000 b8e2 	b.w	8009e5c <__malloc_unlock>
 8009c98:	42a3      	cmp	r3, r4
 8009c9a:	d908      	bls.n	8009cae <_free_r+0x46>
 8009c9c:	6825      	ldr	r5, [r4, #0]
 8009c9e:	1961      	adds	r1, r4, r5
 8009ca0:	428b      	cmp	r3, r1
 8009ca2:	bf01      	itttt	eq
 8009ca4:	6819      	ldreq	r1, [r3, #0]
 8009ca6:	685b      	ldreq	r3, [r3, #4]
 8009ca8:	1949      	addeq	r1, r1, r5
 8009caa:	6021      	streq	r1, [r4, #0]
 8009cac:	e7ed      	b.n	8009c8a <_free_r+0x22>
 8009cae:	461a      	mov	r2, r3
 8009cb0:	685b      	ldr	r3, [r3, #4]
 8009cb2:	b10b      	cbz	r3, 8009cb8 <_free_r+0x50>
 8009cb4:	42a3      	cmp	r3, r4
 8009cb6:	d9fa      	bls.n	8009cae <_free_r+0x46>
 8009cb8:	6811      	ldr	r1, [r2, #0]
 8009cba:	1855      	adds	r5, r2, r1
 8009cbc:	42a5      	cmp	r5, r4
 8009cbe:	d10b      	bne.n	8009cd8 <_free_r+0x70>
 8009cc0:	6824      	ldr	r4, [r4, #0]
 8009cc2:	4421      	add	r1, r4
 8009cc4:	1854      	adds	r4, r2, r1
 8009cc6:	42a3      	cmp	r3, r4
 8009cc8:	6011      	str	r1, [r2, #0]
 8009cca:	d1e0      	bne.n	8009c8e <_free_r+0x26>
 8009ccc:	681c      	ldr	r4, [r3, #0]
 8009cce:	685b      	ldr	r3, [r3, #4]
 8009cd0:	6053      	str	r3, [r2, #4]
 8009cd2:	440c      	add	r4, r1
 8009cd4:	6014      	str	r4, [r2, #0]
 8009cd6:	e7da      	b.n	8009c8e <_free_r+0x26>
 8009cd8:	d902      	bls.n	8009ce0 <_free_r+0x78>
 8009cda:	230c      	movs	r3, #12
 8009cdc:	6003      	str	r3, [r0, #0]
 8009cde:	e7d6      	b.n	8009c8e <_free_r+0x26>
 8009ce0:	6825      	ldr	r5, [r4, #0]
 8009ce2:	1961      	adds	r1, r4, r5
 8009ce4:	428b      	cmp	r3, r1
 8009ce6:	bf04      	itt	eq
 8009ce8:	6819      	ldreq	r1, [r3, #0]
 8009cea:	685b      	ldreq	r3, [r3, #4]
 8009cec:	6063      	str	r3, [r4, #4]
 8009cee:	bf04      	itt	eq
 8009cf0:	1949      	addeq	r1, r1, r5
 8009cf2:	6021      	streq	r1, [r4, #0]
 8009cf4:	6054      	str	r4, [r2, #4]
 8009cf6:	e7ca      	b.n	8009c8e <_free_r+0x26>
 8009cf8:	b003      	add	sp, #12
 8009cfa:	bd30      	pop	{r4, r5, pc}
 8009cfc:	20005d9c 	.word	0x20005d9c

08009d00 <malloc>:
 8009d00:	4b02      	ldr	r3, [pc, #8]	; (8009d0c <malloc+0xc>)
 8009d02:	4601      	mov	r1, r0
 8009d04:	6818      	ldr	r0, [r3, #0]
 8009d06:	f000 b823 	b.w	8009d50 <_malloc_r>
 8009d0a:	bf00      	nop
 8009d0c:	20000068 	.word	0x20000068

08009d10 <sbrk_aligned>:
 8009d10:	b570      	push	{r4, r5, r6, lr}
 8009d12:	4e0e      	ldr	r6, [pc, #56]	; (8009d4c <sbrk_aligned+0x3c>)
 8009d14:	460c      	mov	r4, r1
 8009d16:	6831      	ldr	r1, [r6, #0]
 8009d18:	4605      	mov	r5, r0
 8009d1a:	b911      	cbnz	r1, 8009d22 <sbrk_aligned+0x12>
 8009d1c:	f000 fe2e 	bl	800a97c <_sbrk_r>
 8009d20:	6030      	str	r0, [r6, #0]
 8009d22:	4621      	mov	r1, r4
 8009d24:	4628      	mov	r0, r5
 8009d26:	f000 fe29 	bl	800a97c <_sbrk_r>
 8009d2a:	1c43      	adds	r3, r0, #1
 8009d2c:	d00a      	beq.n	8009d44 <sbrk_aligned+0x34>
 8009d2e:	1cc4      	adds	r4, r0, #3
 8009d30:	f024 0403 	bic.w	r4, r4, #3
 8009d34:	42a0      	cmp	r0, r4
 8009d36:	d007      	beq.n	8009d48 <sbrk_aligned+0x38>
 8009d38:	1a21      	subs	r1, r4, r0
 8009d3a:	4628      	mov	r0, r5
 8009d3c:	f000 fe1e 	bl	800a97c <_sbrk_r>
 8009d40:	3001      	adds	r0, #1
 8009d42:	d101      	bne.n	8009d48 <sbrk_aligned+0x38>
 8009d44:	f04f 34ff 	mov.w	r4, #4294967295
 8009d48:	4620      	mov	r0, r4
 8009d4a:	bd70      	pop	{r4, r5, r6, pc}
 8009d4c:	20005da0 	.word	0x20005da0

08009d50 <_malloc_r>:
 8009d50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009d54:	1ccd      	adds	r5, r1, #3
 8009d56:	f025 0503 	bic.w	r5, r5, #3
 8009d5a:	3508      	adds	r5, #8
 8009d5c:	2d0c      	cmp	r5, #12
 8009d5e:	bf38      	it	cc
 8009d60:	250c      	movcc	r5, #12
 8009d62:	2d00      	cmp	r5, #0
 8009d64:	4607      	mov	r7, r0
 8009d66:	db01      	blt.n	8009d6c <_malloc_r+0x1c>
 8009d68:	42a9      	cmp	r1, r5
 8009d6a:	d905      	bls.n	8009d78 <_malloc_r+0x28>
 8009d6c:	230c      	movs	r3, #12
 8009d6e:	603b      	str	r3, [r7, #0]
 8009d70:	2600      	movs	r6, #0
 8009d72:	4630      	mov	r0, r6
 8009d74:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009d78:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8009e4c <_malloc_r+0xfc>
 8009d7c:	f000 f868 	bl	8009e50 <__malloc_lock>
 8009d80:	f8d8 3000 	ldr.w	r3, [r8]
 8009d84:	461c      	mov	r4, r3
 8009d86:	bb5c      	cbnz	r4, 8009de0 <_malloc_r+0x90>
 8009d88:	4629      	mov	r1, r5
 8009d8a:	4638      	mov	r0, r7
 8009d8c:	f7ff ffc0 	bl	8009d10 <sbrk_aligned>
 8009d90:	1c43      	adds	r3, r0, #1
 8009d92:	4604      	mov	r4, r0
 8009d94:	d155      	bne.n	8009e42 <_malloc_r+0xf2>
 8009d96:	f8d8 4000 	ldr.w	r4, [r8]
 8009d9a:	4626      	mov	r6, r4
 8009d9c:	2e00      	cmp	r6, #0
 8009d9e:	d145      	bne.n	8009e2c <_malloc_r+0xdc>
 8009da0:	2c00      	cmp	r4, #0
 8009da2:	d048      	beq.n	8009e36 <_malloc_r+0xe6>
 8009da4:	6823      	ldr	r3, [r4, #0]
 8009da6:	4631      	mov	r1, r6
 8009da8:	4638      	mov	r0, r7
 8009daa:	eb04 0903 	add.w	r9, r4, r3
 8009dae:	f000 fde5 	bl	800a97c <_sbrk_r>
 8009db2:	4581      	cmp	r9, r0
 8009db4:	d13f      	bne.n	8009e36 <_malloc_r+0xe6>
 8009db6:	6821      	ldr	r1, [r4, #0]
 8009db8:	1a6d      	subs	r5, r5, r1
 8009dba:	4629      	mov	r1, r5
 8009dbc:	4638      	mov	r0, r7
 8009dbe:	f7ff ffa7 	bl	8009d10 <sbrk_aligned>
 8009dc2:	3001      	adds	r0, #1
 8009dc4:	d037      	beq.n	8009e36 <_malloc_r+0xe6>
 8009dc6:	6823      	ldr	r3, [r4, #0]
 8009dc8:	442b      	add	r3, r5
 8009dca:	6023      	str	r3, [r4, #0]
 8009dcc:	f8d8 3000 	ldr.w	r3, [r8]
 8009dd0:	2b00      	cmp	r3, #0
 8009dd2:	d038      	beq.n	8009e46 <_malloc_r+0xf6>
 8009dd4:	685a      	ldr	r2, [r3, #4]
 8009dd6:	42a2      	cmp	r2, r4
 8009dd8:	d12b      	bne.n	8009e32 <_malloc_r+0xe2>
 8009dda:	2200      	movs	r2, #0
 8009ddc:	605a      	str	r2, [r3, #4]
 8009dde:	e00f      	b.n	8009e00 <_malloc_r+0xb0>
 8009de0:	6822      	ldr	r2, [r4, #0]
 8009de2:	1b52      	subs	r2, r2, r5
 8009de4:	d41f      	bmi.n	8009e26 <_malloc_r+0xd6>
 8009de6:	2a0b      	cmp	r2, #11
 8009de8:	d917      	bls.n	8009e1a <_malloc_r+0xca>
 8009dea:	1961      	adds	r1, r4, r5
 8009dec:	42a3      	cmp	r3, r4
 8009dee:	6025      	str	r5, [r4, #0]
 8009df0:	bf18      	it	ne
 8009df2:	6059      	strne	r1, [r3, #4]
 8009df4:	6863      	ldr	r3, [r4, #4]
 8009df6:	bf08      	it	eq
 8009df8:	f8c8 1000 	streq.w	r1, [r8]
 8009dfc:	5162      	str	r2, [r4, r5]
 8009dfe:	604b      	str	r3, [r1, #4]
 8009e00:	4638      	mov	r0, r7
 8009e02:	f104 060b 	add.w	r6, r4, #11
 8009e06:	f000 f829 	bl	8009e5c <__malloc_unlock>
 8009e0a:	f026 0607 	bic.w	r6, r6, #7
 8009e0e:	1d23      	adds	r3, r4, #4
 8009e10:	1af2      	subs	r2, r6, r3
 8009e12:	d0ae      	beq.n	8009d72 <_malloc_r+0x22>
 8009e14:	1b9b      	subs	r3, r3, r6
 8009e16:	50a3      	str	r3, [r4, r2]
 8009e18:	e7ab      	b.n	8009d72 <_malloc_r+0x22>
 8009e1a:	42a3      	cmp	r3, r4
 8009e1c:	6862      	ldr	r2, [r4, #4]
 8009e1e:	d1dd      	bne.n	8009ddc <_malloc_r+0x8c>
 8009e20:	f8c8 2000 	str.w	r2, [r8]
 8009e24:	e7ec      	b.n	8009e00 <_malloc_r+0xb0>
 8009e26:	4623      	mov	r3, r4
 8009e28:	6864      	ldr	r4, [r4, #4]
 8009e2a:	e7ac      	b.n	8009d86 <_malloc_r+0x36>
 8009e2c:	4634      	mov	r4, r6
 8009e2e:	6876      	ldr	r6, [r6, #4]
 8009e30:	e7b4      	b.n	8009d9c <_malloc_r+0x4c>
 8009e32:	4613      	mov	r3, r2
 8009e34:	e7cc      	b.n	8009dd0 <_malloc_r+0x80>
 8009e36:	230c      	movs	r3, #12
 8009e38:	603b      	str	r3, [r7, #0]
 8009e3a:	4638      	mov	r0, r7
 8009e3c:	f000 f80e 	bl	8009e5c <__malloc_unlock>
 8009e40:	e797      	b.n	8009d72 <_malloc_r+0x22>
 8009e42:	6025      	str	r5, [r4, #0]
 8009e44:	e7dc      	b.n	8009e00 <_malloc_r+0xb0>
 8009e46:	605b      	str	r3, [r3, #4]
 8009e48:	deff      	udf	#255	; 0xff
 8009e4a:	bf00      	nop
 8009e4c:	20005d9c 	.word	0x20005d9c

08009e50 <__malloc_lock>:
 8009e50:	4801      	ldr	r0, [pc, #4]	; (8009e58 <__malloc_lock+0x8>)
 8009e52:	f7ff beda 	b.w	8009c0a <__retarget_lock_acquire_recursive>
 8009e56:	bf00      	nop
 8009e58:	20005d98 	.word	0x20005d98

08009e5c <__malloc_unlock>:
 8009e5c:	4801      	ldr	r0, [pc, #4]	; (8009e64 <__malloc_unlock+0x8>)
 8009e5e:	f7ff bed5 	b.w	8009c0c <__retarget_lock_release_recursive>
 8009e62:	bf00      	nop
 8009e64:	20005d98 	.word	0x20005d98

08009e68 <__ssputs_r>:
 8009e68:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009e6c:	688e      	ldr	r6, [r1, #8]
 8009e6e:	461f      	mov	r7, r3
 8009e70:	42be      	cmp	r6, r7
 8009e72:	680b      	ldr	r3, [r1, #0]
 8009e74:	4682      	mov	sl, r0
 8009e76:	460c      	mov	r4, r1
 8009e78:	4690      	mov	r8, r2
 8009e7a:	d82c      	bhi.n	8009ed6 <__ssputs_r+0x6e>
 8009e7c:	898a      	ldrh	r2, [r1, #12]
 8009e7e:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8009e82:	d026      	beq.n	8009ed2 <__ssputs_r+0x6a>
 8009e84:	6965      	ldr	r5, [r4, #20]
 8009e86:	6909      	ldr	r1, [r1, #16]
 8009e88:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8009e8c:	eba3 0901 	sub.w	r9, r3, r1
 8009e90:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8009e94:	1c7b      	adds	r3, r7, #1
 8009e96:	444b      	add	r3, r9
 8009e98:	106d      	asrs	r5, r5, #1
 8009e9a:	429d      	cmp	r5, r3
 8009e9c:	bf38      	it	cc
 8009e9e:	461d      	movcc	r5, r3
 8009ea0:	0553      	lsls	r3, r2, #21
 8009ea2:	d527      	bpl.n	8009ef4 <__ssputs_r+0x8c>
 8009ea4:	4629      	mov	r1, r5
 8009ea6:	f7ff ff53 	bl	8009d50 <_malloc_r>
 8009eaa:	4606      	mov	r6, r0
 8009eac:	b360      	cbz	r0, 8009f08 <__ssputs_r+0xa0>
 8009eae:	6921      	ldr	r1, [r4, #16]
 8009eb0:	464a      	mov	r2, r9
 8009eb2:	f7ff feac 	bl	8009c0e <memcpy>
 8009eb6:	89a3      	ldrh	r3, [r4, #12]
 8009eb8:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8009ebc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009ec0:	81a3      	strh	r3, [r4, #12]
 8009ec2:	6126      	str	r6, [r4, #16]
 8009ec4:	6165      	str	r5, [r4, #20]
 8009ec6:	444e      	add	r6, r9
 8009ec8:	eba5 0509 	sub.w	r5, r5, r9
 8009ecc:	6026      	str	r6, [r4, #0]
 8009ece:	60a5      	str	r5, [r4, #8]
 8009ed0:	463e      	mov	r6, r7
 8009ed2:	42be      	cmp	r6, r7
 8009ed4:	d900      	bls.n	8009ed8 <__ssputs_r+0x70>
 8009ed6:	463e      	mov	r6, r7
 8009ed8:	6820      	ldr	r0, [r4, #0]
 8009eda:	4632      	mov	r2, r6
 8009edc:	4641      	mov	r1, r8
 8009ede:	f000 fd11 	bl	800a904 <memmove>
 8009ee2:	68a3      	ldr	r3, [r4, #8]
 8009ee4:	1b9b      	subs	r3, r3, r6
 8009ee6:	60a3      	str	r3, [r4, #8]
 8009ee8:	6823      	ldr	r3, [r4, #0]
 8009eea:	4433      	add	r3, r6
 8009eec:	6023      	str	r3, [r4, #0]
 8009eee:	2000      	movs	r0, #0
 8009ef0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009ef4:	462a      	mov	r2, r5
 8009ef6:	f000 fd58 	bl	800a9aa <_realloc_r>
 8009efa:	4606      	mov	r6, r0
 8009efc:	2800      	cmp	r0, #0
 8009efe:	d1e0      	bne.n	8009ec2 <__ssputs_r+0x5a>
 8009f00:	6921      	ldr	r1, [r4, #16]
 8009f02:	4650      	mov	r0, sl
 8009f04:	f7ff feb0 	bl	8009c68 <_free_r>
 8009f08:	230c      	movs	r3, #12
 8009f0a:	f8ca 3000 	str.w	r3, [sl]
 8009f0e:	89a3      	ldrh	r3, [r4, #12]
 8009f10:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8009f14:	81a3      	strh	r3, [r4, #12]
 8009f16:	f04f 30ff 	mov.w	r0, #4294967295
 8009f1a:	e7e9      	b.n	8009ef0 <__ssputs_r+0x88>

08009f1c <_svfiprintf_r>:
 8009f1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009f20:	4698      	mov	r8, r3
 8009f22:	898b      	ldrh	r3, [r1, #12]
 8009f24:	061b      	lsls	r3, r3, #24
 8009f26:	b09d      	sub	sp, #116	; 0x74
 8009f28:	4607      	mov	r7, r0
 8009f2a:	460d      	mov	r5, r1
 8009f2c:	4614      	mov	r4, r2
 8009f2e:	d50e      	bpl.n	8009f4e <_svfiprintf_r+0x32>
 8009f30:	690b      	ldr	r3, [r1, #16]
 8009f32:	b963      	cbnz	r3, 8009f4e <_svfiprintf_r+0x32>
 8009f34:	2140      	movs	r1, #64	; 0x40
 8009f36:	f7ff ff0b 	bl	8009d50 <_malloc_r>
 8009f3a:	6028      	str	r0, [r5, #0]
 8009f3c:	6128      	str	r0, [r5, #16]
 8009f3e:	b920      	cbnz	r0, 8009f4a <_svfiprintf_r+0x2e>
 8009f40:	230c      	movs	r3, #12
 8009f42:	603b      	str	r3, [r7, #0]
 8009f44:	f04f 30ff 	mov.w	r0, #4294967295
 8009f48:	e0d0      	b.n	800a0ec <_svfiprintf_r+0x1d0>
 8009f4a:	2340      	movs	r3, #64	; 0x40
 8009f4c:	616b      	str	r3, [r5, #20]
 8009f4e:	2300      	movs	r3, #0
 8009f50:	9309      	str	r3, [sp, #36]	; 0x24
 8009f52:	2320      	movs	r3, #32
 8009f54:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8009f58:	f8cd 800c 	str.w	r8, [sp, #12]
 8009f5c:	2330      	movs	r3, #48	; 0x30
 8009f5e:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 800a104 <_svfiprintf_r+0x1e8>
 8009f62:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8009f66:	f04f 0901 	mov.w	r9, #1
 8009f6a:	4623      	mov	r3, r4
 8009f6c:	469a      	mov	sl, r3
 8009f6e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8009f72:	b10a      	cbz	r2, 8009f78 <_svfiprintf_r+0x5c>
 8009f74:	2a25      	cmp	r2, #37	; 0x25
 8009f76:	d1f9      	bne.n	8009f6c <_svfiprintf_r+0x50>
 8009f78:	ebba 0b04 	subs.w	fp, sl, r4
 8009f7c:	d00b      	beq.n	8009f96 <_svfiprintf_r+0x7a>
 8009f7e:	465b      	mov	r3, fp
 8009f80:	4622      	mov	r2, r4
 8009f82:	4629      	mov	r1, r5
 8009f84:	4638      	mov	r0, r7
 8009f86:	f7ff ff6f 	bl	8009e68 <__ssputs_r>
 8009f8a:	3001      	adds	r0, #1
 8009f8c:	f000 80a9 	beq.w	800a0e2 <_svfiprintf_r+0x1c6>
 8009f90:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8009f92:	445a      	add	r2, fp
 8009f94:	9209      	str	r2, [sp, #36]	; 0x24
 8009f96:	f89a 3000 	ldrb.w	r3, [sl]
 8009f9a:	2b00      	cmp	r3, #0
 8009f9c:	f000 80a1 	beq.w	800a0e2 <_svfiprintf_r+0x1c6>
 8009fa0:	2300      	movs	r3, #0
 8009fa2:	f04f 32ff 	mov.w	r2, #4294967295
 8009fa6:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8009faa:	f10a 0a01 	add.w	sl, sl, #1
 8009fae:	9304      	str	r3, [sp, #16]
 8009fb0:	9307      	str	r3, [sp, #28]
 8009fb2:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8009fb6:	931a      	str	r3, [sp, #104]	; 0x68
 8009fb8:	4654      	mov	r4, sl
 8009fba:	2205      	movs	r2, #5
 8009fbc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009fc0:	4850      	ldr	r0, [pc, #320]	; (800a104 <_svfiprintf_r+0x1e8>)
 8009fc2:	f7f6 f92d 	bl	8000220 <memchr>
 8009fc6:	9a04      	ldr	r2, [sp, #16]
 8009fc8:	b9d8      	cbnz	r0, 800a002 <_svfiprintf_r+0xe6>
 8009fca:	06d0      	lsls	r0, r2, #27
 8009fcc:	bf44      	itt	mi
 8009fce:	2320      	movmi	r3, #32
 8009fd0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8009fd4:	0711      	lsls	r1, r2, #28
 8009fd6:	bf44      	itt	mi
 8009fd8:	232b      	movmi	r3, #43	; 0x2b
 8009fda:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8009fde:	f89a 3000 	ldrb.w	r3, [sl]
 8009fe2:	2b2a      	cmp	r3, #42	; 0x2a
 8009fe4:	d015      	beq.n	800a012 <_svfiprintf_r+0xf6>
 8009fe6:	9a07      	ldr	r2, [sp, #28]
 8009fe8:	4654      	mov	r4, sl
 8009fea:	2000      	movs	r0, #0
 8009fec:	f04f 0c0a 	mov.w	ip, #10
 8009ff0:	4621      	mov	r1, r4
 8009ff2:	f811 3b01 	ldrb.w	r3, [r1], #1
 8009ff6:	3b30      	subs	r3, #48	; 0x30
 8009ff8:	2b09      	cmp	r3, #9
 8009ffa:	d94d      	bls.n	800a098 <_svfiprintf_r+0x17c>
 8009ffc:	b1b0      	cbz	r0, 800a02c <_svfiprintf_r+0x110>
 8009ffe:	9207      	str	r2, [sp, #28]
 800a000:	e014      	b.n	800a02c <_svfiprintf_r+0x110>
 800a002:	eba0 0308 	sub.w	r3, r0, r8
 800a006:	fa09 f303 	lsl.w	r3, r9, r3
 800a00a:	4313      	orrs	r3, r2
 800a00c:	9304      	str	r3, [sp, #16]
 800a00e:	46a2      	mov	sl, r4
 800a010:	e7d2      	b.n	8009fb8 <_svfiprintf_r+0x9c>
 800a012:	9b03      	ldr	r3, [sp, #12]
 800a014:	1d19      	adds	r1, r3, #4
 800a016:	681b      	ldr	r3, [r3, #0]
 800a018:	9103      	str	r1, [sp, #12]
 800a01a:	2b00      	cmp	r3, #0
 800a01c:	bfbb      	ittet	lt
 800a01e:	425b      	neglt	r3, r3
 800a020:	f042 0202 	orrlt.w	r2, r2, #2
 800a024:	9307      	strge	r3, [sp, #28]
 800a026:	9307      	strlt	r3, [sp, #28]
 800a028:	bfb8      	it	lt
 800a02a:	9204      	strlt	r2, [sp, #16]
 800a02c:	7823      	ldrb	r3, [r4, #0]
 800a02e:	2b2e      	cmp	r3, #46	; 0x2e
 800a030:	d10c      	bne.n	800a04c <_svfiprintf_r+0x130>
 800a032:	7863      	ldrb	r3, [r4, #1]
 800a034:	2b2a      	cmp	r3, #42	; 0x2a
 800a036:	d134      	bne.n	800a0a2 <_svfiprintf_r+0x186>
 800a038:	9b03      	ldr	r3, [sp, #12]
 800a03a:	1d1a      	adds	r2, r3, #4
 800a03c:	681b      	ldr	r3, [r3, #0]
 800a03e:	9203      	str	r2, [sp, #12]
 800a040:	2b00      	cmp	r3, #0
 800a042:	bfb8      	it	lt
 800a044:	f04f 33ff 	movlt.w	r3, #4294967295
 800a048:	3402      	adds	r4, #2
 800a04a:	9305      	str	r3, [sp, #20]
 800a04c:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 800a114 <_svfiprintf_r+0x1f8>
 800a050:	7821      	ldrb	r1, [r4, #0]
 800a052:	2203      	movs	r2, #3
 800a054:	4650      	mov	r0, sl
 800a056:	f7f6 f8e3 	bl	8000220 <memchr>
 800a05a:	b138      	cbz	r0, 800a06c <_svfiprintf_r+0x150>
 800a05c:	9b04      	ldr	r3, [sp, #16]
 800a05e:	eba0 000a 	sub.w	r0, r0, sl
 800a062:	2240      	movs	r2, #64	; 0x40
 800a064:	4082      	lsls	r2, r0
 800a066:	4313      	orrs	r3, r2
 800a068:	3401      	adds	r4, #1
 800a06a:	9304      	str	r3, [sp, #16]
 800a06c:	f814 1b01 	ldrb.w	r1, [r4], #1
 800a070:	4825      	ldr	r0, [pc, #148]	; (800a108 <_svfiprintf_r+0x1ec>)
 800a072:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800a076:	2206      	movs	r2, #6
 800a078:	f7f6 f8d2 	bl	8000220 <memchr>
 800a07c:	2800      	cmp	r0, #0
 800a07e:	d038      	beq.n	800a0f2 <_svfiprintf_r+0x1d6>
 800a080:	4b22      	ldr	r3, [pc, #136]	; (800a10c <_svfiprintf_r+0x1f0>)
 800a082:	bb1b      	cbnz	r3, 800a0cc <_svfiprintf_r+0x1b0>
 800a084:	9b03      	ldr	r3, [sp, #12]
 800a086:	3307      	adds	r3, #7
 800a088:	f023 0307 	bic.w	r3, r3, #7
 800a08c:	3308      	adds	r3, #8
 800a08e:	9303      	str	r3, [sp, #12]
 800a090:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a092:	4433      	add	r3, r6
 800a094:	9309      	str	r3, [sp, #36]	; 0x24
 800a096:	e768      	b.n	8009f6a <_svfiprintf_r+0x4e>
 800a098:	fb0c 3202 	mla	r2, ip, r2, r3
 800a09c:	460c      	mov	r4, r1
 800a09e:	2001      	movs	r0, #1
 800a0a0:	e7a6      	b.n	8009ff0 <_svfiprintf_r+0xd4>
 800a0a2:	2300      	movs	r3, #0
 800a0a4:	3401      	adds	r4, #1
 800a0a6:	9305      	str	r3, [sp, #20]
 800a0a8:	4619      	mov	r1, r3
 800a0aa:	f04f 0c0a 	mov.w	ip, #10
 800a0ae:	4620      	mov	r0, r4
 800a0b0:	f810 2b01 	ldrb.w	r2, [r0], #1
 800a0b4:	3a30      	subs	r2, #48	; 0x30
 800a0b6:	2a09      	cmp	r2, #9
 800a0b8:	d903      	bls.n	800a0c2 <_svfiprintf_r+0x1a6>
 800a0ba:	2b00      	cmp	r3, #0
 800a0bc:	d0c6      	beq.n	800a04c <_svfiprintf_r+0x130>
 800a0be:	9105      	str	r1, [sp, #20]
 800a0c0:	e7c4      	b.n	800a04c <_svfiprintf_r+0x130>
 800a0c2:	fb0c 2101 	mla	r1, ip, r1, r2
 800a0c6:	4604      	mov	r4, r0
 800a0c8:	2301      	movs	r3, #1
 800a0ca:	e7f0      	b.n	800a0ae <_svfiprintf_r+0x192>
 800a0cc:	ab03      	add	r3, sp, #12
 800a0ce:	9300      	str	r3, [sp, #0]
 800a0d0:	462a      	mov	r2, r5
 800a0d2:	4b0f      	ldr	r3, [pc, #60]	; (800a110 <_svfiprintf_r+0x1f4>)
 800a0d4:	a904      	add	r1, sp, #16
 800a0d6:	4638      	mov	r0, r7
 800a0d8:	f3af 8000 	nop.w
 800a0dc:	1c42      	adds	r2, r0, #1
 800a0de:	4606      	mov	r6, r0
 800a0e0:	d1d6      	bne.n	800a090 <_svfiprintf_r+0x174>
 800a0e2:	89ab      	ldrh	r3, [r5, #12]
 800a0e4:	065b      	lsls	r3, r3, #25
 800a0e6:	f53f af2d 	bmi.w	8009f44 <_svfiprintf_r+0x28>
 800a0ea:	9809      	ldr	r0, [sp, #36]	; 0x24
 800a0ec:	b01d      	add	sp, #116	; 0x74
 800a0ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a0f2:	ab03      	add	r3, sp, #12
 800a0f4:	9300      	str	r3, [sp, #0]
 800a0f6:	462a      	mov	r2, r5
 800a0f8:	4b05      	ldr	r3, [pc, #20]	; (800a110 <_svfiprintf_r+0x1f4>)
 800a0fa:	a904      	add	r1, sp, #16
 800a0fc:	4638      	mov	r0, r7
 800a0fe:	f000 f9bd 	bl	800a47c <_printf_i>
 800a102:	e7eb      	b.n	800a0dc <_svfiprintf_r+0x1c0>
 800a104:	0800af46 	.word	0x0800af46
 800a108:	0800af50 	.word	0x0800af50
 800a10c:	00000000 	.word	0x00000000
 800a110:	08009e69 	.word	0x08009e69
 800a114:	0800af4c 	.word	0x0800af4c

0800a118 <__sfputc_r>:
 800a118:	6893      	ldr	r3, [r2, #8]
 800a11a:	3b01      	subs	r3, #1
 800a11c:	2b00      	cmp	r3, #0
 800a11e:	b410      	push	{r4}
 800a120:	6093      	str	r3, [r2, #8]
 800a122:	da08      	bge.n	800a136 <__sfputc_r+0x1e>
 800a124:	6994      	ldr	r4, [r2, #24]
 800a126:	42a3      	cmp	r3, r4
 800a128:	db01      	blt.n	800a12e <__sfputc_r+0x16>
 800a12a:	290a      	cmp	r1, #10
 800a12c:	d103      	bne.n	800a136 <__sfputc_r+0x1e>
 800a12e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a132:	f7ff bb9a 	b.w	800986a <__swbuf_r>
 800a136:	6813      	ldr	r3, [r2, #0]
 800a138:	1c58      	adds	r0, r3, #1
 800a13a:	6010      	str	r0, [r2, #0]
 800a13c:	7019      	strb	r1, [r3, #0]
 800a13e:	4608      	mov	r0, r1
 800a140:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a144:	4770      	bx	lr

0800a146 <__sfputs_r>:
 800a146:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a148:	4606      	mov	r6, r0
 800a14a:	460f      	mov	r7, r1
 800a14c:	4614      	mov	r4, r2
 800a14e:	18d5      	adds	r5, r2, r3
 800a150:	42ac      	cmp	r4, r5
 800a152:	d101      	bne.n	800a158 <__sfputs_r+0x12>
 800a154:	2000      	movs	r0, #0
 800a156:	e007      	b.n	800a168 <__sfputs_r+0x22>
 800a158:	f814 1b01 	ldrb.w	r1, [r4], #1
 800a15c:	463a      	mov	r2, r7
 800a15e:	4630      	mov	r0, r6
 800a160:	f7ff ffda 	bl	800a118 <__sfputc_r>
 800a164:	1c43      	adds	r3, r0, #1
 800a166:	d1f3      	bne.n	800a150 <__sfputs_r+0xa>
 800a168:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800a16c <_vfiprintf_r>:
 800a16c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a170:	460d      	mov	r5, r1
 800a172:	b09d      	sub	sp, #116	; 0x74
 800a174:	4614      	mov	r4, r2
 800a176:	4698      	mov	r8, r3
 800a178:	4606      	mov	r6, r0
 800a17a:	b118      	cbz	r0, 800a184 <_vfiprintf_r+0x18>
 800a17c:	6a03      	ldr	r3, [r0, #32]
 800a17e:	b90b      	cbnz	r3, 800a184 <_vfiprintf_r+0x18>
 800a180:	f7ff fa6c 	bl	800965c <__sinit>
 800a184:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800a186:	07d9      	lsls	r1, r3, #31
 800a188:	d405      	bmi.n	800a196 <_vfiprintf_r+0x2a>
 800a18a:	89ab      	ldrh	r3, [r5, #12]
 800a18c:	059a      	lsls	r2, r3, #22
 800a18e:	d402      	bmi.n	800a196 <_vfiprintf_r+0x2a>
 800a190:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800a192:	f7ff fd3a 	bl	8009c0a <__retarget_lock_acquire_recursive>
 800a196:	89ab      	ldrh	r3, [r5, #12]
 800a198:	071b      	lsls	r3, r3, #28
 800a19a:	d501      	bpl.n	800a1a0 <_vfiprintf_r+0x34>
 800a19c:	692b      	ldr	r3, [r5, #16]
 800a19e:	b99b      	cbnz	r3, 800a1c8 <_vfiprintf_r+0x5c>
 800a1a0:	4629      	mov	r1, r5
 800a1a2:	4630      	mov	r0, r6
 800a1a4:	f7ff fb9e 	bl	80098e4 <__swsetup_r>
 800a1a8:	b170      	cbz	r0, 800a1c8 <_vfiprintf_r+0x5c>
 800a1aa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800a1ac:	07dc      	lsls	r4, r3, #31
 800a1ae:	d504      	bpl.n	800a1ba <_vfiprintf_r+0x4e>
 800a1b0:	f04f 30ff 	mov.w	r0, #4294967295
 800a1b4:	b01d      	add	sp, #116	; 0x74
 800a1b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a1ba:	89ab      	ldrh	r3, [r5, #12]
 800a1bc:	0598      	lsls	r0, r3, #22
 800a1be:	d4f7      	bmi.n	800a1b0 <_vfiprintf_r+0x44>
 800a1c0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800a1c2:	f7ff fd23 	bl	8009c0c <__retarget_lock_release_recursive>
 800a1c6:	e7f3      	b.n	800a1b0 <_vfiprintf_r+0x44>
 800a1c8:	2300      	movs	r3, #0
 800a1ca:	9309      	str	r3, [sp, #36]	; 0x24
 800a1cc:	2320      	movs	r3, #32
 800a1ce:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800a1d2:	f8cd 800c 	str.w	r8, [sp, #12]
 800a1d6:	2330      	movs	r3, #48	; 0x30
 800a1d8:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 800a38c <_vfiprintf_r+0x220>
 800a1dc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800a1e0:	f04f 0901 	mov.w	r9, #1
 800a1e4:	4623      	mov	r3, r4
 800a1e6:	469a      	mov	sl, r3
 800a1e8:	f813 2b01 	ldrb.w	r2, [r3], #1
 800a1ec:	b10a      	cbz	r2, 800a1f2 <_vfiprintf_r+0x86>
 800a1ee:	2a25      	cmp	r2, #37	; 0x25
 800a1f0:	d1f9      	bne.n	800a1e6 <_vfiprintf_r+0x7a>
 800a1f2:	ebba 0b04 	subs.w	fp, sl, r4
 800a1f6:	d00b      	beq.n	800a210 <_vfiprintf_r+0xa4>
 800a1f8:	465b      	mov	r3, fp
 800a1fa:	4622      	mov	r2, r4
 800a1fc:	4629      	mov	r1, r5
 800a1fe:	4630      	mov	r0, r6
 800a200:	f7ff ffa1 	bl	800a146 <__sfputs_r>
 800a204:	3001      	adds	r0, #1
 800a206:	f000 80a9 	beq.w	800a35c <_vfiprintf_r+0x1f0>
 800a20a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800a20c:	445a      	add	r2, fp
 800a20e:	9209      	str	r2, [sp, #36]	; 0x24
 800a210:	f89a 3000 	ldrb.w	r3, [sl]
 800a214:	2b00      	cmp	r3, #0
 800a216:	f000 80a1 	beq.w	800a35c <_vfiprintf_r+0x1f0>
 800a21a:	2300      	movs	r3, #0
 800a21c:	f04f 32ff 	mov.w	r2, #4294967295
 800a220:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800a224:	f10a 0a01 	add.w	sl, sl, #1
 800a228:	9304      	str	r3, [sp, #16]
 800a22a:	9307      	str	r3, [sp, #28]
 800a22c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800a230:	931a      	str	r3, [sp, #104]	; 0x68
 800a232:	4654      	mov	r4, sl
 800a234:	2205      	movs	r2, #5
 800a236:	f814 1b01 	ldrb.w	r1, [r4], #1
 800a23a:	4854      	ldr	r0, [pc, #336]	; (800a38c <_vfiprintf_r+0x220>)
 800a23c:	f7f5 fff0 	bl	8000220 <memchr>
 800a240:	9a04      	ldr	r2, [sp, #16]
 800a242:	b9d8      	cbnz	r0, 800a27c <_vfiprintf_r+0x110>
 800a244:	06d1      	lsls	r1, r2, #27
 800a246:	bf44      	itt	mi
 800a248:	2320      	movmi	r3, #32
 800a24a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800a24e:	0713      	lsls	r3, r2, #28
 800a250:	bf44      	itt	mi
 800a252:	232b      	movmi	r3, #43	; 0x2b
 800a254:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800a258:	f89a 3000 	ldrb.w	r3, [sl]
 800a25c:	2b2a      	cmp	r3, #42	; 0x2a
 800a25e:	d015      	beq.n	800a28c <_vfiprintf_r+0x120>
 800a260:	9a07      	ldr	r2, [sp, #28]
 800a262:	4654      	mov	r4, sl
 800a264:	2000      	movs	r0, #0
 800a266:	f04f 0c0a 	mov.w	ip, #10
 800a26a:	4621      	mov	r1, r4
 800a26c:	f811 3b01 	ldrb.w	r3, [r1], #1
 800a270:	3b30      	subs	r3, #48	; 0x30
 800a272:	2b09      	cmp	r3, #9
 800a274:	d94d      	bls.n	800a312 <_vfiprintf_r+0x1a6>
 800a276:	b1b0      	cbz	r0, 800a2a6 <_vfiprintf_r+0x13a>
 800a278:	9207      	str	r2, [sp, #28]
 800a27a:	e014      	b.n	800a2a6 <_vfiprintf_r+0x13a>
 800a27c:	eba0 0308 	sub.w	r3, r0, r8
 800a280:	fa09 f303 	lsl.w	r3, r9, r3
 800a284:	4313      	orrs	r3, r2
 800a286:	9304      	str	r3, [sp, #16]
 800a288:	46a2      	mov	sl, r4
 800a28a:	e7d2      	b.n	800a232 <_vfiprintf_r+0xc6>
 800a28c:	9b03      	ldr	r3, [sp, #12]
 800a28e:	1d19      	adds	r1, r3, #4
 800a290:	681b      	ldr	r3, [r3, #0]
 800a292:	9103      	str	r1, [sp, #12]
 800a294:	2b00      	cmp	r3, #0
 800a296:	bfbb      	ittet	lt
 800a298:	425b      	neglt	r3, r3
 800a29a:	f042 0202 	orrlt.w	r2, r2, #2
 800a29e:	9307      	strge	r3, [sp, #28]
 800a2a0:	9307      	strlt	r3, [sp, #28]
 800a2a2:	bfb8      	it	lt
 800a2a4:	9204      	strlt	r2, [sp, #16]
 800a2a6:	7823      	ldrb	r3, [r4, #0]
 800a2a8:	2b2e      	cmp	r3, #46	; 0x2e
 800a2aa:	d10c      	bne.n	800a2c6 <_vfiprintf_r+0x15a>
 800a2ac:	7863      	ldrb	r3, [r4, #1]
 800a2ae:	2b2a      	cmp	r3, #42	; 0x2a
 800a2b0:	d134      	bne.n	800a31c <_vfiprintf_r+0x1b0>
 800a2b2:	9b03      	ldr	r3, [sp, #12]
 800a2b4:	1d1a      	adds	r2, r3, #4
 800a2b6:	681b      	ldr	r3, [r3, #0]
 800a2b8:	9203      	str	r2, [sp, #12]
 800a2ba:	2b00      	cmp	r3, #0
 800a2bc:	bfb8      	it	lt
 800a2be:	f04f 33ff 	movlt.w	r3, #4294967295
 800a2c2:	3402      	adds	r4, #2
 800a2c4:	9305      	str	r3, [sp, #20]
 800a2c6:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 800a39c <_vfiprintf_r+0x230>
 800a2ca:	7821      	ldrb	r1, [r4, #0]
 800a2cc:	2203      	movs	r2, #3
 800a2ce:	4650      	mov	r0, sl
 800a2d0:	f7f5 ffa6 	bl	8000220 <memchr>
 800a2d4:	b138      	cbz	r0, 800a2e6 <_vfiprintf_r+0x17a>
 800a2d6:	9b04      	ldr	r3, [sp, #16]
 800a2d8:	eba0 000a 	sub.w	r0, r0, sl
 800a2dc:	2240      	movs	r2, #64	; 0x40
 800a2de:	4082      	lsls	r2, r0
 800a2e0:	4313      	orrs	r3, r2
 800a2e2:	3401      	adds	r4, #1
 800a2e4:	9304      	str	r3, [sp, #16]
 800a2e6:	f814 1b01 	ldrb.w	r1, [r4], #1
 800a2ea:	4829      	ldr	r0, [pc, #164]	; (800a390 <_vfiprintf_r+0x224>)
 800a2ec:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800a2f0:	2206      	movs	r2, #6
 800a2f2:	f7f5 ff95 	bl	8000220 <memchr>
 800a2f6:	2800      	cmp	r0, #0
 800a2f8:	d03f      	beq.n	800a37a <_vfiprintf_r+0x20e>
 800a2fa:	4b26      	ldr	r3, [pc, #152]	; (800a394 <_vfiprintf_r+0x228>)
 800a2fc:	bb1b      	cbnz	r3, 800a346 <_vfiprintf_r+0x1da>
 800a2fe:	9b03      	ldr	r3, [sp, #12]
 800a300:	3307      	adds	r3, #7
 800a302:	f023 0307 	bic.w	r3, r3, #7
 800a306:	3308      	adds	r3, #8
 800a308:	9303      	str	r3, [sp, #12]
 800a30a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a30c:	443b      	add	r3, r7
 800a30e:	9309      	str	r3, [sp, #36]	; 0x24
 800a310:	e768      	b.n	800a1e4 <_vfiprintf_r+0x78>
 800a312:	fb0c 3202 	mla	r2, ip, r2, r3
 800a316:	460c      	mov	r4, r1
 800a318:	2001      	movs	r0, #1
 800a31a:	e7a6      	b.n	800a26a <_vfiprintf_r+0xfe>
 800a31c:	2300      	movs	r3, #0
 800a31e:	3401      	adds	r4, #1
 800a320:	9305      	str	r3, [sp, #20]
 800a322:	4619      	mov	r1, r3
 800a324:	f04f 0c0a 	mov.w	ip, #10
 800a328:	4620      	mov	r0, r4
 800a32a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800a32e:	3a30      	subs	r2, #48	; 0x30
 800a330:	2a09      	cmp	r2, #9
 800a332:	d903      	bls.n	800a33c <_vfiprintf_r+0x1d0>
 800a334:	2b00      	cmp	r3, #0
 800a336:	d0c6      	beq.n	800a2c6 <_vfiprintf_r+0x15a>
 800a338:	9105      	str	r1, [sp, #20]
 800a33a:	e7c4      	b.n	800a2c6 <_vfiprintf_r+0x15a>
 800a33c:	fb0c 2101 	mla	r1, ip, r1, r2
 800a340:	4604      	mov	r4, r0
 800a342:	2301      	movs	r3, #1
 800a344:	e7f0      	b.n	800a328 <_vfiprintf_r+0x1bc>
 800a346:	ab03      	add	r3, sp, #12
 800a348:	9300      	str	r3, [sp, #0]
 800a34a:	462a      	mov	r2, r5
 800a34c:	4b12      	ldr	r3, [pc, #72]	; (800a398 <_vfiprintf_r+0x22c>)
 800a34e:	a904      	add	r1, sp, #16
 800a350:	4630      	mov	r0, r6
 800a352:	f3af 8000 	nop.w
 800a356:	4607      	mov	r7, r0
 800a358:	1c78      	adds	r0, r7, #1
 800a35a:	d1d6      	bne.n	800a30a <_vfiprintf_r+0x19e>
 800a35c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800a35e:	07d9      	lsls	r1, r3, #31
 800a360:	d405      	bmi.n	800a36e <_vfiprintf_r+0x202>
 800a362:	89ab      	ldrh	r3, [r5, #12]
 800a364:	059a      	lsls	r2, r3, #22
 800a366:	d402      	bmi.n	800a36e <_vfiprintf_r+0x202>
 800a368:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800a36a:	f7ff fc4f 	bl	8009c0c <__retarget_lock_release_recursive>
 800a36e:	89ab      	ldrh	r3, [r5, #12]
 800a370:	065b      	lsls	r3, r3, #25
 800a372:	f53f af1d 	bmi.w	800a1b0 <_vfiprintf_r+0x44>
 800a376:	9809      	ldr	r0, [sp, #36]	; 0x24
 800a378:	e71c      	b.n	800a1b4 <_vfiprintf_r+0x48>
 800a37a:	ab03      	add	r3, sp, #12
 800a37c:	9300      	str	r3, [sp, #0]
 800a37e:	462a      	mov	r2, r5
 800a380:	4b05      	ldr	r3, [pc, #20]	; (800a398 <_vfiprintf_r+0x22c>)
 800a382:	a904      	add	r1, sp, #16
 800a384:	4630      	mov	r0, r6
 800a386:	f000 f879 	bl	800a47c <_printf_i>
 800a38a:	e7e4      	b.n	800a356 <_vfiprintf_r+0x1ea>
 800a38c:	0800af46 	.word	0x0800af46
 800a390:	0800af50 	.word	0x0800af50
 800a394:	00000000 	.word	0x00000000
 800a398:	0800a147 	.word	0x0800a147
 800a39c:	0800af4c 	.word	0x0800af4c

0800a3a0 <_printf_common>:
 800a3a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a3a4:	4616      	mov	r6, r2
 800a3a6:	4699      	mov	r9, r3
 800a3a8:	688a      	ldr	r2, [r1, #8]
 800a3aa:	690b      	ldr	r3, [r1, #16]
 800a3ac:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800a3b0:	4293      	cmp	r3, r2
 800a3b2:	bfb8      	it	lt
 800a3b4:	4613      	movlt	r3, r2
 800a3b6:	6033      	str	r3, [r6, #0]
 800a3b8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800a3bc:	4607      	mov	r7, r0
 800a3be:	460c      	mov	r4, r1
 800a3c0:	b10a      	cbz	r2, 800a3c6 <_printf_common+0x26>
 800a3c2:	3301      	adds	r3, #1
 800a3c4:	6033      	str	r3, [r6, #0]
 800a3c6:	6823      	ldr	r3, [r4, #0]
 800a3c8:	0699      	lsls	r1, r3, #26
 800a3ca:	bf42      	ittt	mi
 800a3cc:	6833      	ldrmi	r3, [r6, #0]
 800a3ce:	3302      	addmi	r3, #2
 800a3d0:	6033      	strmi	r3, [r6, #0]
 800a3d2:	6825      	ldr	r5, [r4, #0]
 800a3d4:	f015 0506 	ands.w	r5, r5, #6
 800a3d8:	d106      	bne.n	800a3e8 <_printf_common+0x48>
 800a3da:	f104 0a19 	add.w	sl, r4, #25
 800a3de:	68e3      	ldr	r3, [r4, #12]
 800a3e0:	6832      	ldr	r2, [r6, #0]
 800a3e2:	1a9b      	subs	r3, r3, r2
 800a3e4:	42ab      	cmp	r3, r5
 800a3e6:	dc26      	bgt.n	800a436 <_printf_common+0x96>
 800a3e8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800a3ec:	1e13      	subs	r3, r2, #0
 800a3ee:	6822      	ldr	r2, [r4, #0]
 800a3f0:	bf18      	it	ne
 800a3f2:	2301      	movne	r3, #1
 800a3f4:	0692      	lsls	r2, r2, #26
 800a3f6:	d42b      	bmi.n	800a450 <_printf_common+0xb0>
 800a3f8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800a3fc:	4649      	mov	r1, r9
 800a3fe:	4638      	mov	r0, r7
 800a400:	47c0      	blx	r8
 800a402:	3001      	adds	r0, #1
 800a404:	d01e      	beq.n	800a444 <_printf_common+0xa4>
 800a406:	6823      	ldr	r3, [r4, #0]
 800a408:	6922      	ldr	r2, [r4, #16]
 800a40a:	f003 0306 	and.w	r3, r3, #6
 800a40e:	2b04      	cmp	r3, #4
 800a410:	bf02      	ittt	eq
 800a412:	68e5      	ldreq	r5, [r4, #12]
 800a414:	6833      	ldreq	r3, [r6, #0]
 800a416:	1aed      	subeq	r5, r5, r3
 800a418:	68a3      	ldr	r3, [r4, #8]
 800a41a:	bf0c      	ite	eq
 800a41c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800a420:	2500      	movne	r5, #0
 800a422:	4293      	cmp	r3, r2
 800a424:	bfc4      	itt	gt
 800a426:	1a9b      	subgt	r3, r3, r2
 800a428:	18ed      	addgt	r5, r5, r3
 800a42a:	2600      	movs	r6, #0
 800a42c:	341a      	adds	r4, #26
 800a42e:	42b5      	cmp	r5, r6
 800a430:	d11a      	bne.n	800a468 <_printf_common+0xc8>
 800a432:	2000      	movs	r0, #0
 800a434:	e008      	b.n	800a448 <_printf_common+0xa8>
 800a436:	2301      	movs	r3, #1
 800a438:	4652      	mov	r2, sl
 800a43a:	4649      	mov	r1, r9
 800a43c:	4638      	mov	r0, r7
 800a43e:	47c0      	blx	r8
 800a440:	3001      	adds	r0, #1
 800a442:	d103      	bne.n	800a44c <_printf_common+0xac>
 800a444:	f04f 30ff 	mov.w	r0, #4294967295
 800a448:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a44c:	3501      	adds	r5, #1
 800a44e:	e7c6      	b.n	800a3de <_printf_common+0x3e>
 800a450:	18e1      	adds	r1, r4, r3
 800a452:	1c5a      	adds	r2, r3, #1
 800a454:	2030      	movs	r0, #48	; 0x30
 800a456:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800a45a:	4422      	add	r2, r4
 800a45c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800a460:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800a464:	3302      	adds	r3, #2
 800a466:	e7c7      	b.n	800a3f8 <_printf_common+0x58>
 800a468:	2301      	movs	r3, #1
 800a46a:	4622      	mov	r2, r4
 800a46c:	4649      	mov	r1, r9
 800a46e:	4638      	mov	r0, r7
 800a470:	47c0      	blx	r8
 800a472:	3001      	adds	r0, #1
 800a474:	d0e6      	beq.n	800a444 <_printf_common+0xa4>
 800a476:	3601      	adds	r6, #1
 800a478:	e7d9      	b.n	800a42e <_printf_common+0x8e>
	...

0800a47c <_printf_i>:
 800a47c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800a480:	7e0f      	ldrb	r7, [r1, #24]
 800a482:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800a484:	2f78      	cmp	r7, #120	; 0x78
 800a486:	4691      	mov	r9, r2
 800a488:	4680      	mov	r8, r0
 800a48a:	460c      	mov	r4, r1
 800a48c:	469a      	mov	sl, r3
 800a48e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800a492:	d807      	bhi.n	800a4a4 <_printf_i+0x28>
 800a494:	2f62      	cmp	r7, #98	; 0x62
 800a496:	d80a      	bhi.n	800a4ae <_printf_i+0x32>
 800a498:	2f00      	cmp	r7, #0
 800a49a:	f000 80d4 	beq.w	800a646 <_printf_i+0x1ca>
 800a49e:	2f58      	cmp	r7, #88	; 0x58
 800a4a0:	f000 80c0 	beq.w	800a624 <_printf_i+0x1a8>
 800a4a4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800a4a8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800a4ac:	e03a      	b.n	800a524 <_printf_i+0xa8>
 800a4ae:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800a4b2:	2b15      	cmp	r3, #21
 800a4b4:	d8f6      	bhi.n	800a4a4 <_printf_i+0x28>
 800a4b6:	a101      	add	r1, pc, #4	; (adr r1, 800a4bc <_printf_i+0x40>)
 800a4b8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800a4bc:	0800a515 	.word	0x0800a515
 800a4c0:	0800a529 	.word	0x0800a529
 800a4c4:	0800a4a5 	.word	0x0800a4a5
 800a4c8:	0800a4a5 	.word	0x0800a4a5
 800a4cc:	0800a4a5 	.word	0x0800a4a5
 800a4d0:	0800a4a5 	.word	0x0800a4a5
 800a4d4:	0800a529 	.word	0x0800a529
 800a4d8:	0800a4a5 	.word	0x0800a4a5
 800a4dc:	0800a4a5 	.word	0x0800a4a5
 800a4e0:	0800a4a5 	.word	0x0800a4a5
 800a4e4:	0800a4a5 	.word	0x0800a4a5
 800a4e8:	0800a62d 	.word	0x0800a62d
 800a4ec:	0800a555 	.word	0x0800a555
 800a4f0:	0800a5e7 	.word	0x0800a5e7
 800a4f4:	0800a4a5 	.word	0x0800a4a5
 800a4f8:	0800a4a5 	.word	0x0800a4a5
 800a4fc:	0800a64f 	.word	0x0800a64f
 800a500:	0800a4a5 	.word	0x0800a4a5
 800a504:	0800a555 	.word	0x0800a555
 800a508:	0800a4a5 	.word	0x0800a4a5
 800a50c:	0800a4a5 	.word	0x0800a4a5
 800a510:	0800a5ef 	.word	0x0800a5ef
 800a514:	682b      	ldr	r3, [r5, #0]
 800a516:	1d1a      	adds	r2, r3, #4
 800a518:	681b      	ldr	r3, [r3, #0]
 800a51a:	602a      	str	r2, [r5, #0]
 800a51c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800a520:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800a524:	2301      	movs	r3, #1
 800a526:	e09f      	b.n	800a668 <_printf_i+0x1ec>
 800a528:	6820      	ldr	r0, [r4, #0]
 800a52a:	682b      	ldr	r3, [r5, #0]
 800a52c:	0607      	lsls	r7, r0, #24
 800a52e:	f103 0104 	add.w	r1, r3, #4
 800a532:	6029      	str	r1, [r5, #0]
 800a534:	d501      	bpl.n	800a53a <_printf_i+0xbe>
 800a536:	681e      	ldr	r6, [r3, #0]
 800a538:	e003      	b.n	800a542 <_printf_i+0xc6>
 800a53a:	0646      	lsls	r6, r0, #25
 800a53c:	d5fb      	bpl.n	800a536 <_printf_i+0xba>
 800a53e:	f9b3 6000 	ldrsh.w	r6, [r3]
 800a542:	2e00      	cmp	r6, #0
 800a544:	da03      	bge.n	800a54e <_printf_i+0xd2>
 800a546:	232d      	movs	r3, #45	; 0x2d
 800a548:	4276      	negs	r6, r6
 800a54a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800a54e:	485a      	ldr	r0, [pc, #360]	; (800a6b8 <_printf_i+0x23c>)
 800a550:	230a      	movs	r3, #10
 800a552:	e012      	b.n	800a57a <_printf_i+0xfe>
 800a554:	682b      	ldr	r3, [r5, #0]
 800a556:	6820      	ldr	r0, [r4, #0]
 800a558:	1d19      	adds	r1, r3, #4
 800a55a:	6029      	str	r1, [r5, #0]
 800a55c:	0605      	lsls	r5, r0, #24
 800a55e:	d501      	bpl.n	800a564 <_printf_i+0xe8>
 800a560:	681e      	ldr	r6, [r3, #0]
 800a562:	e002      	b.n	800a56a <_printf_i+0xee>
 800a564:	0641      	lsls	r1, r0, #25
 800a566:	d5fb      	bpl.n	800a560 <_printf_i+0xe4>
 800a568:	881e      	ldrh	r6, [r3, #0]
 800a56a:	4853      	ldr	r0, [pc, #332]	; (800a6b8 <_printf_i+0x23c>)
 800a56c:	2f6f      	cmp	r7, #111	; 0x6f
 800a56e:	bf0c      	ite	eq
 800a570:	2308      	moveq	r3, #8
 800a572:	230a      	movne	r3, #10
 800a574:	2100      	movs	r1, #0
 800a576:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800a57a:	6865      	ldr	r5, [r4, #4]
 800a57c:	60a5      	str	r5, [r4, #8]
 800a57e:	2d00      	cmp	r5, #0
 800a580:	bfa2      	ittt	ge
 800a582:	6821      	ldrge	r1, [r4, #0]
 800a584:	f021 0104 	bicge.w	r1, r1, #4
 800a588:	6021      	strge	r1, [r4, #0]
 800a58a:	b90e      	cbnz	r6, 800a590 <_printf_i+0x114>
 800a58c:	2d00      	cmp	r5, #0
 800a58e:	d04b      	beq.n	800a628 <_printf_i+0x1ac>
 800a590:	4615      	mov	r5, r2
 800a592:	fbb6 f1f3 	udiv	r1, r6, r3
 800a596:	fb03 6711 	mls	r7, r3, r1, r6
 800a59a:	5dc7      	ldrb	r7, [r0, r7]
 800a59c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800a5a0:	4637      	mov	r7, r6
 800a5a2:	42bb      	cmp	r3, r7
 800a5a4:	460e      	mov	r6, r1
 800a5a6:	d9f4      	bls.n	800a592 <_printf_i+0x116>
 800a5a8:	2b08      	cmp	r3, #8
 800a5aa:	d10b      	bne.n	800a5c4 <_printf_i+0x148>
 800a5ac:	6823      	ldr	r3, [r4, #0]
 800a5ae:	07de      	lsls	r6, r3, #31
 800a5b0:	d508      	bpl.n	800a5c4 <_printf_i+0x148>
 800a5b2:	6923      	ldr	r3, [r4, #16]
 800a5b4:	6861      	ldr	r1, [r4, #4]
 800a5b6:	4299      	cmp	r1, r3
 800a5b8:	bfde      	ittt	le
 800a5ba:	2330      	movle	r3, #48	; 0x30
 800a5bc:	f805 3c01 	strble.w	r3, [r5, #-1]
 800a5c0:	f105 35ff 	addle.w	r5, r5, #4294967295
 800a5c4:	1b52      	subs	r2, r2, r5
 800a5c6:	6122      	str	r2, [r4, #16]
 800a5c8:	f8cd a000 	str.w	sl, [sp]
 800a5cc:	464b      	mov	r3, r9
 800a5ce:	aa03      	add	r2, sp, #12
 800a5d0:	4621      	mov	r1, r4
 800a5d2:	4640      	mov	r0, r8
 800a5d4:	f7ff fee4 	bl	800a3a0 <_printf_common>
 800a5d8:	3001      	adds	r0, #1
 800a5da:	d14a      	bne.n	800a672 <_printf_i+0x1f6>
 800a5dc:	f04f 30ff 	mov.w	r0, #4294967295
 800a5e0:	b004      	add	sp, #16
 800a5e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a5e6:	6823      	ldr	r3, [r4, #0]
 800a5e8:	f043 0320 	orr.w	r3, r3, #32
 800a5ec:	6023      	str	r3, [r4, #0]
 800a5ee:	4833      	ldr	r0, [pc, #204]	; (800a6bc <_printf_i+0x240>)
 800a5f0:	2778      	movs	r7, #120	; 0x78
 800a5f2:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800a5f6:	6823      	ldr	r3, [r4, #0]
 800a5f8:	6829      	ldr	r1, [r5, #0]
 800a5fa:	061f      	lsls	r7, r3, #24
 800a5fc:	f851 6b04 	ldr.w	r6, [r1], #4
 800a600:	d402      	bmi.n	800a608 <_printf_i+0x18c>
 800a602:	065f      	lsls	r7, r3, #25
 800a604:	bf48      	it	mi
 800a606:	b2b6      	uxthmi	r6, r6
 800a608:	07df      	lsls	r7, r3, #31
 800a60a:	bf48      	it	mi
 800a60c:	f043 0320 	orrmi.w	r3, r3, #32
 800a610:	6029      	str	r1, [r5, #0]
 800a612:	bf48      	it	mi
 800a614:	6023      	strmi	r3, [r4, #0]
 800a616:	b91e      	cbnz	r6, 800a620 <_printf_i+0x1a4>
 800a618:	6823      	ldr	r3, [r4, #0]
 800a61a:	f023 0320 	bic.w	r3, r3, #32
 800a61e:	6023      	str	r3, [r4, #0]
 800a620:	2310      	movs	r3, #16
 800a622:	e7a7      	b.n	800a574 <_printf_i+0xf8>
 800a624:	4824      	ldr	r0, [pc, #144]	; (800a6b8 <_printf_i+0x23c>)
 800a626:	e7e4      	b.n	800a5f2 <_printf_i+0x176>
 800a628:	4615      	mov	r5, r2
 800a62a:	e7bd      	b.n	800a5a8 <_printf_i+0x12c>
 800a62c:	682b      	ldr	r3, [r5, #0]
 800a62e:	6826      	ldr	r6, [r4, #0]
 800a630:	6961      	ldr	r1, [r4, #20]
 800a632:	1d18      	adds	r0, r3, #4
 800a634:	6028      	str	r0, [r5, #0]
 800a636:	0635      	lsls	r5, r6, #24
 800a638:	681b      	ldr	r3, [r3, #0]
 800a63a:	d501      	bpl.n	800a640 <_printf_i+0x1c4>
 800a63c:	6019      	str	r1, [r3, #0]
 800a63e:	e002      	b.n	800a646 <_printf_i+0x1ca>
 800a640:	0670      	lsls	r0, r6, #25
 800a642:	d5fb      	bpl.n	800a63c <_printf_i+0x1c0>
 800a644:	8019      	strh	r1, [r3, #0]
 800a646:	2300      	movs	r3, #0
 800a648:	6123      	str	r3, [r4, #16]
 800a64a:	4615      	mov	r5, r2
 800a64c:	e7bc      	b.n	800a5c8 <_printf_i+0x14c>
 800a64e:	682b      	ldr	r3, [r5, #0]
 800a650:	1d1a      	adds	r2, r3, #4
 800a652:	602a      	str	r2, [r5, #0]
 800a654:	681d      	ldr	r5, [r3, #0]
 800a656:	6862      	ldr	r2, [r4, #4]
 800a658:	2100      	movs	r1, #0
 800a65a:	4628      	mov	r0, r5
 800a65c:	f7f5 fde0 	bl	8000220 <memchr>
 800a660:	b108      	cbz	r0, 800a666 <_printf_i+0x1ea>
 800a662:	1b40      	subs	r0, r0, r5
 800a664:	6060      	str	r0, [r4, #4]
 800a666:	6863      	ldr	r3, [r4, #4]
 800a668:	6123      	str	r3, [r4, #16]
 800a66a:	2300      	movs	r3, #0
 800a66c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800a670:	e7aa      	b.n	800a5c8 <_printf_i+0x14c>
 800a672:	6923      	ldr	r3, [r4, #16]
 800a674:	462a      	mov	r2, r5
 800a676:	4649      	mov	r1, r9
 800a678:	4640      	mov	r0, r8
 800a67a:	47d0      	blx	sl
 800a67c:	3001      	adds	r0, #1
 800a67e:	d0ad      	beq.n	800a5dc <_printf_i+0x160>
 800a680:	6823      	ldr	r3, [r4, #0]
 800a682:	079b      	lsls	r3, r3, #30
 800a684:	d413      	bmi.n	800a6ae <_printf_i+0x232>
 800a686:	68e0      	ldr	r0, [r4, #12]
 800a688:	9b03      	ldr	r3, [sp, #12]
 800a68a:	4298      	cmp	r0, r3
 800a68c:	bfb8      	it	lt
 800a68e:	4618      	movlt	r0, r3
 800a690:	e7a6      	b.n	800a5e0 <_printf_i+0x164>
 800a692:	2301      	movs	r3, #1
 800a694:	4632      	mov	r2, r6
 800a696:	4649      	mov	r1, r9
 800a698:	4640      	mov	r0, r8
 800a69a:	47d0      	blx	sl
 800a69c:	3001      	adds	r0, #1
 800a69e:	d09d      	beq.n	800a5dc <_printf_i+0x160>
 800a6a0:	3501      	adds	r5, #1
 800a6a2:	68e3      	ldr	r3, [r4, #12]
 800a6a4:	9903      	ldr	r1, [sp, #12]
 800a6a6:	1a5b      	subs	r3, r3, r1
 800a6a8:	42ab      	cmp	r3, r5
 800a6aa:	dcf2      	bgt.n	800a692 <_printf_i+0x216>
 800a6ac:	e7eb      	b.n	800a686 <_printf_i+0x20a>
 800a6ae:	2500      	movs	r5, #0
 800a6b0:	f104 0619 	add.w	r6, r4, #25
 800a6b4:	e7f5      	b.n	800a6a2 <_printf_i+0x226>
 800a6b6:	bf00      	nop
 800a6b8:	0800af57 	.word	0x0800af57
 800a6bc:	0800af68 	.word	0x0800af68

0800a6c0 <__sflush_r>:
 800a6c0:	898a      	ldrh	r2, [r1, #12]
 800a6c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a6c6:	4605      	mov	r5, r0
 800a6c8:	0710      	lsls	r0, r2, #28
 800a6ca:	460c      	mov	r4, r1
 800a6cc:	d458      	bmi.n	800a780 <__sflush_r+0xc0>
 800a6ce:	684b      	ldr	r3, [r1, #4]
 800a6d0:	2b00      	cmp	r3, #0
 800a6d2:	dc05      	bgt.n	800a6e0 <__sflush_r+0x20>
 800a6d4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800a6d6:	2b00      	cmp	r3, #0
 800a6d8:	dc02      	bgt.n	800a6e0 <__sflush_r+0x20>
 800a6da:	2000      	movs	r0, #0
 800a6dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a6e0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800a6e2:	2e00      	cmp	r6, #0
 800a6e4:	d0f9      	beq.n	800a6da <__sflush_r+0x1a>
 800a6e6:	2300      	movs	r3, #0
 800a6e8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800a6ec:	682f      	ldr	r7, [r5, #0]
 800a6ee:	6a21      	ldr	r1, [r4, #32]
 800a6f0:	602b      	str	r3, [r5, #0]
 800a6f2:	d032      	beq.n	800a75a <__sflush_r+0x9a>
 800a6f4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800a6f6:	89a3      	ldrh	r3, [r4, #12]
 800a6f8:	075a      	lsls	r2, r3, #29
 800a6fa:	d505      	bpl.n	800a708 <__sflush_r+0x48>
 800a6fc:	6863      	ldr	r3, [r4, #4]
 800a6fe:	1ac0      	subs	r0, r0, r3
 800a700:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800a702:	b10b      	cbz	r3, 800a708 <__sflush_r+0x48>
 800a704:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a706:	1ac0      	subs	r0, r0, r3
 800a708:	2300      	movs	r3, #0
 800a70a:	4602      	mov	r2, r0
 800a70c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800a70e:	6a21      	ldr	r1, [r4, #32]
 800a710:	4628      	mov	r0, r5
 800a712:	47b0      	blx	r6
 800a714:	1c43      	adds	r3, r0, #1
 800a716:	89a3      	ldrh	r3, [r4, #12]
 800a718:	d106      	bne.n	800a728 <__sflush_r+0x68>
 800a71a:	6829      	ldr	r1, [r5, #0]
 800a71c:	291d      	cmp	r1, #29
 800a71e:	d82b      	bhi.n	800a778 <__sflush_r+0xb8>
 800a720:	4a29      	ldr	r2, [pc, #164]	; (800a7c8 <__sflush_r+0x108>)
 800a722:	410a      	asrs	r2, r1
 800a724:	07d6      	lsls	r6, r2, #31
 800a726:	d427      	bmi.n	800a778 <__sflush_r+0xb8>
 800a728:	2200      	movs	r2, #0
 800a72a:	6062      	str	r2, [r4, #4]
 800a72c:	04d9      	lsls	r1, r3, #19
 800a72e:	6922      	ldr	r2, [r4, #16]
 800a730:	6022      	str	r2, [r4, #0]
 800a732:	d504      	bpl.n	800a73e <__sflush_r+0x7e>
 800a734:	1c42      	adds	r2, r0, #1
 800a736:	d101      	bne.n	800a73c <__sflush_r+0x7c>
 800a738:	682b      	ldr	r3, [r5, #0]
 800a73a:	b903      	cbnz	r3, 800a73e <__sflush_r+0x7e>
 800a73c:	6560      	str	r0, [r4, #84]	; 0x54
 800a73e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800a740:	602f      	str	r7, [r5, #0]
 800a742:	2900      	cmp	r1, #0
 800a744:	d0c9      	beq.n	800a6da <__sflush_r+0x1a>
 800a746:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800a74a:	4299      	cmp	r1, r3
 800a74c:	d002      	beq.n	800a754 <__sflush_r+0x94>
 800a74e:	4628      	mov	r0, r5
 800a750:	f7ff fa8a 	bl	8009c68 <_free_r>
 800a754:	2000      	movs	r0, #0
 800a756:	6360      	str	r0, [r4, #52]	; 0x34
 800a758:	e7c0      	b.n	800a6dc <__sflush_r+0x1c>
 800a75a:	2301      	movs	r3, #1
 800a75c:	4628      	mov	r0, r5
 800a75e:	47b0      	blx	r6
 800a760:	1c41      	adds	r1, r0, #1
 800a762:	d1c8      	bne.n	800a6f6 <__sflush_r+0x36>
 800a764:	682b      	ldr	r3, [r5, #0]
 800a766:	2b00      	cmp	r3, #0
 800a768:	d0c5      	beq.n	800a6f6 <__sflush_r+0x36>
 800a76a:	2b1d      	cmp	r3, #29
 800a76c:	d001      	beq.n	800a772 <__sflush_r+0xb2>
 800a76e:	2b16      	cmp	r3, #22
 800a770:	d101      	bne.n	800a776 <__sflush_r+0xb6>
 800a772:	602f      	str	r7, [r5, #0]
 800a774:	e7b1      	b.n	800a6da <__sflush_r+0x1a>
 800a776:	89a3      	ldrh	r3, [r4, #12]
 800a778:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800a77c:	81a3      	strh	r3, [r4, #12]
 800a77e:	e7ad      	b.n	800a6dc <__sflush_r+0x1c>
 800a780:	690f      	ldr	r7, [r1, #16]
 800a782:	2f00      	cmp	r7, #0
 800a784:	d0a9      	beq.n	800a6da <__sflush_r+0x1a>
 800a786:	0793      	lsls	r3, r2, #30
 800a788:	680e      	ldr	r6, [r1, #0]
 800a78a:	bf08      	it	eq
 800a78c:	694b      	ldreq	r3, [r1, #20]
 800a78e:	600f      	str	r7, [r1, #0]
 800a790:	bf18      	it	ne
 800a792:	2300      	movne	r3, #0
 800a794:	eba6 0807 	sub.w	r8, r6, r7
 800a798:	608b      	str	r3, [r1, #8]
 800a79a:	f1b8 0f00 	cmp.w	r8, #0
 800a79e:	dd9c      	ble.n	800a6da <__sflush_r+0x1a>
 800a7a0:	6a21      	ldr	r1, [r4, #32]
 800a7a2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800a7a4:	4643      	mov	r3, r8
 800a7a6:	463a      	mov	r2, r7
 800a7a8:	4628      	mov	r0, r5
 800a7aa:	47b0      	blx	r6
 800a7ac:	2800      	cmp	r0, #0
 800a7ae:	dc06      	bgt.n	800a7be <__sflush_r+0xfe>
 800a7b0:	89a3      	ldrh	r3, [r4, #12]
 800a7b2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800a7b6:	81a3      	strh	r3, [r4, #12]
 800a7b8:	f04f 30ff 	mov.w	r0, #4294967295
 800a7bc:	e78e      	b.n	800a6dc <__sflush_r+0x1c>
 800a7be:	4407      	add	r7, r0
 800a7c0:	eba8 0800 	sub.w	r8, r8, r0
 800a7c4:	e7e9      	b.n	800a79a <__sflush_r+0xda>
 800a7c6:	bf00      	nop
 800a7c8:	dfbffffe 	.word	0xdfbffffe

0800a7cc <_fflush_r>:
 800a7cc:	b538      	push	{r3, r4, r5, lr}
 800a7ce:	690b      	ldr	r3, [r1, #16]
 800a7d0:	4605      	mov	r5, r0
 800a7d2:	460c      	mov	r4, r1
 800a7d4:	b913      	cbnz	r3, 800a7dc <_fflush_r+0x10>
 800a7d6:	2500      	movs	r5, #0
 800a7d8:	4628      	mov	r0, r5
 800a7da:	bd38      	pop	{r3, r4, r5, pc}
 800a7dc:	b118      	cbz	r0, 800a7e6 <_fflush_r+0x1a>
 800a7de:	6a03      	ldr	r3, [r0, #32]
 800a7e0:	b90b      	cbnz	r3, 800a7e6 <_fflush_r+0x1a>
 800a7e2:	f7fe ff3b 	bl	800965c <__sinit>
 800a7e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800a7ea:	2b00      	cmp	r3, #0
 800a7ec:	d0f3      	beq.n	800a7d6 <_fflush_r+0xa>
 800a7ee:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800a7f0:	07d0      	lsls	r0, r2, #31
 800a7f2:	d404      	bmi.n	800a7fe <_fflush_r+0x32>
 800a7f4:	0599      	lsls	r1, r3, #22
 800a7f6:	d402      	bmi.n	800a7fe <_fflush_r+0x32>
 800a7f8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800a7fa:	f7ff fa06 	bl	8009c0a <__retarget_lock_acquire_recursive>
 800a7fe:	4628      	mov	r0, r5
 800a800:	4621      	mov	r1, r4
 800a802:	f7ff ff5d 	bl	800a6c0 <__sflush_r>
 800a806:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800a808:	07da      	lsls	r2, r3, #31
 800a80a:	4605      	mov	r5, r0
 800a80c:	d4e4      	bmi.n	800a7d8 <_fflush_r+0xc>
 800a80e:	89a3      	ldrh	r3, [r4, #12]
 800a810:	059b      	lsls	r3, r3, #22
 800a812:	d4e1      	bmi.n	800a7d8 <_fflush_r+0xc>
 800a814:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800a816:	f7ff f9f9 	bl	8009c0c <__retarget_lock_release_recursive>
 800a81a:	e7dd      	b.n	800a7d8 <_fflush_r+0xc>

0800a81c <fiprintf>:
 800a81c:	b40e      	push	{r1, r2, r3}
 800a81e:	b503      	push	{r0, r1, lr}
 800a820:	4601      	mov	r1, r0
 800a822:	ab03      	add	r3, sp, #12
 800a824:	4805      	ldr	r0, [pc, #20]	; (800a83c <fiprintf+0x20>)
 800a826:	f853 2b04 	ldr.w	r2, [r3], #4
 800a82a:	6800      	ldr	r0, [r0, #0]
 800a82c:	9301      	str	r3, [sp, #4]
 800a82e:	f7ff fc9d 	bl	800a16c <_vfiprintf_r>
 800a832:	b002      	add	sp, #8
 800a834:	f85d eb04 	ldr.w	lr, [sp], #4
 800a838:	b003      	add	sp, #12
 800a83a:	4770      	bx	lr
 800a83c:	20000068 	.word	0x20000068

0800a840 <__swhatbuf_r>:
 800a840:	b570      	push	{r4, r5, r6, lr}
 800a842:	460c      	mov	r4, r1
 800a844:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a848:	2900      	cmp	r1, #0
 800a84a:	b096      	sub	sp, #88	; 0x58
 800a84c:	4615      	mov	r5, r2
 800a84e:	461e      	mov	r6, r3
 800a850:	da0d      	bge.n	800a86e <__swhatbuf_r+0x2e>
 800a852:	89a3      	ldrh	r3, [r4, #12]
 800a854:	f013 0f80 	tst.w	r3, #128	; 0x80
 800a858:	f04f 0100 	mov.w	r1, #0
 800a85c:	bf0c      	ite	eq
 800a85e:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 800a862:	2340      	movne	r3, #64	; 0x40
 800a864:	2000      	movs	r0, #0
 800a866:	6031      	str	r1, [r6, #0]
 800a868:	602b      	str	r3, [r5, #0]
 800a86a:	b016      	add	sp, #88	; 0x58
 800a86c:	bd70      	pop	{r4, r5, r6, pc}
 800a86e:	466a      	mov	r2, sp
 800a870:	f000 f862 	bl	800a938 <_fstat_r>
 800a874:	2800      	cmp	r0, #0
 800a876:	dbec      	blt.n	800a852 <__swhatbuf_r+0x12>
 800a878:	9901      	ldr	r1, [sp, #4]
 800a87a:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 800a87e:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 800a882:	4259      	negs	r1, r3
 800a884:	4159      	adcs	r1, r3
 800a886:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800a88a:	e7eb      	b.n	800a864 <__swhatbuf_r+0x24>

0800a88c <__smakebuf_r>:
 800a88c:	898b      	ldrh	r3, [r1, #12]
 800a88e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a890:	079d      	lsls	r5, r3, #30
 800a892:	4606      	mov	r6, r0
 800a894:	460c      	mov	r4, r1
 800a896:	d507      	bpl.n	800a8a8 <__smakebuf_r+0x1c>
 800a898:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800a89c:	6023      	str	r3, [r4, #0]
 800a89e:	6123      	str	r3, [r4, #16]
 800a8a0:	2301      	movs	r3, #1
 800a8a2:	6163      	str	r3, [r4, #20]
 800a8a4:	b002      	add	sp, #8
 800a8a6:	bd70      	pop	{r4, r5, r6, pc}
 800a8a8:	ab01      	add	r3, sp, #4
 800a8aa:	466a      	mov	r2, sp
 800a8ac:	f7ff ffc8 	bl	800a840 <__swhatbuf_r>
 800a8b0:	9900      	ldr	r1, [sp, #0]
 800a8b2:	4605      	mov	r5, r0
 800a8b4:	4630      	mov	r0, r6
 800a8b6:	f7ff fa4b 	bl	8009d50 <_malloc_r>
 800a8ba:	b948      	cbnz	r0, 800a8d0 <__smakebuf_r+0x44>
 800a8bc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800a8c0:	059a      	lsls	r2, r3, #22
 800a8c2:	d4ef      	bmi.n	800a8a4 <__smakebuf_r+0x18>
 800a8c4:	f023 0303 	bic.w	r3, r3, #3
 800a8c8:	f043 0302 	orr.w	r3, r3, #2
 800a8cc:	81a3      	strh	r3, [r4, #12]
 800a8ce:	e7e3      	b.n	800a898 <__smakebuf_r+0xc>
 800a8d0:	89a3      	ldrh	r3, [r4, #12]
 800a8d2:	6020      	str	r0, [r4, #0]
 800a8d4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800a8d8:	81a3      	strh	r3, [r4, #12]
 800a8da:	9b00      	ldr	r3, [sp, #0]
 800a8dc:	6163      	str	r3, [r4, #20]
 800a8de:	9b01      	ldr	r3, [sp, #4]
 800a8e0:	6120      	str	r0, [r4, #16]
 800a8e2:	b15b      	cbz	r3, 800a8fc <__smakebuf_r+0x70>
 800a8e4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800a8e8:	4630      	mov	r0, r6
 800a8ea:	f000 f837 	bl	800a95c <_isatty_r>
 800a8ee:	b128      	cbz	r0, 800a8fc <__smakebuf_r+0x70>
 800a8f0:	89a3      	ldrh	r3, [r4, #12]
 800a8f2:	f023 0303 	bic.w	r3, r3, #3
 800a8f6:	f043 0301 	orr.w	r3, r3, #1
 800a8fa:	81a3      	strh	r3, [r4, #12]
 800a8fc:	89a3      	ldrh	r3, [r4, #12]
 800a8fe:	431d      	orrs	r5, r3
 800a900:	81a5      	strh	r5, [r4, #12]
 800a902:	e7cf      	b.n	800a8a4 <__smakebuf_r+0x18>

0800a904 <memmove>:
 800a904:	4288      	cmp	r0, r1
 800a906:	b510      	push	{r4, lr}
 800a908:	eb01 0402 	add.w	r4, r1, r2
 800a90c:	d902      	bls.n	800a914 <memmove+0x10>
 800a90e:	4284      	cmp	r4, r0
 800a910:	4623      	mov	r3, r4
 800a912:	d807      	bhi.n	800a924 <memmove+0x20>
 800a914:	1e43      	subs	r3, r0, #1
 800a916:	42a1      	cmp	r1, r4
 800a918:	d008      	beq.n	800a92c <memmove+0x28>
 800a91a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800a91e:	f803 2f01 	strb.w	r2, [r3, #1]!
 800a922:	e7f8      	b.n	800a916 <memmove+0x12>
 800a924:	4402      	add	r2, r0
 800a926:	4601      	mov	r1, r0
 800a928:	428a      	cmp	r2, r1
 800a92a:	d100      	bne.n	800a92e <memmove+0x2a>
 800a92c:	bd10      	pop	{r4, pc}
 800a92e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800a932:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800a936:	e7f7      	b.n	800a928 <memmove+0x24>

0800a938 <_fstat_r>:
 800a938:	b538      	push	{r3, r4, r5, lr}
 800a93a:	4d07      	ldr	r5, [pc, #28]	; (800a958 <_fstat_r+0x20>)
 800a93c:	2300      	movs	r3, #0
 800a93e:	4604      	mov	r4, r0
 800a940:	4608      	mov	r0, r1
 800a942:	4611      	mov	r1, r2
 800a944:	602b      	str	r3, [r5, #0]
 800a946:	f7f6 ff10 	bl	800176a <_fstat>
 800a94a:	1c43      	adds	r3, r0, #1
 800a94c:	d102      	bne.n	800a954 <_fstat_r+0x1c>
 800a94e:	682b      	ldr	r3, [r5, #0]
 800a950:	b103      	cbz	r3, 800a954 <_fstat_r+0x1c>
 800a952:	6023      	str	r3, [r4, #0]
 800a954:	bd38      	pop	{r3, r4, r5, pc}
 800a956:	bf00      	nop
 800a958:	20005d94 	.word	0x20005d94

0800a95c <_isatty_r>:
 800a95c:	b538      	push	{r3, r4, r5, lr}
 800a95e:	4d06      	ldr	r5, [pc, #24]	; (800a978 <_isatty_r+0x1c>)
 800a960:	2300      	movs	r3, #0
 800a962:	4604      	mov	r4, r0
 800a964:	4608      	mov	r0, r1
 800a966:	602b      	str	r3, [r5, #0]
 800a968:	f7f6 ff0f 	bl	800178a <_isatty>
 800a96c:	1c43      	adds	r3, r0, #1
 800a96e:	d102      	bne.n	800a976 <_isatty_r+0x1a>
 800a970:	682b      	ldr	r3, [r5, #0]
 800a972:	b103      	cbz	r3, 800a976 <_isatty_r+0x1a>
 800a974:	6023      	str	r3, [r4, #0]
 800a976:	bd38      	pop	{r3, r4, r5, pc}
 800a978:	20005d94 	.word	0x20005d94

0800a97c <_sbrk_r>:
 800a97c:	b538      	push	{r3, r4, r5, lr}
 800a97e:	4d06      	ldr	r5, [pc, #24]	; (800a998 <_sbrk_r+0x1c>)
 800a980:	2300      	movs	r3, #0
 800a982:	4604      	mov	r4, r0
 800a984:	4608      	mov	r0, r1
 800a986:	602b      	str	r3, [r5, #0]
 800a988:	f7f6 ff18 	bl	80017bc <_sbrk>
 800a98c:	1c43      	adds	r3, r0, #1
 800a98e:	d102      	bne.n	800a996 <_sbrk_r+0x1a>
 800a990:	682b      	ldr	r3, [r5, #0]
 800a992:	b103      	cbz	r3, 800a996 <_sbrk_r+0x1a>
 800a994:	6023      	str	r3, [r4, #0]
 800a996:	bd38      	pop	{r3, r4, r5, pc}
 800a998:	20005d94 	.word	0x20005d94

0800a99c <abort>:
 800a99c:	b508      	push	{r3, lr}
 800a99e:	2006      	movs	r0, #6
 800a9a0:	f000 f85a 	bl	800aa58 <raise>
 800a9a4:	2001      	movs	r0, #1
 800a9a6:	f7f6 fead 	bl	8001704 <_exit>

0800a9aa <_realloc_r>:
 800a9aa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a9ae:	4680      	mov	r8, r0
 800a9b0:	4614      	mov	r4, r2
 800a9b2:	460e      	mov	r6, r1
 800a9b4:	b921      	cbnz	r1, 800a9c0 <_realloc_r+0x16>
 800a9b6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a9ba:	4611      	mov	r1, r2
 800a9bc:	f7ff b9c8 	b.w	8009d50 <_malloc_r>
 800a9c0:	b92a      	cbnz	r2, 800a9ce <_realloc_r+0x24>
 800a9c2:	f7ff f951 	bl	8009c68 <_free_r>
 800a9c6:	4625      	mov	r5, r4
 800a9c8:	4628      	mov	r0, r5
 800a9ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a9ce:	f000 f85f 	bl	800aa90 <_malloc_usable_size_r>
 800a9d2:	4284      	cmp	r4, r0
 800a9d4:	4607      	mov	r7, r0
 800a9d6:	d802      	bhi.n	800a9de <_realloc_r+0x34>
 800a9d8:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800a9dc:	d812      	bhi.n	800aa04 <_realloc_r+0x5a>
 800a9de:	4621      	mov	r1, r4
 800a9e0:	4640      	mov	r0, r8
 800a9e2:	f7ff f9b5 	bl	8009d50 <_malloc_r>
 800a9e6:	4605      	mov	r5, r0
 800a9e8:	2800      	cmp	r0, #0
 800a9ea:	d0ed      	beq.n	800a9c8 <_realloc_r+0x1e>
 800a9ec:	42bc      	cmp	r4, r7
 800a9ee:	4622      	mov	r2, r4
 800a9f0:	4631      	mov	r1, r6
 800a9f2:	bf28      	it	cs
 800a9f4:	463a      	movcs	r2, r7
 800a9f6:	f7ff f90a 	bl	8009c0e <memcpy>
 800a9fa:	4631      	mov	r1, r6
 800a9fc:	4640      	mov	r0, r8
 800a9fe:	f7ff f933 	bl	8009c68 <_free_r>
 800aa02:	e7e1      	b.n	800a9c8 <_realloc_r+0x1e>
 800aa04:	4635      	mov	r5, r6
 800aa06:	e7df      	b.n	800a9c8 <_realloc_r+0x1e>

0800aa08 <_raise_r>:
 800aa08:	291f      	cmp	r1, #31
 800aa0a:	b538      	push	{r3, r4, r5, lr}
 800aa0c:	4604      	mov	r4, r0
 800aa0e:	460d      	mov	r5, r1
 800aa10:	d904      	bls.n	800aa1c <_raise_r+0x14>
 800aa12:	2316      	movs	r3, #22
 800aa14:	6003      	str	r3, [r0, #0]
 800aa16:	f04f 30ff 	mov.w	r0, #4294967295
 800aa1a:	bd38      	pop	{r3, r4, r5, pc}
 800aa1c:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 800aa1e:	b112      	cbz	r2, 800aa26 <_raise_r+0x1e>
 800aa20:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800aa24:	b94b      	cbnz	r3, 800aa3a <_raise_r+0x32>
 800aa26:	4620      	mov	r0, r4
 800aa28:	f000 f830 	bl	800aa8c <_getpid_r>
 800aa2c:	462a      	mov	r2, r5
 800aa2e:	4601      	mov	r1, r0
 800aa30:	4620      	mov	r0, r4
 800aa32:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800aa36:	f000 b817 	b.w	800aa68 <_kill_r>
 800aa3a:	2b01      	cmp	r3, #1
 800aa3c:	d00a      	beq.n	800aa54 <_raise_r+0x4c>
 800aa3e:	1c59      	adds	r1, r3, #1
 800aa40:	d103      	bne.n	800aa4a <_raise_r+0x42>
 800aa42:	2316      	movs	r3, #22
 800aa44:	6003      	str	r3, [r0, #0]
 800aa46:	2001      	movs	r0, #1
 800aa48:	e7e7      	b.n	800aa1a <_raise_r+0x12>
 800aa4a:	2400      	movs	r4, #0
 800aa4c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800aa50:	4628      	mov	r0, r5
 800aa52:	4798      	blx	r3
 800aa54:	2000      	movs	r0, #0
 800aa56:	e7e0      	b.n	800aa1a <_raise_r+0x12>

0800aa58 <raise>:
 800aa58:	4b02      	ldr	r3, [pc, #8]	; (800aa64 <raise+0xc>)
 800aa5a:	4601      	mov	r1, r0
 800aa5c:	6818      	ldr	r0, [r3, #0]
 800aa5e:	f7ff bfd3 	b.w	800aa08 <_raise_r>
 800aa62:	bf00      	nop
 800aa64:	20000068 	.word	0x20000068

0800aa68 <_kill_r>:
 800aa68:	b538      	push	{r3, r4, r5, lr}
 800aa6a:	4d07      	ldr	r5, [pc, #28]	; (800aa88 <_kill_r+0x20>)
 800aa6c:	2300      	movs	r3, #0
 800aa6e:	4604      	mov	r4, r0
 800aa70:	4608      	mov	r0, r1
 800aa72:	4611      	mov	r1, r2
 800aa74:	602b      	str	r3, [r5, #0]
 800aa76:	f7f6 fe35 	bl	80016e4 <_kill>
 800aa7a:	1c43      	adds	r3, r0, #1
 800aa7c:	d102      	bne.n	800aa84 <_kill_r+0x1c>
 800aa7e:	682b      	ldr	r3, [r5, #0]
 800aa80:	b103      	cbz	r3, 800aa84 <_kill_r+0x1c>
 800aa82:	6023      	str	r3, [r4, #0]
 800aa84:	bd38      	pop	{r3, r4, r5, pc}
 800aa86:	bf00      	nop
 800aa88:	20005d94 	.word	0x20005d94

0800aa8c <_getpid_r>:
 800aa8c:	f7f6 be22 	b.w	80016d4 <_getpid>

0800aa90 <_malloc_usable_size_r>:
 800aa90:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800aa94:	1f18      	subs	r0, r3, #4
 800aa96:	2b00      	cmp	r3, #0
 800aa98:	bfbc      	itt	lt
 800aa9a:	580b      	ldrlt	r3, [r1, r0]
 800aa9c:	18c0      	addlt	r0, r0, r3
 800aa9e:	4770      	bx	lr

0800aaa0 <_init>:
 800aaa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800aaa2:	bf00      	nop
 800aaa4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800aaa6:	bc08      	pop	{r3}
 800aaa8:	469e      	mov	lr, r3
 800aaaa:	4770      	bx	lr

0800aaac <_fini>:
 800aaac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800aaae:	bf00      	nop
 800aab0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800aab2:	bc08      	pop	{r3}
 800aab4:	469e      	mov	lr, r3
 800aab6:	4770      	bx	lr
